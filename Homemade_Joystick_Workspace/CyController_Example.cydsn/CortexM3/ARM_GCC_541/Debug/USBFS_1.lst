ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBFS_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBFS_1_Init,"ax",%progbits
  20              		.align	2
  21              		.global	USBFS_1_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	USBFS_1_Init, %function
  25              	USBFS_1_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\USBFS_1.c"
   1:Generated_Source\PSoC5/USBFS_1.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBFS_1.c **** * \file USBFS_1.c
   3:Generated_Source\PSoC5/USBFS_1.c **** * \version 3.20
   4:Generated_Source\PSoC5/USBFS_1.c **** *
   5:Generated_Source\PSoC5/USBFS_1.c **** * \brief
   6:Generated_Source\PSoC5/USBFS_1.c **** *  This file contains the global USBFS API functions.
   7:Generated_Source\PSoC5/USBFS_1.c **** *
   8:Generated_Source\PSoC5/USBFS_1.c **** * Note:
   9:Generated_Source\PSoC5/USBFS_1.c **** *  Many of the functions use an endpoint number. SRAM arrays are sized with 9
  10:Generated_Source\PSoC5/USBFS_1.c **** *  elements, so they are indexed directly by epNumber.  The SIE and ARB
  11:Generated_Source\PSoC5/USBFS_1.c **** *  registers are indexed by variations of epNumber - 1.
  12:Generated_Source\PSoC5/USBFS_1.c **** *
  13:Generated_Source\PSoC5/USBFS_1.c **** ********************************************************************************
  14:Generated_Source\PSoC5/USBFS_1.c **** * \copyright
  15:Generated_Source\PSoC5/USBFS_1.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  16:Generated_Source\PSoC5/USBFS_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  17:Generated_Source\PSoC5/USBFS_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  18:Generated_Source\PSoC5/USBFS_1.c **** * the software package with which this file was provided.
  19:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
  20:Generated_Source\PSoC5/USBFS_1.c **** 
  21:Generated_Source\PSoC5/USBFS_1.c **** #include "USBFS_1_pvt.h"
  22:Generated_Source\PSoC5/USBFS_1.c **** #include "USBFS_1_cydmac.h"
  23:Generated_Source\PSoC5/USBFS_1.c **** #include "USBFS_1_hid.h"
  24:Generated_Source\PSoC5/USBFS_1.c **** #include "USBFS_1_Dp.h"
  25:Generated_Source\PSoC5/USBFS_1.c **** 
  26:Generated_Source\PSoC5/USBFS_1.c **** 
  27:Generated_Source\PSoC5/USBFS_1.c **** /***************************************
  28:Generated_Source\PSoC5/USBFS_1.c **** * Global data allocation
  29:Generated_Source\PSoC5/USBFS_1.c **** ***************************************/
  30:Generated_Source\PSoC5/USBFS_1.c **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 2


  31:Generated_Source\PSoC5/USBFS_1.c **** /** Indicates whether the USBFS has been initialized. The variable is
  32:Generated_Source\PSoC5/USBFS_1.c **** * initialized to 0 after device reset and set to 1 the first time USBFS_Start()
  33:Generated_Source\PSoC5/USBFS_1.c **** * is called. This allows the Component to restart without reinitialization after
  34:Generated_Source\PSoC5/USBFS_1.c **** * the first call to the USBFS_Start() routine.
  35:Generated_Source\PSoC5/USBFS_1.c **** * If re-initialization of the Component is required, the variable should be set
  36:Generated_Source\PSoC5/USBFS_1.c **** * to 0 before the USBFS_Start() routine is called. Alternatively, the USBFS can
  37:Generated_Source\PSoC5/USBFS_1.c **** * be reinitialized by calling both USBFS_Init() and USBFS_InitComponent()
  38:Generated_Source\PSoC5/USBFS_1.c **** * functions.
  39:Generated_Source\PSoC5/USBFS_1.c **** */
  40:Generated_Source\PSoC5/USBFS_1.c **** uint8 USBFS_1_initVar = 0u;
  41:Generated_Source\PSoC5/USBFS_1.c **** 
  42:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA)
  43:Generated_Source\PSoC5/USBFS_1.c ****     #if (CY_PSOC4)
  44:Generated_Source\PSoC5/USBFS_1.c ****         static void USBFS_1_InitEpDma(void);
  45:Generated_Source\PSoC5/USBFS_1.c **** 
  46:Generated_Source\PSoC5/USBFS_1.c ****         /* DMA chanels assigend for endpoints. */
  47:Generated_Source\PSoC5/USBFS_1.c ****         const uint8 USBFS_1_DmaChan[USBFS_1_MAX_EP] =
  48:Generated_Source\PSoC5/USBFS_1.c ****         {
  49:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  50:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  51:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  52:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  53:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  54:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  55:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  56:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  57:Generated_Source\PSoC5/USBFS_1.c ****             0u,
  58:Generated_Source\PSoC5/USBFS_1.c ****         };        
  59:Generated_Source\PSoC5/USBFS_1.c ****     #else
  60:Generated_Source\PSoC5/USBFS_1.c ****         /* DMA chanels assigend for endpoints. */
  61:Generated_Source\PSoC5/USBFS_1.c ****         uint8 USBFS_1_DmaChan[USBFS_1_MAX_EP];
  62:Generated_Source\PSoC5/USBFS_1.c ****         
  63:Generated_Source\PSoC5/USBFS_1.c ****         /* DMA TDs require for PSoC 3/5LP operation. */
  64:Generated_Source\PSoC5/USBFS_1.c ****         uint8 USBFS_1_DmaTd[USBFS_1_MAX_EP];
  65:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (CY_PSOC4) */
  66:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA) */
  67:Generated_Source\PSoC5/USBFS_1.c **** 
  68:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO)
  69:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
  70:Generated_Source\PSoC5/USBFS_1.c ****     /* Number of DMA bursts. */
  71:Generated_Source\PSoC5/USBFS_1.c ****     uint8  USBFS_1_DmaEpBurstCnt   [USBFS_1_MAX_EP];
  72:Generated_Source\PSoC5/USBFS_1.c ****     
  73:Generated_Source\PSoC5/USBFS_1.c ****     /* Number of bytes to transfer in last DMA burst. */
  74:Generated_Source\PSoC5/USBFS_1.c ****     uint8  USBFS_1_DmaEpLastBurstEl[USBFS_1_MAX_EP];
  75:Generated_Source\PSoC5/USBFS_1.c **** 
  76:Generated_Source\PSoC5/USBFS_1.c ****     /* Storage for arrays above. */
  77:Generated_Source\PSoC5/USBFS_1.c ****     uint8  USBFS_1_DmaEpBurstCntBackup  [USBFS_1_MAX_EP];
  78:Generated_Source\PSoC5/USBFS_1.c ****     uint32 USBFS_1_DmaEpBufferAddrBackup[USBFS_1_MAX_EP];
  79:Generated_Source\PSoC5/USBFS_1.c ****      
  80:Generated_Source\PSoC5/USBFS_1.c ****     /* DMA trigger mux output for usb.dma_req[0-7]. */
  81:Generated_Source\PSoC5/USBFS_1.c ****     const uint8 USBFS_1_DmaReqOut[USBFS_1_MAX_EP] =
  82:Generated_Source\PSoC5/USBFS_1.c ****     {
  83:Generated_Source\PSoC5/USBFS_1.c ****         0u,
  84:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_ep1_dma__TR_OUTPUT,
  85:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_ep2_dma__TR_OUTPUT,
  86:Generated_Source\PSoC5/USBFS_1.c ****         0u,
  87:Generated_Source\PSoC5/USBFS_1.c ****         0u,
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 3


  88:Generated_Source\PSoC5/USBFS_1.c ****         0u,
  89:Generated_Source\PSoC5/USBFS_1.c ****         0u,
  90:Generated_Source\PSoC5/USBFS_1.c ****         0u,
  91:Generated_Source\PSoC5/USBFS_1.c ****         0u,
  92:Generated_Source\PSoC5/USBFS_1.c ****     };
  93:Generated_Source\PSoC5/USBFS_1.c **** 
  94:Generated_Source\PSoC5/USBFS_1.c ****     /* DMA trigger mux output for usb.dma_burstend[0-7]. */
  95:Generated_Source\PSoC5/USBFS_1.c ****     const uint8 USBFS_1_DmaBurstEndOut[USBFS_1_MAX_EP] =
  96:Generated_Source\PSoC5/USBFS_1.c ****     {
  97:Generated_Source\PSoC5/USBFS_1.c ****         0u,
  98:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_BURSTEND_0_TR_OUTPUT,
  99:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_BURSTEND_1_TR_OUTPUT,
 100:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_BURSTEND_2_TR_OUTPUT,
 101:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_BURSTEND_3_TR_OUTPUT,
 102:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_BURSTEND_4_TR_OUTPUT,
 103:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_BURSTEND_5_TR_OUTPUT,
 104:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_BURSTEND_6_TR_OUTPUT,
 105:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_BURSTEND_7_TR_OUTPUT
 106:Generated_Source\PSoC5/USBFS_1.c ****     };
 107:Generated_Source\PSoC5/USBFS_1.c ****     
 108:Generated_Source\PSoC5/USBFS_1.c **** #else
 109:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_DMA_AUTO_OPT == 0u)
 110:Generated_Source\PSoC5/USBFS_1.c ****         static uint8 clearInDataRdyStatus = USBFS_1_ARB_EPX_CFG_DEFAULT;
 111:Generated_Source\PSoC5/USBFS_1.c ****         uint8 USBFS_1_DmaNextTd[USBFS_1_MAX_EP];
 112:Generated_Source\PSoC5/USBFS_1.c ****         const uint8 USBFS_1_epX_TD_TERMOUT_EN[USBFS_1_MAX_EP] =
 113:Generated_Source\PSoC5/USBFS_1.c ****         {
 114:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 115:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 116:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 117:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 118:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 119:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 120:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 121:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 122:Generated_Source\PSoC5/USBFS_1.c ****             0u,
 123:Generated_Source\PSoC5/USBFS_1.c ****         };
 124:Generated_Source\PSoC5/USBFS_1.c **** 
 125:Generated_Source\PSoC5/USBFS_1.c ****         volatile uint16 USBFS_1_inLength[USBFS_1_MAX_EP];
 126:Generated_Source\PSoC5/USBFS_1.c ****         const uint8 *USBFS_1_inDataPointer[USBFS_1_MAX_EP];
 127:Generated_Source\PSoC5/USBFS_1.c ****         volatile uint8 USBFS_1_inBufFull[USBFS_1_MAX_EP];
 128:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_DMA_AUTO_OPT == 0u) */
 129:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
 130:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 131:Generated_Source\PSoC5/USBFS_1.c **** 
 132:Generated_Source\PSoC5/USBFS_1.c **** 
 133:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 134:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_Start
 135:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 136:Generated_Source\PSoC5/USBFS_1.c **** *
 137:Generated_Source\PSoC5/USBFS_1.c **** *   This function performs all required initialization for the USBFS component.
 138:Generated_Source\PSoC5/USBFS_1.c **** *   After this function call, the USB device initiates communication with the
 139:Generated_Source\PSoC5/USBFS_1.c **** *   host by pull-up D+ line. This is the preferred method to begin component
 140:Generated_Source\PSoC5/USBFS_1.c **** *   operation.
 141:Generated_Source\PSoC5/USBFS_1.c **** *
 142:Generated_Source\PSoC5/USBFS_1.c **** *   Note that global interrupts have to be enabled because interrupts are
 143:Generated_Source\PSoC5/USBFS_1.c **** *   required for USBFS component operation.
 144:Generated_Source\PSoC5/USBFS_1.c **** *
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 4


 145:Generated_Source\PSoC5/USBFS_1.c **** *   PSoC 4200L devices: when USBFS component configured to DMA with Automatic
 146:Generated_Source\PSoC5/USBFS_1.c **** *   Buffer Management, the DMA interrupt priority is changed to the highest
 147:Generated_Source\PSoC5/USBFS_1.c **** *   (priority 0) inside this function.
 148:Generated_Source\PSoC5/USBFS_1.c **** *
 149:Generated_Source\PSoC5/USBFS_1.c **** *   PSoC 3/PSoC 5LP devices: when USBFS component configured to DMA with
 150:Generated_Source\PSoC5/USBFS_1.c **** *   Automatic Buffer Management, the Arbiter interrupt priority is changed to
 151:Generated_Source\PSoC5/USBFS_1.c **** *   the highest (priority 0) inside this function.
 152:Generated_Source\PSoC5/USBFS_1.c **** *
 153:Generated_Source\PSoC5/USBFS_1.c **** *  \param device
 154:Generated_Source\PSoC5/USBFS_1.c **** *          Contains the device number of the desired device descriptor.
 155:Generated_Source\PSoC5/USBFS_1.c **** *          The device number can be found in the Device Descriptor Tab of
 156:Generated_Source\PSoC5/USBFS_1.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 157:Generated_Source\PSoC5/USBFS_1.c **** *          in the "Device Number" field.
 158:Generated_Source\PSoC5/USBFS_1.c **** *  \param mode:
 159:Generated_Source\PSoC5/USBFS_1.c **** *   The operating voltage. This determines whether the voltage regulator
 160:Generated_Source\PSoC5/USBFS_1.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 161:Generated_Source\PSoC5/USBFS_1.c **** *   operation. Symbolic names and their associated values are given in the
 162:Generated_Source\PSoC5/USBFS_1.c **** *   following list.
 163:Generated_Source\PSoC5/USBFS_1.c **** *
 164:Generated_Source\PSoC5/USBFS_1.c **** *       *USBFS_1_3V_OPERATION* - Disable voltage regulator and pass-
 165:Generated_Source\PSoC5/USBFS_1.c **** *                                      through Vcc for pull-up
 166:Generated_Source\PSoC5/USBFS_1.c **** *
 167:Generated_Source\PSoC5/USBFS_1.c **** *       *USBFS_1_5V_OPERATION* - Enable voltage regulator and use
 168:Generated_Source\PSoC5/USBFS_1.c **** *                                      regulator for pull-up
 169:Generated_Source\PSoC5/USBFS_1.c **** *
 170:Generated_Source\PSoC5/USBFS_1.c **** *       *USBFS_1_DWR_POWER_OPERATION* - Enable or disable the voltage
 171:Generated_Source\PSoC5/USBFS_1.c **** *                                      regulator depending on the power supply
 172:Generated_Source\PSoC5/USBFS_1.c **** *                                      voltage configuration in the DWR tab.
 173:Generated_Source\PSoC5/USBFS_1.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 174:Generated_Source\PSoC5/USBFS_1.c **** *                                      voltage is considered and for PSoC 4A-L,
 175:Generated_Source\PSoC5/USBFS_1.c **** *                                      the VBUS supply voltage is considered.*
 176:Generated_Source\PSoC5/USBFS_1.c **** * \globalvars
 177:Generated_Source\PSoC5/USBFS_1.c **** *  \ref USBFS_1_initVar
 178:Generated_Source\PSoC5/USBFS_1.c **** *
 179:Generated_Source\PSoC5/USBFS_1.c **** * \sideeffect
 180:Generated_Source\PSoC5/USBFS_1.c **** *   This function will reset all communication states to default.
 181:Generated_Source\PSoC5/USBFS_1.c **** *
 182:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
 183:Generated_Source\PSoC5/USBFS_1.c **** *  No.
 184:Generated_Source\PSoC5/USBFS_1.c **** *
 185:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 186:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_Start(uint8 device, uint8 mode) 
 187:Generated_Source\PSoC5/USBFS_1.c **** {
 188:Generated_Source\PSoC5/USBFS_1.c ****     if (0u == USBFS_1_initVar)
 189:Generated_Source\PSoC5/USBFS_1.c ****     {
 190:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_Init();
 191:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_initVar = 1u;
 192:Generated_Source\PSoC5/USBFS_1.c ****     }
 193:Generated_Source\PSoC5/USBFS_1.c **** 
 194:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_InitComponent(device, mode);
 195:Generated_Source\PSoC5/USBFS_1.c **** }
 196:Generated_Source\PSoC5/USBFS_1.c **** 
 197:Generated_Source\PSoC5/USBFS_1.c **** 
 198:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 199:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_Init
 200:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 201:Generated_Source\PSoC5/USBFS_1.c **** *
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 5


 202:Generated_Source\PSoC5/USBFS_1.c **** * This function initializes or restores the component according to the
 203:Generated_Source\PSoC5/USBFS_1.c **** * customizer Configure dialog settings. It is not necessary to call
 204:Generated_Source\PSoC5/USBFS_1.c **** * USBFS_1_Init() because the USBFS_1_Start() routine calls
 205:Generated_Source\PSoC5/USBFS_1.c **** * this function and is the preferred method to begin component operation.
 206:Generated_Source\PSoC5/USBFS_1.c **** *
 207:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
 208:Generated_Source\PSoC5/USBFS_1.c **** *  No.
 209:Generated_Source\PSoC5/USBFS_1.c **** *
 210:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 211:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_Init(void) 
 212:Generated_Source\PSoC5/USBFS_1.c **** {
  28              		.loc 1 212 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 3, -24
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
 213:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
 214:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable clock to USB IP. */
 215:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_USB_CLK_EN_REG = USBFS_1_USB_CLK_CSR_CLK_EN;
 216:Generated_Source\PSoC5/USBFS_1.c **** 
 217:Generated_Source\PSoC5/USBFS_1.c ****     /* The internal regulator (CR1.REG_ENABLE) is enabled in
 218:Generated_Source\PSoC5/USBFS_1.c ****     * USBFS_1_InitComponent() if it is required.
 219:Generated_Source\PSoC5/USBFS_1.c ****     */
 220:Generated_Source\PSoC5/USBFS_1.c **** 
 221:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable USBIO control on drive mode of D+ and D- pins. */
 222:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_USBIO_CR1_REG &= ~ (uint32) USBFS_1_USBIO_CR1_IOMODE;
 223:Generated_Source\PSoC5/USBFS_1.c **** 
 224:Generated_Source\PSoC5/USBFS_1.c ****     /* Set number of LF CLK to detect UBS bus reset. */
 225:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_BUS_RST_CNT_REG = USBFS_1_DEFUALT_BUS_RST_CNT;
 226:Generated_Source\PSoC5/USBFS_1.c **** 
 227:Generated_Source\PSoC5/USBFS_1.c ****     /* Select VBUS detection source and clear PHY isolate. The application level
 228:Generated_Source\PSoC5/USBFS_1.c ****     * must ensure that VBUS is valid. There is no need to wait 2us before VBUS is valid.
 229:Generated_Source\PSoC5/USBFS_1.c ****     */
 230:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_POWER_CTRL_REG = USBFS_1_DEFAULT_POWER_CTRL_VBUS;
 231:Generated_Source\PSoC5/USBFS_1.c **** 
 232:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable PHY detector and single-ended and differential receivers. */
 233:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_POWER_CTRL_REG |= USBFS_1_DEFAULT_POWER_CTRL_PHY;
 234:Generated_Source\PSoC5/USBFS_1.c **** 
 235:Generated_Source\PSoC5/USBFS_1.c ****     /* Suspend clear sequence. */
 236:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_POWER_CTRL_REG &= (uint32) ~USBFS_1_POWER_CTRL_SUSPEND;
 237:Generated_Source\PSoC5/USBFS_1.c ****     CyDelayUs(USBFS_1_WAIT_SUSPEND_DEL_DISABLE);
 238:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_POWER_CTRL_REG &= (uint32) ~USBFS_1_POWER_CTRL_SUSPEND_DEL;
 239:Generated_Source\PSoC5/USBFS_1.c **** 
 240:Generated_Source\PSoC5/USBFS_1.c ****     /* Sets IMO lock options and clear all other bits. */
 241:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_CR1_REG = USBFS_1_DEFUALT_CR1;
 242:Generated_Source\PSoC5/USBFS_1.c **** 
 243:Generated_Source\PSoC5/USBFS_1.c ****     /* Configure level (hi, lo, med) for each interrupt source. */
 244:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_INTR_LVL_SEL_REG = USBFS_1_DEFAULT_INTR_LVL_SEL;
 245:Generated_Source\PSoC5/USBFS_1.c **** 
 246:Generated_Source\PSoC5/USBFS_1.c ****     /* Configure interrupt sources from: SOF, Bus Reset and EP0. */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 6


 247:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_INTR_SIE_MASK_REG = USBFS_1_DEFAULT_INTR_SIE_MASK;
 248:Generated_Source\PSoC5/USBFS_1.c **** 
 249:Generated_Source\PSoC5/USBFS_1.c **** #else
 250:Generated_Source\PSoC5/USBFS_1.c ****     uint8 enableInterrupts = CyEnterCriticalSection();
  40              		.loc 1 250 0
  41 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  42              	.LVL0:
  43 0006 0746     		mov	r7, r0
  44              	.LVL1:
 251:Generated_Source\PSoC5/USBFS_1.c **** 
 252:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA)
 253:Generated_Source\PSoC5/USBFS_1.c ****     uint16 i;
 254:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA) */
 255:Generated_Source\PSoC5/USBFS_1.c **** 
 256:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable USB block. */
 257:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_PM_ACT_CFG_REG |= USBFS_1_PM_ACT_EN_FSUSB;
  45              		.loc 1 257 0
  46 0008 3C4A     		ldr	r2, .L3
  47 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  48 000c 43F00103 		orr	r3, r3, #1
  49 0010 1370     		strb	r3, [r2]
 258:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable USB block for Standby Power Mode. */
 259:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_PM_STBY_CFG_REG |= USBFS_1_PM_STBY_EN_FSUSB;
  50              		.loc 1 259 0
  51 0012 1032     		adds	r2, r2, #16
  52 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  53 0016 43F00103 		orr	r3, r3, #1
  54 001a 1370     		strb	r3, [r2]
 260:Generated_Source\PSoC5/USBFS_1.c **** 
 261:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable core clock. */
 262:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_USB_CLK_EN_REG = USBFS_1_USB_CLK_ENABLE;
  55              		.loc 1 262 0
  56 001c 0126     		movs	r6, #1
  57 001e 384B     		ldr	r3, .L3+4
  58 0020 1E70     		strb	r6, [r3]
 263:Generated_Source\PSoC5/USBFS_1.c **** 
 264:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_CR1_REG = USBFS_1_CR1_ENABLE_LOCK;
  59              		.loc 1 264 0
  60 0022 0225     		movs	r5, #2
  61 0024 943B     		subs	r3, r3, #148
  62 0026 1D70     		strb	r5, [r3]
 265:Generated_Source\PSoC5/USBFS_1.c **** 
 266:Generated_Source\PSoC5/USBFS_1.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE. */
 267:Generated_Source\PSoC5/USBFS_1.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled. */
 268:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_USBIO_CR0_REG &= (uint8) ~USBFS_1_USBIO_CR0_TEN;
  63              		.loc 1 268 0
  64 0028 02F5E252 		add	r2, r2, #7232
  65 002c 1B32     		adds	r2, r2, #27
  66 002e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  67 0030 03F07F03 		and	r3, r3, #127
  68 0034 1370     		strb	r3, [r2]
 269:Generated_Source\PSoC5/USBFS_1.c ****     CyDelayUs(USBFS_1_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
  69              		.loc 1 269 0
  70 0036 0020     		movs	r0, #0
  71 0038 FFF7FEFF 		bl	CyDelayUs
  72              	.LVL2:
 270:Generated_Source\PSoC5/USBFS_1.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 7


 271:Generated_Source\PSoC5/USBFS_1.c ****     *  high. These bits will be set low by the power manager out-of-reset.
 272:Generated_Source\PSoC5/USBFS_1.c ****     *  Also confirm USBIO pull-up is disabled.
 273:Generated_Source\PSoC5/USBFS_1.c ****     */
 274:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_PM_USB_CR0_REG &= (uint8) ~(USBFS_1_PM_USB_CR0_PD_N |
  73              		.loc 1 274 0
  74 003c 314C     		ldr	r4, .L3+8
  75 003e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  76 0040 03F0F903 		and	r3, r3, #249
  77 0044 2370     		strb	r3, [r4]
 275:Generated_Source\PSoC5/USBFS_1.c ****                                                  USBFS_1_PM_USB_CR0_PD_PULLUP_N);
 276:Generated_Source\PSoC5/USBFS_1.c **** 
 277:Generated_Source\PSoC5/USBFS_1.c ****     /* Select IOMODE to USB mode. */
 278:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_USBIO_CR1_REG &= (uint8) ~USBFS_1_USBIO_CR1_IOMODE;
  78              		.loc 1 278 0
  79 0046 304A     		ldr	r2, .L3+12
  80 0048 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  81 004a 03F0DF03 		and	r3, r3, #223
  82 004e 1370     		strb	r3, [r2]
 279:Generated_Source\PSoC5/USBFS_1.c **** 
 280:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable USBIO reference by setting PM.USB_CR0.fsusbio_ref_en. */
 281:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_PM_USB_CR0_REG |= USBFS_1_PM_USB_CR0_REF_EN;
  83              		.loc 1 281 0
  84 0050 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  85 0052 3343     		orrs	r3, r3, r6
  86 0054 2370     		strb	r3, [r4]
 282:Generated_Source\PSoC5/USBFS_1.c ****     /* Reference is available for 1us after regulator is enabled. */
 283:Generated_Source\PSoC5/USBFS_1.c ****     CyDelayUs(USBFS_1_WAIT_REG_STABILITY_1US);
  87              		.loc 1 283 0
  88 0056 3046     		mov	r0, r6
  89 0058 FFF7FEFF 		bl	CyDelayUs
  90              	.LVL3:
 284:Generated_Source\PSoC5/USBFS_1.c ****     /* OR 40us after power is restored. */
 285:Generated_Source\PSoC5/USBFS_1.c ****     CyDelayUs(USBFS_1_WAIT_VREF_RESTORE);
  91              		.loc 1 285 0
  92 005c 2820     		movs	r0, #40
  93 005e FFF7FEFF 		bl	CyDelayUs
  94              	.LVL4:
 286:Generated_Source\PSoC5/USBFS_1.c ****     /* Ensure single-ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). */
 287:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_DM_INP_DIS_REG &= (uint8) ~USBFS_1_DM_MASK;
  95              		.loc 1 287 0
  96 0062 2A4B     		ldr	r3, .L3+16
  97 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  98 0066 02F07F02 		and	r2, r2, #127
  99 006a 1A70     		strb	r2, [r3]
 288:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_DP_INP_DIS_REG &= (uint8) ~USBFS_1_DP_MASK;
 100              		.loc 1 288 0
 101 006c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 102 006e 02F0BF02 		and	r2, r2, #191
 103 0072 1A70     		strb	r2, [r3]
 289:Generated_Source\PSoC5/USBFS_1.c **** 
 290:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable USBIO. */
 291:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_PM_USB_CR0_REG |= USBFS_1_PM_USB_CR0_PD_N;
 104              		.loc 1 291 0
 105 0074 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 106 0076 2B43     		orrs	r3, r3, r5
 107 0078 2370     		strb	r3, [r4]
 292:Generated_Source\PSoC5/USBFS_1.c ****     CyDelayUs(USBFS_1_WAIT_PD_PULLUP_N_ENABLE);
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 8


 108              		.loc 1 292 0
 109 007a 2846     		mov	r0, r5
 110 007c FFF7FEFF 		bl	CyDelayUs
 111              	.LVL5:
 293:Generated_Source\PSoC5/USBFS_1.c ****     /* Set USBIO pull-up enable. */
 294:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_PM_USB_CR0_REG |= USBFS_1_PM_USB_CR0_PD_PULLUP_N;
 112              		.loc 1 294 0
 113 0080 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 114 0082 43F00403 		orr	r3, r3, #4
 115 0086 2370     		strb	r3, [r4]
 295:Generated_Source\PSoC5/USBFS_1.c **** 
 296:Generated_Source\PSoC5/USBFS_1.c ****     /* Reset Arbiter Write Address register for endpoint 1. */
 297:Generated_Source\PSoC5/USBFS_1.c ****     CY_SET_REG8(USBFS_1_ARB_RW1_WA_PTR,     0u);
 116              		.loc 1 297 0
 117 0088 0023     		movs	r3, #0
 118 008a 214A     		ldr	r2, .L3+20
 119 008c 1370     		strb	r3, [r2]
 298:Generated_Source\PSoC5/USBFS_1.c ****     CY_SET_REG8(USBFS_1_ARB_RW1_WA_MSB_PTR, 0u);
 120              		.loc 1 298 0
 121 008e 0132     		adds	r2, r2, #1
 122 0090 1370     		strb	r3, [r2]
 299:Generated_Source\PSoC5/USBFS_1.c **** 
 300:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA)
 301:Generated_Source\PSoC5/USBFS_1.c ****     /* Initialize transfer descriptor. This will be used to detect DMA state - initialized or not. 
 302:Generated_Source\PSoC5/USBFS_1.c ****     for (i = 0u; i < USBFS_1_MAX_EP; ++i)
 303:Generated_Source\PSoC5/USBFS_1.c ****     {
 304:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_DmaTd[i] = DMA_INVALID_TD;
 305:Generated_Source\PSoC5/USBFS_1.c **** 
 306:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u))
 307:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_DmaNextTd[i] = DMA_INVALID_TD;
 308:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u)) */
 309:Generated_Source\PSoC5/USBFS_1.c ****     }
 310:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA) */
 311:Generated_Source\PSoC5/USBFS_1.c **** 
 312:Generated_Source\PSoC5/USBFS_1.c ****     CyExitCriticalSection(enableInterrupts);
 123              		.loc 1 312 0
 124 0092 3846     		mov	r0, r7
 125 0094 FFF7FEFF 		bl	CyExitCriticalSection
 126              	.LVL6:
 313:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
 314:Generated_Source\PSoC5/USBFS_1.c **** 
 315:Generated_Source\PSoC5/USBFS_1.c ****     /* Configure interrupts from USB block. */
 316:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
 317:Generated_Source\PSoC5/USBFS_1.c ****     /* Configure hi_int: set handler and priority. */
 318:Generated_Source\PSoC5/USBFS_1.c ****     CyIntSetPriority     (USBFS_1_INTR_HI_VECT_NUM,  USBFS_1_INTR_HI_PRIORITY);
 319:Generated_Source\PSoC5/USBFS_1.c ****     (void) CyIntSetVector(USBFS_1_INTR_HI_VECT_NUM, &USBFS_1_INTR_HI_ISR);
 320:Generated_Source\PSoC5/USBFS_1.c **** 
 321:Generated_Source\PSoC5/USBFS_1.c ****     /* Configure lo_int: set handler and priority. */
 322:Generated_Source\PSoC5/USBFS_1.c ****     CyIntSetPriority     (USBFS_1_INTR_LO_VECT_NUM,  USBFS_1_INTR_LO_PRIORITY);
 323:Generated_Source\PSoC5/USBFS_1.c ****     (void) CyIntSetVector(USBFS_1_INTR_LO_VECT_NUM, &USBFS_1_INTR_LO_ISR);
 324:Generated_Source\PSoC5/USBFS_1.c **** 
 325:Generated_Source\PSoC5/USBFS_1.c ****     /* Configure med_int: set handler and priority (routed through DSI). */
 326:Generated_Source\PSoC5/USBFS_1.c ****     CyIntSetPriority     (USBFS_1_INTR_MED_VECT_NUM,  USBFS_1_INTR_MED_PRIORITY);
 327:Generated_Source\PSoC5/USBFS_1.c ****     (void) CyIntSetVector(USBFS_1_INTR_MED_VECT_NUM, &USBFS_1_INTR_MED_ISR);
 328:Generated_Source\PSoC5/USBFS_1.c **** 
 329:Generated_Source\PSoC5/USBFS_1.c **** #else
 330:Generated_Source\PSoC5/USBFS_1.c ****     /* Set bus reset interrupt. */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 9


 331:Generated_Source\PSoC5/USBFS_1.c ****     CyIntSetPriority(USBFS_1_BUS_RESET_VECT_NUM, USBFS_1_BUS_RESET_PRIOR);
 127              		.loc 1 331 0
 128 0098 0721     		movs	r1, #7
 129 009a 1720     		movs	r0, #23
 130 009c FFF7FEFF 		bl	CyIntSetPriority
 131              	.LVL7:
 332:Generated_Source\PSoC5/USBFS_1.c ****     (void) CyIntSetVector(USBFS_1_BUS_RESET_VECT_NUM,   &USBFS_1_BUS_RESET_ISR);
 132              		.loc 1 332 0
 133 00a0 1C49     		ldr	r1, .L3+24
 134 00a2 1720     		movs	r0, #23
 135 00a4 FFF7FEFF 		bl	CyIntSetVector
 136              	.LVL8:
 333:Generated_Source\PSoC5/USBFS_1.c **** 
 334:Generated_Source\PSoC5/USBFS_1.c ****     /* Set Control Endpoint Interrupt. */
 335:Generated_Source\PSoC5/USBFS_1.c ****     CyIntSetPriority(USBFS_1_EP_0_VECT_NUM, USBFS_1_EP_0_PRIOR);
 137              		.loc 1 335 0
 138 00a8 0721     		movs	r1, #7
 139 00aa 1820     		movs	r0, #24
 140 00ac FFF7FEFF 		bl	CyIntSetPriority
 141              	.LVL9:
 336:Generated_Source\PSoC5/USBFS_1.c ****     (void) CyIntSetVector(USBFS_1_EP_0_VECT_NUM,   &USBFS_1_EP_0_ISR);
 142              		.loc 1 336 0
 143 00b0 1949     		ldr	r1, .L3+28
 144 00b2 1820     		movs	r0, #24
 145 00b4 FFF7FEFF 		bl	CyIntSetVector
 146              	.LVL10:
 337:Generated_Source\PSoC5/USBFS_1.c **** 
 338:Generated_Source\PSoC5/USBFS_1.c ****     /* Set SOF interrupt. */
 339:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_SOF_ISR_ACTIVE)
 340:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_SOF_VECT_NUM,  USBFS_1_SOF_PRIOR);
 147              		.loc 1 340 0
 148 00b8 0721     		movs	r1, #7
 149 00ba 1520     		movs	r0, #21
 150 00bc FFF7FEFF 		bl	CyIntSetPriority
 151              	.LVL11:
 341:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_SOF_VECT_NUM, &USBFS_1_SOF_ISR);
 152              		.loc 1 341 0
 153 00c0 1649     		ldr	r1, .L3+32
 154 00c2 1520     		movs	r0, #21
 155 00c4 FFF7FEFF 		bl	CyIntSetVector
 156              	.LVL12:
 342:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_SOF_ISR_ACTIVE) */
 343:Generated_Source\PSoC5/USBFS_1.c **** 
 344:Generated_Source\PSoC5/USBFS_1.c ****     /* Set Data Endpoint 1 Interrupt. */
 345:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP1_ISR_ACTIVE)
 346:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_EP_1_VECT_NUM,  USBFS_1_EP_1_PRIOR);
 157              		.loc 1 346 0
 158 00c8 0721     		movs	r1, #7
 159 00ca 3046     		mov	r0, r6
 160 00cc FFF7FEFF 		bl	CyIntSetPriority
 161              	.LVL13:
 347:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_EP_1_VECT_NUM,  &USBFS_1_EP_1_ISR);
 162              		.loc 1 347 0
 163 00d0 1349     		ldr	r1, .L3+36
 164 00d2 3046     		mov	r0, r6
 165 00d4 FFF7FEFF 		bl	CyIntSetVector
 166              	.LVL14:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 10


 348:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP1_ISR_ACTIVE) */
 349:Generated_Source\PSoC5/USBFS_1.c **** 
 350:Generated_Source\PSoC5/USBFS_1.c ****     /* Set Data Endpoint 2 Interrupt. */
 351:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP2_ISR_ACTIVE)
 352:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_EP_2_VECT_NUM,  USBFS_1_EP_2_PRIOR);
 167              		.loc 1 352 0
 168 00d8 0721     		movs	r1, #7
 169 00da 2846     		mov	r0, r5
 170 00dc FFF7FEFF 		bl	CyIntSetPriority
 171              	.LVL15:
 353:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_EP_2_VECT_NUM, &USBFS_1_EP_2_ISR);
 172              		.loc 1 353 0
 173 00e0 1049     		ldr	r1, .L3+40
 174 00e2 2846     		mov	r0, r5
 175 00e4 FFF7FEFF 		bl	CyIntSetVector
 176              	.LVL16:
 354:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP2_ISR_ACTIVE) */
 355:Generated_Source\PSoC5/USBFS_1.c **** 
 356:Generated_Source\PSoC5/USBFS_1.c ****     /* Set Data Endpoint 3 Interrupt. */
 357:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP3_ISR_ACTIVE)
 358:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_EP_3_VECT_NUM,  USBFS_1_EP_3_PRIOR);
 359:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_EP_3_VECT_NUM, &USBFS_1_EP_3_ISR);
 360:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP3_ISR_ACTIVE) */
 361:Generated_Source\PSoC5/USBFS_1.c **** 
 362:Generated_Source\PSoC5/USBFS_1.c ****     /* Set Data Endpoint 4 Interrupt. */
 363:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP4_ISR_ACTIVE)
 364:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_EP_4_VECT_NUM,  USBFS_1_EP_4_PRIOR);
 365:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_EP_4_VECT_NUM, &USBFS_1_EP_4_ISR);
 366:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP4_ISR_ACTIVE) */
 367:Generated_Source\PSoC5/USBFS_1.c **** 
 368:Generated_Source\PSoC5/USBFS_1.c ****     /* Set Data Endpoint 5 Interrupt. */
 369:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP5_ISR_ACTIVE)
 370:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_EP_5_VECT_NUM,  USBFS_1_EP_5_PRIOR);
 371:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_EP_5_VECT_NUM, &USBFS_1_EP_5_ISR);
 372:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP5_ISR_ACTIVE) */
 373:Generated_Source\PSoC5/USBFS_1.c **** 
 374:Generated_Source\PSoC5/USBFS_1.c ****     /* Set Data Endpoint 6 Interrupt. */
 375:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP6_ISR_ACTIVE)
 376:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_EP_6_VECT_NUM,  USBFS_1_EP_6_PRIOR);
 377:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_EP_6_VECT_NUM, &USBFS_1_EP_6_ISR);
 378:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP6_ISR_ACTIVE) */
 379:Generated_Source\PSoC5/USBFS_1.c **** 
 380:Generated_Source\PSoC5/USBFS_1.c ****      /* Set Data Endpoint 7 Interrupt. */
 381:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP7_ISR_ACTIVE)
 382:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_EP_7_VECT_NUM,  USBFS_1_EP_7_PRIOR);
 383:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_EP_7_VECT_NUM, &USBFS_1_EP_7_ISR);
 384:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP7_ISR_ACTIVE) */
 385:Generated_Source\PSoC5/USBFS_1.c **** 
 386:Generated_Source\PSoC5/USBFS_1.c ****     /* Set Data Endpoint 8 Interrupt. */
 387:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP8_ISR_ACTIVE)
 388:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_EP_8_VECT_NUM,  USBFS_1_EP_8_PRIOR);
 389:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_EP_8_VECT_NUM, &USBFS_1_EP_8_ISR);
 390:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP8_ISR_ACTIVE) */
 391:Generated_Source\PSoC5/USBFS_1.c **** 
 392:Generated_Source\PSoC5/USBFS_1.c ****     /* Set ARB Interrupt. */
 393:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_MANAGEMENT_DMA && USBFS_1_ARB_ISR_ACTIVE)
 394:Generated_Source\PSoC5/USBFS_1.c ****         CyIntSetPriority     (USBFS_1_ARB_VECT_NUM,  USBFS_1_ARB_PRIOR);
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 11


 395:Generated_Source\PSoC5/USBFS_1.c ****         (void) CyIntSetVector(USBFS_1_ARB_VECT_NUM, &USBFS_1_ARB_ISR);
 396:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA && USBFS_1_ARB_ISR_ACTIVE) */
 397:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
 398:Generated_Source\PSoC5/USBFS_1.c **** 
 399:Generated_Source\PSoC5/USBFS_1.c ****     /* Common: Configure GPIO interrupt for wakeup. */
 400:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_DP_ISR_ACTIVE)
 401:Generated_Source\PSoC5/USBFS_1.c ****     CyIntSetPriority     (USBFS_1_DP_INTC_VECT_NUM,  USBFS_1_DP_INTC_PRIORITY);
 177              		.loc 1 401 0
 178 00e8 0721     		movs	r1, #7
 179 00ea 0C20     		movs	r0, #12
 180 00ec FFF7FEFF 		bl	CyIntSetPriority
 181              	.LVL17:
 402:Generated_Source\PSoC5/USBFS_1.c ****     (void) CyIntSetVector(USBFS_1_DP_INTC_VECT_NUM, &USBFS_1_DP_ISR);
 182              		.loc 1 402 0
 183 00f0 0D49     		ldr	r1, .L3+44
 184 00f2 0C20     		movs	r0, #12
 185 00f4 FFF7FEFF 		bl	CyIntSetVector
 186              	.LVL18:
 187 00f8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 188              	.LVL19:
 189              	.L4:
 190 00fa 00BF     		.align	2
 191              	.L3:
 192 00fc A5430040 		.word	1073759141
 193 0100 9D600040 		.word	1073766557
 194 0104 94430040 		.word	1073759124
 195 0108 12600040 		.word	1073766418
 196 010c F8510040 		.word	1073762808
 197 0110 84600040 		.word	1073766532
 198 0114 00000000 		.word	USBFS_1_BUS_RESET_ISR
 199 0118 00000000 		.word	USBFS_1_EP_0_ISR
 200 011c 00000000 		.word	USBFS_1_SOF_ISR
 201 0120 00000000 		.word	USBFS_1_EP_1_ISR
 202 0124 00000000 		.word	USBFS_1_EP_2_ISR
 203 0128 00000000 		.word	USBFS_1_DP_ISR
 204              		.cfi_endproc
 205              	.LFE1:
 206              		.size	USBFS_1_Init, .-USBFS_1_Init
 207              		.section	.text.USBFS_1_InitComponent,"ax",%progbits
 208              		.align	2
 209              		.global	USBFS_1_InitComponent
 210              		.thumb
 211              		.thumb_func
 212              		.type	USBFS_1_InitComponent, %function
 213              	USBFS_1_InitComponent:
 214              	.LFB2:
 403:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_DP_ISR_ACTIVE) */
 404:Generated_Source\PSoC5/USBFS_1.c **** 
 405:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA && CY_PSOC4)
 406:Generated_Source\PSoC5/USBFS_1.c ****     /* Initialize DMA channels. */
 407:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_InitEpDma();
 408:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA && CY_PSOC4) */
 409:Generated_Source\PSoC5/USBFS_1.c **** }
 410:Generated_Source\PSoC5/USBFS_1.c **** 
 411:Generated_Source\PSoC5/USBFS_1.c **** 
 412:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 413:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_InitComponent
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 12


 414:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 415:Generated_Source\PSoC5/USBFS_1.c **** *
 416:Generated_Source\PSoC5/USBFS_1.c **** *   This function initializes the component’s global variables and initiates
 417:Generated_Source\PSoC5/USBFS_1.c **** *   communication with the host by pull-up D+ line.
 418:Generated_Source\PSoC5/USBFS_1.c **** *
 419:Generated_Source\PSoC5/USBFS_1.c **** * \param device:
 420:Generated_Source\PSoC5/USBFS_1.c **** *   Contains the device number of the desired device descriptor. The device
 421:Generated_Source\PSoC5/USBFS_1.c **** *   number can be found in the Device Descriptor Tab of "Configure" dialog,
 422:Generated_Source\PSoC5/USBFS_1.c **** *   under the settings of desired Device Descriptor, in the *Device Number*
 423:Generated_Source\PSoC5/USBFS_1.c **** *   field.
 424:Generated_Source\PSoC5/USBFS_1.c **** *  \param mode:
 425:Generated_Source\PSoC5/USBFS_1.c **** *   The operating voltage. This determines whether the voltage regulator
 426:Generated_Source\PSoC5/USBFS_1.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 427:Generated_Source\PSoC5/USBFS_1.c **** *   operation. Symbolic names and their associated values are given in the
 428:Generated_Source\PSoC5/USBFS_1.c **** *   following list.
 429:Generated_Source\PSoC5/USBFS_1.c **** *
 430:Generated_Source\PSoC5/USBFS_1.c **** *       *USBFS_1_3V_OPERATION* - Disable voltage regulator and pass-
 431:Generated_Source\PSoC5/USBFS_1.c **** *                                      through Vcc for pull-up
 432:Generated_Source\PSoC5/USBFS_1.c **** *
 433:Generated_Source\PSoC5/USBFS_1.c **** *       *USBFS_1_5V_OPERATION* - Enable voltage regulator and use
 434:Generated_Source\PSoC5/USBFS_1.c **** *                                      regulator for pull-up
 435:Generated_Source\PSoC5/USBFS_1.c **** *
 436:Generated_Source\PSoC5/USBFS_1.c **** *       *USBFS_1_DWR_POWER_OPERATION* - Enable or disable the voltage
 437:Generated_Source\PSoC5/USBFS_1.c **** *                                      regulator depending on the power supply
 438:Generated_Source\PSoC5/USBFS_1.c **** *                                      voltage configuration in the DWR tab.
 439:Generated_Source\PSoC5/USBFS_1.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 440:Generated_Source\PSoC5/USBFS_1.c **** *                                      voltage is considered and for PSoC 4A-L,
 441:Generated_Source\PSoC5/USBFS_1.c **** *                                      the VBUS supply voltage is considered.
 442:Generated_Source\PSoC5/USBFS_1.c **** *
 443:Generated_Source\PSoC5/USBFS_1.c **** * \globalvars
 444:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_device
 445:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_transferState
 446:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_configuration
 447:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_deviceStatus
 448:Generated_Source\PSoC5/USBFS_1.c **** *
 449:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_deviceAddress - Contains the current device address. This
 450:Generated_Source\PSoC5/USBFS_1.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 451:Generated_Source\PSoC5/USBFS_1.c **** *      to the device with address 0 and then sets it to a whatever value using a
 452:Generated_Source\PSoC5/USBFS_1.c **** *      SET_ADDRESS request.
 453:Generated_Source\PSoC5/USBFS_1.c **** *
 454:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_lastPacketSize - Initialized to 0;
 455:Generated_Source\PSoC5/USBFS_1.c **** *
 456:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
 457:Generated_Source\PSoC5/USBFS_1.c **** *  No.
 458:Generated_Source\PSoC5/USBFS_1.c **** *
 459:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 460:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_InitComponent(uint8 device, uint8 mode) 
 461:Generated_Source\PSoC5/USBFS_1.c **** {
 215              		.loc 1 461 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219              	.LVL20:
 220 0000 10B5     		push	{r4, lr}
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 4, -8
 223              		.cfi_offset 14, -4
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 13


 224              	.LVL21:
 462:Generated_Source\PSoC5/USBFS_1.c ****     /* Initialize _hidProtocol variable to comply with
 463:Generated_Source\PSoC5/USBFS_1.c ****     *  HID 7.2.6 Set_Protocol Request:
 464:Generated_Source\PSoC5/USBFS_1.c ****     *  "When initialized, all devices default to report protocol."
 465:Generated_Source\PSoC5/USBFS_1.c ****     */
 466:Generated_Source\PSoC5/USBFS_1.c **** #if defined(USBFS_1_ENABLE_HID_CLASS)
 467:Generated_Source\PSoC5/USBFS_1.c ****     uint8 i;
 468:Generated_Source\PSoC5/USBFS_1.c **** 
 469:Generated_Source\PSoC5/USBFS_1.c ****     for (i = 0u; i < USBFS_1_MAX_INTERFACES_NUMBER; i++)
 225              		.loc 1 469 0
 226 0002 0023     		movs	r3, #0
 227 0004 04E0     		b	.L6
 228              	.LVL22:
 229              	.L7:
 470:Generated_Source\PSoC5/USBFS_1.c ****     {
 471:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_hidProtocol[i] = USBFS_1_PROTOCOL_REPORT;
 230              		.loc 1 471 0 discriminator 3
 231 0006 0124     		movs	r4, #1
 232 0008 234A     		ldr	r2, .L14
 233 000a D454     		strb	r4, [r2, r3]
 469:Generated_Source\PSoC5/USBFS_1.c ****     {
 234              		.loc 1 469 0 discriminator 3
 235 000c 2344     		add	r3, r3, r4
 236              	.LVL23:
 237 000e DBB2     		uxtb	r3, r3
 238              	.LVL24:
 239              	.L6:
 469:Generated_Source\PSoC5/USBFS_1.c ****     {
 240              		.loc 1 469 0 is_stmt 0 discriminator 1
 241 0010 002B     		cmp	r3, #0
 242 0012 F8D0     		beq	.L7
 472:Generated_Source\PSoC5/USBFS_1.c ****     }
 473:Generated_Source\PSoC5/USBFS_1.c **** #endif /* USBFS_1_ENABLE_HID_CLASS */
 474:Generated_Source\PSoC5/USBFS_1.c **** 
 475:Generated_Source\PSoC5/USBFS_1.c ****     /* Store device number to access descriptor. */
 476:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_device = device;
 243              		.loc 1 476 0 is_stmt 1
 244 0014 214B     		ldr	r3, .L14+4
 245              	.LVL25:
 246 0016 1870     		strb	r0, [r3]
 477:Generated_Source\PSoC5/USBFS_1.c **** 
 478:Generated_Source\PSoC5/USBFS_1.c ****     /* Reset component internal variables. */
 479:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_transferState   = USBFS_1_TRANS_STATE_IDLE;
 247              		.loc 1 479 0
 248 0018 0023     		movs	r3, #0
 249 001a 214A     		ldr	r2, .L14+8
 250 001c 1370     		strb	r3, [r2]
 480:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_configurationChanged = 0u;
 251              		.loc 1 480 0
 252 001e 214A     		ldr	r2, .L14+12
 253 0020 1370     		strb	r3, [r2]
 481:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_configuration   = 0u;
 254              		.loc 1 481 0
 255 0022 214A     		ldr	r2, .L14+16
 256 0024 1370     		strb	r3, [r2]
 482:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_interfaceNumber = 0u;
 257              		.loc 1 482 0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 14


 258 0026 214A     		ldr	r2, .L14+20
 259 0028 1370     		strb	r3, [r2]
 483:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_deviceAddress   = 0u;
 260              		.loc 1 483 0
 261 002a 214A     		ldr	r2, .L14+24
 262 002c 1370     		strb	r3, [r2]
 484:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_deviceStatus    = 0u;
 263              		.loc 1 484 0
 264 002e 214A     		ldr	r2, .L14+28
 265 0030 1370     		strb	r3, [r2]
 485:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_lastPacketSize  = 0u;
 266              		.loc 1 485 0
 267 0032 214A     		ldr	r2, .L14+32
 268 0034 1370     		strb	r3, [r2]
 486:Generated_Source\PSoC5/USBFS_1.c **** 
 487:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable component interrupts. */
 488:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
 489:Generated_Source\PSoC5/USBFS_1.c ****     CyIntEnable(USBFS_1_INTR_HI_VECT_NUM);
 490:Generated_Source\PSoC5/USBFS_1.c ****     CyIntEnable(USBFS_1_INTR_MED_VECT_NUM);
 491:Generated_Source\PSoC5/USBFS_1.c ****     CyIntEnable(USBFS_1_INTR_LO_VECT_NUM);
 492:Generated_Source\PSoC5/USBFS_1.c **** #else
 493:Generated_Source\PSoC5/USBFS_1.c ****     CyIntEnable(USBFS_1_BUS_RESET_VECT_NUM);
 269              		.loc 1 493 0
 270 0036 214B     		ldr	r3, .L14+36
 271 0038 4FF40002 		mov	r2, #8388608
 272 003c 1A60     		str	r2, [r3]
 494:Generated_Source\PSoC5/USBFS_1.c ****     CyIntEnable(USBFS_1_EP_0_VECT_NUM);
 273              		.loc 1 494 0
 274 003e 4FF08072 		mov	r2, #16777216
 275 0042 1A60     		str	r2, [r3]
 495:Generated_Source\PSoC5/USBFS_1.c **** 
 496:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_SOF_ISR_ACTIVE)
 497:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_SOF_VECT_NUM);
 276              		.loc 1 497 0
 277 0044 4FF40012 		mov	r2, #2097152
 278 0048 1A60     		str	r2, [r3]
 498:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_SOF_ISR_ACTIVE) */
 499:Generated_Source\PSoC5/USBFS_1.c **** 
 500:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP1_ISR_ACTIVE)
 501:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_EP_1_VECT_NUM);
 279              		.loc 1 501 0
 280 004a 0222     		movs	r2, #2
 281 004c 1A60     		str	r2, [r3]
 502:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP1_ISR_ACTIVE) */
 503:Generated_Source\PSoC5/USBFS_1.c **** 
 504:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP2_ISR_ACTIVE)
 505:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_EP_2_VECT_NUM);
 282              		.loc 1 505 0
 283 004e 0422     		movs	r2, #4
 284 0050 1A60     		str	r2, [r3]
 506:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP5_ISR_ACTIVE) */
 507:Generated_Source\PSoC5/USBFS_1.c **** 
 508:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP3_ISR_ACTIVE)
 509:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_EP_3_VECT_NUM);
 510:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP5_ISR_ACTIVE) */
 511:Generated_Source\PSoC5/USBFS_1.c **** 
 512:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP4_ISR_ACTIVE)
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 15


 513:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_EP_4_VECT_NUM);
 514:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP5_ISR_ACTIVE) */
 515:Generated_Source\PSoC5/USBFS_1.c **** 
 516:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP5_ISR_ACTIVE)
 517:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_EP_5_VECT_NUM);
 518:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP5_ISR_ACTIVE) */
 519:Generated_Source\PSoC5/USBFS_1.c **** 
 520:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP6_ISR_ACTIVE)
 521:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_EP_6_VECT_NUM);
 522:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* USBFS_1_EP6_ISR_REMOVE */
 523:Generated_Source\PSoC5/USBFS_1.c **** 
 524:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP7_ISR_ACTIVE)
 525:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_EP_7_VECT_NUM);
 526:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP7_ISR_ACTIVE) */
 527:Generated_Source\PSoC5/USBFS_1.c **** 
 528:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP8_ISR_ACTIVE)
 529:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_EP_8_VECT_NUM);
 530:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP8_ISR_ACTIVE) */
 531:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
 532:Generated_Source\PSoC5/USBFS_1.c **** 
 533:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA && USBFS_1_ARB_ISR_ACTIVE)
 534:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable ARB EP interrupt sources. */
 535:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_ARB_INT_EN_REG = USBFS_1_DEFAULT_ARB_INT_EN;
 536:Generated_Source\PSoC5/USBFS_1.c **** 
 537:Generated_Source\PSoC5/USBFS_1.c ****     #if (CY_PSOC3 || CY_PSOC5)
 538:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_ARB_VECT_NUM);
 539:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (CY_PSOC3 || CY_PSOC5) */
 540:Generated_Source\PSoC5/USBFS_1.c **** #endif   /* (USBFS_1_EP_MANAGEMENT_DMA && USBFS_1_ARB_ISR_ACTIVE) */
 541:Generated_Source\PSoC5/USBFS_1.c **** 
 542:Generated_Source\PSoC5/USBFS_1.c **** /* Arbiter configuration for DMA transfers. */
 543:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA)
 544:Generated_Source\PSoC5/USBFS_1.c ****     /* Configure Arbiter for Manual or Auto DMA operation and clear configuration completion. */
 545:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_ARB_CFG_REG = USBFS_1_DEFAULT_ARB_CFG;
 546:Generated_Source\PSoC5/USBFS_1.c **** 
 547:Generated_Source\PSoC5/USBFS_1.c ****     #if (CY_PSOC4)
 548:Generated_Source\PSoC5/USBFS_1.c ****         /* Enable DMA operation. */
 549:Generated_Source\PSoC5/USBFS_1.c ****         CyDmaEnable();
 550:Generated_Source\PSoC5/USBFS_1.c **** 
 551:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBFS_1.c ****             /* Change DMA priority to be highest. */
 553:Generated_Source\PSoC5/USBFS_1.c ****              CyIntSetPriority(CYDMA_INTR_NUMBER, USBFS_1_DMA_AUTO_INTR_PRIO);
 554:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 555:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (CY_PSOC4) */
 556:Generated_Source\PSoC5/USBFS_1.c **** 
 557:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 558:Generated_Source\PSoC5/USBFS_1.c ****         #if (CY_PSOC4)
 559:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable DMA interrupt to handle DMA management. */
 560:Generated_Source\PSoC5/USBFS_1.c ****             CyIntEnable(CYDMA_INTR_NUMBER);
 561:Generated_Source\PSoC5/USBFS_1.c ****         #else
 562:Generated_Source\PSoC5/USBFS_1.c ****             #if (USBFS_1_EP_DMA_AUTO_OPT == 0u)
 563:Generated_Source\PSoC5/USBFS_1.c ****                 /* Initialize interrupts which handle verification of successful DMA transaction. *
 564:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_EP_DMA_Done_isr_StartEx(&USBFS_1_EP_DMA_DONE_ISR);
 565:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_EP17_DMA_Done_SR_InterruptEnable();
 566:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_EP8_DMA_Done_SR_InterruptEnable();
 567:Generated_Source\PSoC5/USBFS_1.c ****             #endif /* (USBFS_1_EP_DMA_AUTO_OPT == 0u) */
 568:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (CY_PSOC4) */
 569:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 16


 570:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA) */
 571:Generated_Source\PSoC5/USBFS_1.c **** 
 572:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable USB regulator depends on operation voltage. IMO Locking is enabled in Init(). */
 573:Generated_Source\PSoC5/USBFS_1.c ****     switch(mode)
 285              		.loc 1 573 0
 286 0052 11B1     		cbz	r1, .L9
 287 0054 0129     		cmp	r1, #1
 288 0056 06D0     		beq	.L10
 289 0058 0BE0     		b	.L12
 290              	.L9:
 574:Generated_Source\PSoC5/USBFS_1.c ****     {
 575:Generated_Source\PSoC5/USBFS_1.c ****     case USBFS_1_3V_OPERATION:
 576:Generated_Source\PSoC5/USBFS_1.c ****         /* Disable regulator for 3V operation. */
 577:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_CR1_REG &= (uint8) ~USBFS_1_CR1_REG_ENABLE;
 291              		.loc 1 577 0
 292 005a 194A     		ldr	r2, .L14+40
 293 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 294 005e 03F0FE03 		and	r3, r3, #254
 295 0062 1370     		strb	r3, [r2]
 578:Generated_Source\PSoC5/USBFS_1.c ****         break;
 296              		.loc 1 578 0
 297 0064 0AE0     		b	.L11
 298              	.L10:
 579:Generated_Source\PSoC5/USBFS_1.c **** 
 580:Generated_Source\PSoC5/USBFS_1.c ****     case USBFS_1_5V_OPERATION:
 581:Generated_Source\PSoC5/USBFS_1.c ****         /* Enable regulator for 5V operation. */
 582:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_CR1_REG |= (uint8)  USBFS_1_CR1_REG_ENABLE;
 299              		.loc 1 582 0
 300 0066 164A     		ldr	r2, .L14+40
 301 0068 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 302 006a 43F00103 		orr	r3, r3, #1
 303 006e 1370     		strb	r3, [r2]
 583:Generated_Source\PSoC5/USBFS_1.c ****         break;
 304              		.loc 1 583 0
 305 0070 04E0     		b	.L11
 306              	.L12:
 584:Generated_Source\PSoC5/USBFS_1.c **** 
 585:Generated_Source\PSoC5/USBFS_1.c ****     default: /* Check DWR settings of USB power supply. */
 586:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_VDDD_MV < USBFS_1_3500MV)
 587:Generated_Source\PSoC5/USBFS_1.c ****         /* Disable regulator for 3V operation. */
 588:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_CR1_REG &= (uint8) ~USBFS_1_CR1_REG_ENABLE;
 589:Generated_Source\PSoC5/USBFS_1.c ****     #else
 590:Generated_Source\PSoC5/USBFS_1.c ****         /* Enable regulator for 5V operation. */
 591:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_CR1_REG |= (uint8)  USBFS_1_CR1_REG_ENABLE;
 307              		.loc 1 591 0
 308 0072 134A     		ldr	r2, .L14+40
 309 0074 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 310 0076 43F00103 		orr	r3, r3, #1
 311 007a 1370     		strb	r3, [r2]
 312              	.L11:
 592:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_VDDD_MV < USBFS_1_3500MV) */
 593:Generated_Source\PSoC5/USBFS_1.c ****         break;
 594:Generated_Source\PSoC5/USBFS_1.c ****     }
 595:Generated_Source\PSoC5/USBFS_1.c **** 
 596:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
 597:Generated_Source\PSoC5/USBFS_1.c ****     /* Clear bus activity. */
 598:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_CR1_REG &= (uint32) ~USBFS_1_CR1_BUS_ACTIVITY;
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 17


 599:Generated_Source\PSoC5/USBFS_1.c **** 
 600:Generated_Source\PSoC5/USBFS_1.c ****     /* Clear EP0 count register. */
 601:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_EP0_CNT_REG = USBFS_1_CLEAR_REG;
 602:Generated_Source\PSoC5/USBFS_1.c **** 
 603:Generated_Source\PSoC5/USBFS_1.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 604:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_EP0_CR_REG = USBFS_1_MODE_NAK_IN_OUT;
 605:Generated_Source\PSoC5/USBFS_1.c **** 
 606:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_LPM_ACTIVE)
 607:Generated_Source\PSoC5/USBFS_1.c ****         if (NULL != USBFS_1_GetBOSPtr())
 608:Generated_Source\PSoC5/USBFS_1.c ****         {
 609:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable LPM and acknowledge LPM packets for active device.
 610:Generated_Source\PSoC5/USBFS_1.c ****             * Reset NYET_EN and SUB_RESP bits in the LPM_CTRL register.
 611:Generated_Source\PSoC5/USBFS_1.c ****             */
 612:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_LPM_CTRL_REG = (USBFS_1_LPM_CTRL_LPM_EN | \
 613:Generated_Source\PSoC5/USBFS_1.c ****                                              USBFS_1_LPM_CTRL_LPM_ACK_RESP);
 614:Generated_Source\PSoC5/USBFS_1.c ****         }
 615:Generated_Source\PSoC5/USBFS_1.c ****         else
 616:Generated_Source\PSoC5/USBFS_1.c ****         {
 617:Generated_Source\PSoC5/USBFS_1.c ****             /* Disable LPM for active device. */
 618:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_LPM_CTRL_REG &= (uint32) ~USBFS_1_LPM_CTRL_LPM_EN;
 619:Generated_Source\PSoC5/USBFS_1.c ****         }
 620:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_LPM_ACTIVE) */
 621:Generated_Source\PSoC5/USBFS_1.c **** 
 622:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable device to responds to USB traffic with address 0. */
 623:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_CR0_REG = USBFS_1_DEFUALT_CR0;
 624:Generated_Source\PSoC5/USBFS_1.c **** 
 625:Generated_Source\PSoC5/USBFS_1.c **** #else
 626:Generated_Source\PSoC5/USBFS_1.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 627:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_EP0_CR_REG = USBFS_1_MODE_STALL_IN_OUT;
 313              		.loc 1 627 0
 314 007c 0322     		movs	r2, #3
 315 007e 114B     		ldr	r3, .L14+44
 316 0080 1A70     		strb	r2, [r3]
 628:Generated_Source\PSoC5/USBFS_1.c **** 
 629:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable device to respond to USB traffic with address 0. */
 630:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_CR0_REG = USBFS_1_DEFUALT_CR0;
 317              		.loc 1 630 0
 318 0082 8022     		movs	r2, #128
 319 0084 203B     		subs	r3, r3, #32
 320 0086 1A70     		strb	r2, [r3]
 631:Generated_Source\PSoC5/USBFS_1.c ****     CyDelayCycles(USBFS_1_WAIT_CR0_REG_STABILITY);
 321              		.loc 1 631 0
 322 0088 0120     		movs	r0, #1
 323              	.LVL26:
 324 008a FFF7FEFF 		bl	CyDelayCycles
 325              	.LVL27:
 632:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
 633:Generated_Source\PSoC5/USBFS_1.c **** 
 634:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable D+ pull-up and keep USB control on IO. */
 635:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_USBIO_CR1_REG = USBFS_1_USBIO_CR1_USBPUEN;
 326              		.loc 1 635 0
 327 008e 0422     		movs	r2, #4
 328 0090 0D4B     		ldr	r3, .L14+48
 329 0092 1A70     		strb	r2, [r3]
 330 0094 10BD     		pop	{r4, pc}
 331              	.L15:
 332 0096 00BF     		.align	2
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 18


 333              	.L14:
 334 0098 00000000 		.word	USBFS_1_hidProtocol
 335 009c 00000000 		.word	USBFS_1_device
 336 00a0 00000000 		.word	USBFS_1_transferState
 337 00a4 00000000 		.word	USBFS_1_configurationChanged
 338 00a8 00000000 		.word	USBFS_1_configuration
 339 00ac 00000000 		.word	USBFS_1_interfaceNumber
 340 00b0 00000000 		.word	USBFS_1_deviceAddress
 341 00b4 00000000 		.word	USBFS_1_deviceStatus
 342 00b8 00000000 		.word	USBFS_1_lastPacketSize
 343 00bc 00E100E0 		.word	-536813312
 344 00c0 09600040 		.word	1073766409
 345 00c4 28600040 		.word	1073766440
 346 00c8 12600040 		.word	1073766418
 347              		.cfi_endproc
 348              	.LFE2:
 349              		.size	USBFS_1_InitComponent, .-USBFS_1_InitComponent
 350              		.section	.text.USBFS_1_Start,"ax",%progbits
 351              		.align	2
 352              		.global	USBFS_1_Start
 353              		.thumb
 354              		.thumb_func
 355              		.type	USBFS_1_Start, %function
 356              	USBFS_1_Start:
 357              	.LFB0:
 187:Generated_Source\PSoC5/USBFS_1.c ****     if (0u == USBFS_1_initVar)
 358              		.loc 1 187 0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 362              	.LVL28:
 363 0000 38B5     		push	{r3, r4, r5, lr}
 364              		.cfi_def_cfa_offset 16
 365              		.cfi_offset 3, -16
 366              		.cfi_offset 4, -12
 367              		.cfi_offset 5, -8
 368              		.cfi_offset 14, -4
 369 0002 0446     		mov	r4, r0
 370 0004 0D46     		mov	r5, r1
 188:Generated_Source\PSoC5/USBFS_1.c ****     {
 371              		.loc 1 188 0
 372 0006 064B     		ldr	r3, .L19
 373 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 374 000a 23B9     		cbnz	r3, .L17
 190:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_initVar = 1u;
 375              		.loc 1 190 0
 376 000c FFF7FEFF 		bl	USBFS_1_Init
 377              	.LVL29:
 191:Generated_Source\PSoC5/USBFS_1.c ****     }
 378              		.loc 1 191 0
 379 0010 0122     		movs	r2, #1
 380 0012 034B     		ldr	r3, .L19
 381 0014 1A70     		strb	r2, [r3]
 382              	.L17:
 194:Generated_Source\PSoC5/USBFS_1.c **** }
 383              		.loc 1 194 0
 384 0016 2946     		mov	r1, r5
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 19


 385 0018 2046     		mov	r0, r4
 386 001a FFF7FEFF 		bl	USBFS_1_InitComponent
 387              	.LVL30:
 388 001e 38BD     		pop	{r3, r4, r5, pc}
 389              	.L20:
 390              		.align	2
 391              	.L19:
 392 0020 00000000 		.word	.LANCHOR0
 393              		.cfi_endproc
 394              	.LFE0:
 395              		.size	USBFS_1_Start, .-USBFS_1_Start
 396              		.section	.text.USBFS_1_ReInitComponent,"ax",%progbits
 397              		.align	2
 398              		.global	USBFS_1_ReInitComponent
 399              		.thumb
 400              		.thumb_func
 401              		.type	USBFS_1_ReInitComponent, %function
 402              	USBFS_1_ReInitComponent:
 403              	.LFB3:
 636:Generated_Source\PSoC5/USBFS_1.c **** }
 637:Generated_Source\PSoC5/USBFS_1.c **** 
 638:Generated_Source\PSoC5/USBFS_1.c **** 
 639:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 640:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_ReInitComponent
 641:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 642:Generated_Source\PSoC5/USBFS_1.c **** *
 643:Generated_Source\PSoC5/USBFS_1.c **** *  This function reinitialize the component configuration and is
 644:Generated_Source\PSoC5/USBFS_1.c **** *  intend to be called from the Reset interrupt.
 645:Generated_Source\PSoC5/USBFS_1.c **** *
 646:Generated_Source\PSoC5/USBFS_1.c **** * \globalvars
 647:Generated_Source\PSoC5/USBFS_1.c **** *   USBFS_1_device - Contains the device number of the desired Device
 648:Generated_Source\PSoC5/USBFS_1.c **** *        Descriptor. The device number can be found in the Device Descriptor tab
 649:Generated_Source\PSoC5/USBFS_1.c **** *       of the Configure dialog, under the settings of the desired Device Descriptor,
 650:Generated_Source\PSoC5/USBFS_1.c **** *       in the Device Number field.
 651:Generated_Source\PSoC5/USBFS_1.c **** *   USBFS_1_transferState - This variable is used by the communication
 652:Generated_Source\PSoC5/USBFS_1.c **** *       functions to handle the current transfer state. Initialized to
 653:Generated_Source\PSoC5/USBFS_1.c **** *       TRANS_STATE_IDLE in this API.
 654:Generated_Source\PSoC5/USBFS_1.c **** *   USBFS_1_configuration - Contains the current configuration number
 655:Generated_Source\PSoC5/USBFS_1.c **** *       set by the Host using a SET_CONFIGURATION request.
 656:Generated_Source\PSoC5/USBFS_1.c **** *       Initialized to zero in this API.
 657:Generated_Source\PSoC5/USBFS_1.c **** *   USBFS_1_deviceAddress - Contains the current device address. This
 658:Generated_Source\PSoC5/USBFS_1.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 659:Generated_Source\PSoC5/USBFS_1.c **** *      to the device with address 0 and then sets it to a whatever value using
 660:Generated_Source\PSoC5/USBFS_1.c **** *      a SET_ADDRESS request.
 661:Generated_Source\PSoC5/USBFS_1.c **** *   USBFS_1_deviceStatus - Initialized to 0.
 662:Generated_Source\PSoC5/USBFS_1.c **** *       This is a two-bit variable which contains the power status in the first bit
 663:Generated_Source\PSoC5/USBFS_1.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and the remote
 664:Generated_Source\PSoC5/USBFS_1.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in the second bit.
 665:Generated_Source\PSoC5/USBFS_1.c **** *   USBFS_1_lastPacketSize - Initialized to 0;
 666:Generated_Source\PSoC5/USBFS_1.c **** *
 667:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
 668:Generated_Source\PSoC5/USBFS_1.c **** *  No.
 669:Generated_Source\PSoC5/USBFS_1.c **** *
 670:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 671:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_ReInitComponent(void) 
 672:Generated_Source\PSoC5/USBFS_1.c **** {
 404              		.loc 1 672 0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 20


 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 408              		@ link register save eliminated.
 409              	.LVL31:
 673:Generated_Source\PSoC5/USBFS_1.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 674:Generated_Source\PSoC5/USBFS_1.c ****     *  Request: "When initialized, all devices default to report protocol."
 675:Generated_Source\PSoC5/USBFS_1.c ****     */
 676:Generated_Source\PSoC5/USBFS_1.c **** #if defined(USBFS_1_ENABLE_HID_CLASS)
 677:Generated_Source\PSoC5/USBFS_1.c ****     uint8 i;
 678:Generated_Source\PSoC5/USBFS_1.c **** 
 679:Generated_Source\PSoC5/USBFS_1.c ****     for (i = 0u; i < USBFS_1_MAX_INTERFACES_NUMBER; i++)
 410              		.loc 1 679 0
 411 0000 0023     		movs	r3, #0
 412 0002 04E0     		b	.L22
 413              	.LVL32:
 414              	.L23:
 680:Generated_Source\PSoC5/USBFS_1.c ****     {
 681:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_hidProtocol[i] = USBFS_1_PROTOCOL_REPORT;
 415              		.loc 1 681 0 discriminator 3
 416 0004 0121     		movs	r1, #1
 417 0006 0E4A     		ldr	r2, .L24
 418 0008 D154     		strb	r1, [r2, r3]
 679:Generated_Source\PSoC5/USBFS_1.c ****     {
 419              		.loc 1 679 0 discriminator 3
 420 000a 0B44     		add	r3, r3, r1
 421              	.LVL33:
 422 000c DBB2     		uxtb	r3, r3
 423              	.LVL34:
 424              	.L22:
 679:Generated_Source\PSoC5/USBFS_1.c ****     {
 425              		.loc 1 679 0 is_stmt 0 discriminator 1
 426 000e 002B     		cmp	r3, #0
 427 0010 F8D0     		beq	.L23
 682:Generated_Source\PSoC5/USBFS_1.c ****     }
 683:Generated_Source\PSoC5/USBFS_1.c **** #endif /* USBFS_1_ENABLE_HID_CLASS */
 684:Generated_Source\PSoC5/USBFS_1.c **** 
 685:Generated_Source\PSoC5/USBFS_1.c ****     /* Reset component internal variables. */
 686:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_transferState   = USBFS_1_TRANS_STATE_IDLE;
 428              		.loc 1 686 0 is_stmt 1
 429 0012 0023     		movs	r3, #0
 430              	.LVL35:
 431 0014 0B4A     		ldr	r2, .L24+4
 432 0016 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_configurationChanged = 0u;
 433              		.loc 1 687 0
 434 0018 0B4A     		ldr	r2, .L24+8
 435 001a 1370     		strb	r3, [r2]
 688:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_configuration   = 0u;
 436              		.loc 1 688 0
 437 001c 0B4A     		ldr	r2, .L24+12
 438 001e 1370     		strb	r3, [r2]
 689:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_interfaceNumber = 0u;
 439              		.loc 1 689 0
 440 0020 0B4A     		ldr	r2, .L24+16
 441 0022 1370     		strb	r3, [r2]
 690:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_deviceAddress   = 0u;
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 21


 442              		.loc 1 690 0
 443 0024 0B4A     		ldr	r2, .L24+20
 444 0026 1370     		strb	r3, [r2]
 691:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_deviceStatus    = 0u;
 445              		.loc 1 691 0
 446 0028 0B4A     		ldr	r2, .L24+24
 447 002a 1370     		strb	r3, [r2]
 692:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_lastPacketSize  = 0u;
 448              		.loc 1 692 0
 449 002c 0B4A     		ldr	r2, .L24+28
 450 002e 1370     		strb	r3, [r2]
 693:Generated_Source\PSoC5/USBFS_1.c **** 
 694:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
 695:Generated_Source\PSoC5/USBFS_1.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 696:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_EP0_CR_REG = USBFS_1_MODE_NAK_IN_OUT;
 697:Generated_Source\PSoC5/USBFS_1.c **** #else
 698:Generated_Source\PSoC5/USBFS_1.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 699:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_EP0_CR_REG = USBFS_1_MODE_STALL_IN_OUT;
 451              		.loc 1 699 0
 452 0030 0322     		movs	r2, #3
 453 0032 0B4B     		ldr	r3, .L24+32
 454 0034 1A70     		strb	r2, [r3]
 700:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
 701:Generated_Source\PSoC5/USBFS_1.c **** 
 702:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable device to respond to USB traffic with address 0. */
 703:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_CR0_REG = USBFS_1_DEFUALT_CR0;
 455              		.loc 1 703 0
 456 0036 8022     		movs	r2, #128
 457 0038 203B     		subs	r3, r3, #32
 458 003a 1A70     		strb	r2, [r3]
 459 003c 7047     		bx	lr
 460              	.L25:
 461 003e 00BF     		.align	2
 462              	.L24:
 463 0040 00000000 		.word	USBFS_1_hidProtocol
 464 0044 00000000 		.word	USBFS_1_transferState
 465 0048 00000000 		.word	USBFS_1_configurationChanged
 466 004c 00000000 		.word	USBFS_1_configuration
 467 0050 00000000 		.word	USBFS_1_interfaceNumber
 468 0054 00000000 		.word	USBFS_1_deviceAddress
 469 0058 00000000 		.word	USBFS_1_deviceStatus
 470 005c 00000000 		.word	USBFS_1_lastPacketSize
 471 0060 28600040 		.word	1073766440
 472              		.cfi_endproc
 473              	.LFE3:
 474              		.size	USBFS_1_ReInitComponent, .-USBFS_1_ReInitComponent
 475              		.section	.text.USBFS_1_Stop,"ax",%progbits
 476              		.align	2
 477              		.global	USBFS_1_Stop
 478              		.thumb
 479              		.thumb_func
 480              		.type	USBFS_1_Stop, %function
 481              	USBFS_1_Stop:
 482              	.LFB4:
 704:Generated_Source\PSoC5/USBFS_1.c **** }
 705:Generated_Source\PSoC5/USBFS_1.c **** 
 706:Generated_Source\PSoC5/USBFS_1.c **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 22


 707:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 708:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_Stop
 709:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 710:Generated_Source\PSoC5/USBFS_1.c **** *
 711:Generated_Source\PSoC5/USBFS_1.c **** *  This function shuts down the USB function including to release
 712:Generated_Source\PSoC5/USBFS_1.c **** *  the D+ pull-up and disabling the SIE.
 713:Generated_Source\PSoC5/USBFS_1.c **** *
 714:Generated_Source\PSoC5/USBFS_1.c **** * \globalvars
 715:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_configuration
 716:Generated_Source\PSoC5/USBFS_1.c **** *
 717:Generated_Source\PSoC5/USBFS_1.c **** *   USBFS_1_deviceAddress - Contains the current device address. This
 718:Generated_Source\PSoC5/USBFS_1.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 719:Generated_Source\PSoC5/USBFS_1.c **** *      to the device with address 0 and then sets it to a whatever value using
 720:Generated_Source\PSoC5/USBFS_1.c **** *      a SET_ADDRESS request.
 721:Generated_Source\PSoC5/USBFS_1.c **** *
 722:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_deviceStatus
 723:Generated_Source\PSoC5/USBFS_1.c **** *
 724:Generated_Source\PSoC5/USBFS_1.c **** *   \ref USBFS_1_configurationChanged
 725:Generated_Source\PSoC5/USBFS_1.c **** *
 726:Generated_Source\PSoC5/USBFS_1.c **** *   USBFS_1_intiVar -  This variable is set to zero
 727:Generated_Source\PSoC5/USBFS_1.c **** *
 728:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 729:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_Stop(void) 
 730:Generated_Source\PSoC5/USBFS_1.c **** {
 483              		.loc 1 730 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487 0000 08B5     		push	{r3, lr}
 488              		.cfi_def_cfa_offset 8
 489              		.cfi_offset 3, -8
 490              		.cfi_offset 14, -4
 731:Generated_Source\PSoC5/USBFS_1.c ****     uint8 enableInterrupts;
 732:Generated_Source\PSoC5/USBFS_1.c **** 
 733:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA)
 734:Generated_Source\PSoC5/USBFS_1.c ****     /* Stop all DMA channels. */
 735:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_Stop_DMA(USBFS_1_MAX_EP);
 736:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA) */
 737:Generated_Source\PSoC5/USBFS_1.c **** 
 738:Generated_Source\PSoC5/USBFS_1.c ****     enableInterrupts = CyEnterCriticalSection();
 491              		.loc 1 738 0
 492 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 493              	.LVL36:
 739:Generated_Source\PSoC5/USBFS_1.c **** 
 740:Generated_Source\PSoC5/USBFS_1.c ****     /* Disable USB IP to respond to USB traffic. */
 741:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_CR0_REG &= (uint8) ~USBFS_1_CR0_ENABLE;
 494              		.loc 1 741 0
 495 0006 214A     		ldr	r2, .L28
 496 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 497 000a 03F07F03 		and	r3, r3, #127
 498 000e 1370     		strb	r3, [r2]
 742:Generated_Source\PSoC5/USBFS_1.c **** 
 743:Generated_Source\PSoC5/USBFS_1.c ****     /* Disable D+ pull-up. */
 744:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_USBIO_CR1_REG &= (uint8) ~ USBFS_1_USBIO_CR1_USBPUEN;
 499              		.loc 1 744 0
 500 0010 0A32     		adds	r2, r2, #10
 501 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 23


 502 0014 03F0FB03 		and	r3, r3, #251
 503 0018 1370     		strb	r3, [r2]
 745:Generated_Source\PSoC5/USBFS_1.c **** 
 746:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
 747:Generated_Source\PSoC5/USBFS_1.c ****     /* Disable USBFS block. */
 748:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_POWER_CTRL_REG &= (uint32) ~USBFS_1_POWER_CTRL_ENABLE;
 749:Generated_Source\PSoC5/USBFS_1.c **** #else
 750:Generated_Source\PSoC5/USBFS_1.c ****     /* Clear power active and standby mode templates. */
 751:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_PM_ACT_CFG_REG  &= (uint8) ~USBFS_1_PM_ACT_EN_FSUSB;
 504              		.loc 1 751 0
 505 001a A2F5E352 		sub	r2, r2, #7264
 506 001e 0D3A     		subs	r2, r2, #13
 507 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 508 0022 03F0FE03 		and	r3, r3, #254
 509 0026 1370     		strb	r3, [r2]
 752:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_PM_STBY_CFG_REG &= (uint8) ~USBFS_1_PM_STBY_EN_FSUSB;
 510              		.loc 1 752 0
 511 0028 1032     		adds	r2, r2, #16
 512 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 513 002c 03F0FE03 		and	r3, r3, #254
 514 0030 1370     		strb	r3, [r2]
 753:Generated_Source\PSoC5/USBFS_1.c **** 
 754:Generated_Source\PSoC5/USBFS_1.c ****     /* Ensure single-ended disable bits are high (PRT15.INP_DIS[7:6])
 755:Generated_Source\PSoC5/USBFS_1.c ****      * (input receiver disabled). */
 756:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_DM_INP_DIS_REG |= (uint8) USBFS_1_DM_MASK;
 515              		.loc 1 756 0
 516 0032 174B     		ldr	r3, .L28+4
 517 0034 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 518 0036 42F08002 		orr	r2, r2, #128
 519 003a 1A70     		strb	r2, [r3]
 757:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_DP_INP_DIS_REG |= (uint8) USBFS_1_DP_MASK;
 520              		.loc 1 757 0
 521 003c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 522 003e 42F04002 		orr	r2, r2, #64
 523 0042 1A70     		strb	r2, [r3]
 758:Generated_Source\PSoC5/USBFS_1.c **** 
 759:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
 760:Generated_Source\PSoC5/USBFS_1.c **** 
 761:Generated_Source\PSoC5/USBFS_1.c ****     CyExitCriticalSection(enableInterrupts);
 524              		.loc 1 761 0
 525 0044 FFF7FEFF 		bl	CyExitCriticalSection
 526              	.LVL37:
 762:Generated_Source\PSoC5/USBFS_1.c **** 
 763:Generated_Source\PSoC5/USBFS_1.c ****     /* Disable component interrupts. */
 764:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
 765:Generated_Source\PSoC5/USBFS_1.c ****     CyIntDisable(USBFS_1_INTR_HI_VECT_NUM);
 766:Generated_Source\PSoC5/USBFS_1.c ****     CyIntDisable(USBFS_1_INTR_LO_VECT_NUM);
 767:Generated_Source\PSoC5/USBFS_1.c ****     CyIntDisable(USBFS_1_INTR_MED_VECT_NUM);
 768:Generated_Source\PSoC5/USBFS_1.c **** #else
 769:Generated_Source\PSoC5/USBFS_1.c **** 
 770:Generated_Source\PSoC5/USBFS_1.c ****     CyIntDisable(USBFS_1_BUS_RESET_VECT_NUM);
 527              		.loc 1 770 0
 528 0048 124B     		ldr	r3, .L28+8
 529 004a 4FF40002 		mov	r2, #8388608
 530 004e 1A60     		str	r2, [r3]
 771:Generated_Source\PSoC5/USBFS_1.c ****     CyIntDisable(USBFS_1_EP_0_VECT_NUM);
 531              		.loc 1 771 0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 24


 532 0050 4FF08072 		mov	r2, #16777216
 533 0054 1A60     		str	r2, [r3]
 772:Generated_Source\PSoC5/USBFS_1.c **** 
 773:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_SOF_ISR_ACTIVE)
 774:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_SOF_VECT_NUM);
 534              		.loc 1 774 0
 535 0056 4FF40012 		mov	r2, #2097152
 536 005a 1A60     		str	r2, [r3]
 775:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_SOF_ISR_ACTIVE) */
 776:Generated_Source\PSoC5/USBFS_1.c **** 
 777:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP1_ISR_ACTIVE)
 778:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_EP_1_VECT_NUM);
 537              		.loc 1 778 0
 538 005c 0222     		movs	r2, #2
 539 005e 1A60     		str	r2, [r3]
 779:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP1_ISR_ACTIVE) */
 780:Generated_Source\PSoC5/USBFS_1.c **** 
 781:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP2_ISR_ACTIVE)
 782:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_EP_2_VECT_NUM);
 540              		.loc 1 782 0
 541 0060 0422     		movs	r2, #4
 542 0062 1A60     		str	r2, [r3]
 783:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP2_ISR_ACTIVE) */
 784:Generated_Source\PSoC5/USBFS_1.c **** 
 785:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP3_ISR_ACTIVE)
 786:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_EP_3_VECT_NUM);
 787:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP3_ISR_ACTIVE) */
 788:Generated_Source\PSoC5/USBFS_1.c **** 
 789:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP4_ISR_ACTIVE)
 790:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_EP_4_VECT_NUM);
 791:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP4_ISR_ACTIVE) */
 792:Generated_Source\PSoC5/USBFS_1.c **** 
 793:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP5_ISR_ACTIVE)
 794:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_EP_5_VECT_NUM);
 795:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP5_ISR_ACTIVE) */
 796:Generated_Source\PSoC5/USBFS_1.c **** 
 797:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP6_ISR_ACTIVE)
 798:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_EP_6_VECT_NUM);
 799:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* USBFS_1_EP6_ISR_REMOVE */
 800:Generated_Source\PSoC5/USBFS_1.c **** 
 801:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP7_ISR_ACTIVE)
 802:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_EP_7_VECT_NUM);
 803:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP7_ISR_ACTIVE) */
 804:Generated_Source\PSoC5/USBFS_1.c **** 
 805:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP8_ISR_ACTIVE)
 806:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_EP_8_VECT_NUM);
 807:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP8_ISR_ACTIVE) */
 808:Generated_Source\PSoC5/USBFS_1.c **** 
 809:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DP_ISR_ACTIVE)
 810:Generated_Source\PSoC5/USBFS_1.c ****         /* Clear active mode Dp interrupt source history. */
 811:Generated_Source\PSoC5/USBFS_1.c ****         (void) USBFS_1_Dp_ClearInterrupt();
 543              		.loc 1 811 0
 544 0064 FFF7FEFF 		bl	USBFS_1_Dp_ClearInterrupt
 545              	.LVL38:
 812:Generated_Source\PSoC5/USBFS_1.c ****         CyIntClearPending(USBFS_1_DP_INTC_VECT_NUM);
 546              		.loc 1 812 0
 547 0068 4FF48052 		mov	r2, #4096
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 25


 548 006c 0A4B     		ldr	r3, .L28+12
 549 006e 1A60     		str	r2, [r3]
 813:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DP_ISR_ACTIVE). */
 814:Generated_Source\PSoC5/USBFS_1.c **** 
 815:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
 816:Generated_Source\PSoC5/USBFS_1.c **** 
 817:Generated_Source\PSoC5/USBFS_1.c ****     /* Reset component internal variables. */
 818:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_configurationChanged = 0u;
 550              		.loc 1 818 0
 551 0070 0023     		movs	r3, #0
 552 0072 0A4A     		ldr	r2, .L28+16
 553 0074 1370     		strb	r3, [r2]
 819:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_configuration   = 0u;
 554              		.loc 1 819 0
 555 0076 0A4A     		ldr	r2, .L28+20
 556 0078 1370     		strb	r3, [r2]
 820:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_interfaceNumber = 0u;
 557              		.loc 1 820 0
 558 007a 0A4A     		ldr	r2, .L28+24
 559 007c 1370     		strb	r3, [r2]
 821:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_deviceAddress   = 0u;
 560              		.loc 1 821 0
 561 007e 0A4A     		ldr	r2, .L28+28
 562 0080 1370     		strb	r3, [r2]
 822:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_deviceStatus    = 0u;
 563              		.loc 1 822 0
 564 0082 0A4A     		ldr	r2, .L28+32
 565 0084 1370     		strb	r3, [r2]
 823:Generated_Source\PSoC5/USBFS_1.c **** 
 824:Generated_Source\PSoC5/USBFS_1.c ****     /* It is mandatory for correct device startup. */
 825:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_initVar = 0u;
 566              		.loc 1 825 0
 567 0086 0A4A     		ldr	r2, .L28+36
 568 0088 1370     		strb	r3, [r2]
 569 008a 08BD     		pop	{r3, pc}
 570              	.L29:
 571              		.align	2
 572              	.L28:
 573 008c 08600040 		.word	1073766408
 574 0090 F8510040 		.word	1073762808
 575 0094 80E100E0 		.word	-536813184
 576 0098 80E200E0 		.word	-536812928
 577 009c 00000000 		.word	USBFS_1_configurationChanged
 578 00a0 00000000 		.word	USBFS_1_configuration
 579 00a4 00000000 		.word	USBFS_1_interfaceNumber
 580 00a8 00000000 		.word	USBFS_1_deviceAddress
 581 00ac 00000000 		.word	USBFS_1_deviceStatus
 582 00b0 00000000 		.word	.LANCHOR0
 583              		.cfi_endproc
 584              	.LFE4:
 585              		.size	USBFS_1_Stop, .-USBFS_1_Stop
 586              		.section	.text.USBFS_1_CheckActivity,"ax",%progbits
 587              		.align	2
 588              		.global	USBFS_1_CheckActivity
 589              		.thumb
 590              		.thumb_func
 591              		.type	USBFS_1_CheckActivity, %function
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 26


 592              	USBFS_1_CheckActivity:
 593              	.LFB5:
 826:Generated_Source\PSoC5/USBFS_1.c **** }
 827:Generated_Source\PSoC5/USBFS_1.c **** 
 828:Generated_Source\PSoC5/USBFS_1.c **** 
 829:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 830:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_CheckActivity
 831:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 832:Generated_Source\PSoC5/USBFS_1.c **** *
 833:Generated_Source\PSoC5/USBFS_1.c **** *  This function returns the activity status of the bus. It clears the hardware
 834:Generated_Source\PSoC5/USBFS_1.c **** *  status to provide updated status on the next call of this function. It
 835:Generated_Source\PSoC5/USBFS_1.c **** *  provides a way to determine whether any USB bus activity occurred. The
 836:Generated_Source\PSoC5/USBFS_1.c **** *  application should use this function to determine if the USB suspend
 837:Generated_Source\PSoC5/USBFS_1.c **** *  conditions are met.
 838:Generated_Source\PSoC5/USBFS_1.c **** *
 839:Generated_Source\PSoC5/USBFS_1.c **** *
 840:Generated_Source\PSoC5/USBFS_1.c **** * \return
 841:Generated_Source\PSoC5/USBFS_1.c **** *  cystatus: Status of the bus since the last call of the function.
 842:Generated_Source\PSoC5/USBFS_1.c **** *  Return Value |   Description
 843:Generated_Source\PSoC5/USBFS_1.c **** *  -------------|---------------------------------------------------------------
 844:Generated_Source\PSoC5/USBFS_1.c **** *  1            |Bus activity was detected since the last call to this function
 845:Generated_Source\PSoC5/USBFS_1.c **** *  0            |Bus activity was not detected since the last call to this function
 846:Generated_Source\PSoC5/USBFS_1.c **** *
 847:Generated_Source\PSoC5/USBFS_1.c **** *
 848:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 849:Generated_Source\PSoC5/USBFS_1.c **** uint8 USBFS_1_CheckActivity(void) 
 850:Generated_Source\PSoC5/USBFS_1.c **** {
 594              		.loc 1 850 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 0
 597              		@ frame_needed = 0, uses_anonymous_args = 0
 598              		@ link register save eliminated.
 851:Generated_Source\PSoC5/USBFS_1.c ****     uint8 cr1Reg = USBFS_1_CR1_REG;
 599              		.loc 1 851 0
 600 0000 064A     		ldr	r2, .L32
 601 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 602 0004 DBB2     		uxtb	r3, r3
 603              	.LVL39:
 852:Generated_Source\PSoC5/USBFS_1.c **** 
 853:Generated_Source\PSoC5/USBFS_1.c ****     /* Clear bus activity. */
 854:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_CR1_REG = (cr1Reg & (uint8) ~USBFS_1_CR1_BUS_ACTIVITY);
 604              		.loc 1 854 0
 605 0006 03F0FB01 		and	r1, r3, #251
 606 000a 1170     		strb	r1, [r2]
 607 000c 03F00403 		and	r3, r3, #4
 608              	.LVL40:
 855:Generated_Source\PSoC5/USBFS_1.c **** 
 856:Generated_Source\PSoC5/USBFS_1.c ****     /* Get bus activity. */
 857:Generated_Source\PSoC5/USBFS_1.c ****     return ((0u != (cr1Reg & USBFS_1_CR1_BUS_ACTIVITY)) ? (1u) : (0u));
 609              		.loc 1 857 0
 610 0010 03F0FF00 		and	r0, r3, #255
 611 0014 03B1     		cbz	r3, .L31
 612 0016 0120     		movs	r0, #1
 613              	.L31:
 858:Generated_Source\PSoC5/USBFS_1.c **** }
 614              		.loc 1 858 0 discriminator 4
 615 0018 7047     		bx	lr
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 27


 616              	.L33:
 617 001a 00BF     		.align	2
 618              	.L32:
 619 001c 09600040 		.word	1073766409
 620              		.cfi_endproc
 621              	.LFE5:
 622              		.size	USBFS_1_CheckActivity, .-USBFS_1_CheckActivity
 623              		.section	.text.USBFS_1_GetConfiguration,"ax",%progbits
 624              		.align	2
 625              		.global	USBFS_1_GetConfiguration
 626              		.thumb
 627              		.thumb_func
 628              		.type	USBFS_1_GetConfiguration, %function
 629              	USBFS_1_GetConfiguration:
 630              	.LFB6:
 859:Generated_Source\PSoC5/USBFS_1.c **** 
 860:Generated_Source\PSoC5/USBFS_1.c **** 
 861:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 862:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_GetConfiguration
 863:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 864:Generated_Source\PSoC5/USBFS_1.c **** *
 865:Generated_Source\PSoC5/USBFS_1.c **** *  This function gets the current configuration of the USB device.
 866:Generated_Source\PSoC5/USBFS_1.c **** *
 867:Generated_Source\PSoC5/USBFS_1.c **** * \return
 868:Generated_Source\PSoC5/USBFS_1.c **** *  Returns the currently assigned configuration. Returns 0 if the device
 869:Generated_Source\PSoC5/USBFS_1.c **** *  is not configured
 870:Generated_Source\PSoC5/USBFS_1.c **** *
 871:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 872:Generated_Source\PSoC5/USBFS_1.c **** uint8 USBFS_1_GetConfiguration(void) 
 873:Generated_Source\PSoC5/USBFS_1.c **** {
 631              		.loc 1 873 0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 0
 634              		@ frame_needed = 0, uses_anonymous_args = 0
 635              		@ link register save eliminated.
 874:Generated_Source\PSoC5/USBFS_1.c ****     return (USBFS_1_configuration);
 636              		.loc 1 874 0
 637 0000 014B     		ldr	r3, .L35
 638 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 875:Generated_Source\PSoC5/USBFS_1.c **** }
 639              		.loc 1 875 0
 640 0004 7047     		bx	lr
 641              	.L36:
 642 0006 00BF     		.align	2
 643              	.L35:
 644 0008 00000000 		.word	USBFS_1_configuration
 645              		.cfi_endproc
 646              	.LFE6:
 647              		.size	USBFS_1_GetConfiguration, .-USBFS_1_GetConfiguration
 648              		.section	.text.USBFS_1_IsConfigurationChanged,"ax",%progbits
 649              		.align	2
 650              		.global	USBFS_1_IsConfigurationChanged
 651              		.thumb
 652              		.thumb_func
 653              		.type	USBFS_1_IsConfigurationChanged, %function
 654              	USBFS_1_IsConfigurationChanged:
 655              	.LFB7:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 28


 876:Generated_Source\PSoC5/USBFS_1.c **** 
 877:Generated_Source\PSoC5/USBFS_1.c **** 
 878:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 879:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_IsConfigurationChanged
 880:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 881:Generated_Source\PSoC5/USBFS_1.c **** *
 882:Generated_Source\PSoC5/USBFS_1.c **** *  This function returns the clear-on-read configuration state.  It is useful
 883:Generated_Source\PSoC5/USBFS_1.c **** *  when the host sends double SET_CONFIGURATION request with the same 
 884:Generated_Source\PSoC5/USBFS_1.c **** *  configuration number or changes alternate settings of the interface. 
 885:Generated_Source\PSoC5/USBFS_1.c **** *  After configuration has been changed the OUT endpoints must be enabled and IN 
 886:Generated_Source\PSoC5/USBFS_1.c **** *  endpoint must be loaded with data to start communication with the host.
 887:Generated_Source\PSoC5/USBFS_1.c **** *
 888:Generated_Source\PSoC5/USBFS_1.c **** * \return
 889:Generated_Source\PSoC5/USBFS_1.c **** *  None-zero value when new configuration has been changed, otherwise zero is
 890:Generated_Source\PSoC5/USBFS_1.c **** *  returned.
 891:Generated_Source\PSoC5/USBFS_1.c **** *
 892:Generated_Source\PSoC5/USBFS_1.c **** * \globalvars
 893:Generated_Source\PSoC5/USBFS_1.c **** *
 894:Generated_Source\PSoC5/USBFS_1.c **** *  \ref USBFS_1_configurationChanged - This variable is set to 1 after
 895:Generated_Source\PSoC5/USBFS_1.c **** *   a SET_CONFIGURATION request and cleared in this function.
 896:Generated_Source\PSoC5/USBFS_1.c **** *
 897:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 898:Generated_Source\PSoC5/USBFS_1.c **** uint8 USBFS_1_IsConfigurationChanged(void) 
 899:Generated_Source\PSoC5/USBFS_1.c **** {
 656              		.loc 1 899 0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660              		@ link register save eliminated.
 661              	.LVL41:
 900:Generated_Source\PSoC5/USBFS_1.c ****     uint8 res = 0u;
 901:Generated_Source\PSoC5/USBFS_1.c **** 
 902:Generated_Source\PSoC5/USBFS_1.c ****     if (USBFS_1_configurationChanged != 0u)
 662              		.loc 1 902 0
 663 0000 064B     		ldr	r3, .L40
 664 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 665 0004 13F0FF0F 		tst	r3, #255
 666 0008 05D0     		beq	.L39
 903:Generated_Source\PSoC5/USBFS_1.c ****     {
 904:Generated_Source\PSoC5/USBFS_1.c ****         res = USBFS_1_configurationChanged;
 667              		.loc 1 904 0
 668 000a 044B     		ldr	r3, .L40
 669 000c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 670 000e C0B2     		uxtb	r0, r0
 671              	.LVL42:
 905:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_configurationChanged = 0u;
 672              		.loc 1 905 0
 673 0010 0022     		movs	r2, #0
 674 0012 1A70     		strb	r2, [r3]
 675 0014 7047     		bx	lr
 676              	.LVL43:
 677              	.L39:
 900:Generated_Source\PSoC5/USBFS_1.c ****     uint8 res = 0u;
 678              		.loc 1 900 0
 679 0016 0020     		movs	r0, #0
 680              	.LVL44:
 906:Generated_Source\PSoC5/USBFS_1.c ****     }
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 29


 907:Generated_Source\PSoC5/USBFS_1.c **** 
 908:Generated_Source\PSoC5/USBFS_1.c ****     return (res);
 909:Generated_Source\PSoC5/USBFS_1.c **** }
 681              		.loc 1 909 0
 682 0018 7047     		bx	lr
 683              	.L41:
 684 001a 00BF     		.align	2
 685              	.L40:
 686 001c 00000000 		.word	USBFS_1_configurationChanged
 687              		.cfi_endproc
 688              	.LFE7:
 689              		.size	USBFS_1_IsConfigurationChanged, .-USBFS_1_IsConfigurationChanged
 690              		.section	.text.USBFS_1_GetInterfaceSetting,"ax",%progbits
 691              		.align	2
 692              		.global	USBFS_1_GetInterfaceSetting
 693              		.thumb
 694              		.thumb_func
 695              		.type	USBFS_1_GetInterfaceSetting, %function
 696              	USBFS_1_GetInterfaceSetting:
 697              	.LFB8:
 910:Generated_Source\PSoC5/USBFS_1.c **** 
 911:Generated_Source\PSoC5/USBFS_1.c **** 
 912:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 913:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_GetInterfaceSetting
 914:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 915:Generated_Source\PSoC5/USBFS_1.c **** *
 916:Generated_Source\PSoC5/USBFS_1.c **** *  This function gets the current alternate setting for the specified interface.
 917:Generated_Source\PSoC5/USBFS_1.c **** *  It is useful to identify which alternate settings are active in the specified 
 918:Generated_Source\PSoC5/USBFS_1.c **** *  interface.
 919:Generated_Source\PSoC5/USBFS_1.c **** *
 920:Generated_Source\PSoC5/USBFS_1.c **** *  \param
 921:Generated_Source\PSoC5/USBFS_1.c **** *  interfaceNumber interface number
 922:Generated_Source\PSoC5/USBFS_1.c **** *
 923:Generated_Source\PSoC5/USBFS_1.c **** * \return
 924:Generated_Source\PSoC5/USBFS_1.c **** *  Returns the current alternate setting for the specified interface.
 925:Generated_Source\PSoC5/USBFS_1.c **** *
 926:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 927:Generated_Source\PSoC5/USBFS_1.c **** uint8  USBFS_1_GetInterfaceSetting(uint8 interfaceNumber)
 928:Generated_Source\PSoC5/USBFS_1.c ****                                                     
 929:Generated_Source\PSoC5/USBFS_1.c **** {
 698              		.loc 1 929 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 0
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702              		@ link register save eliminated.
 703              	.LVL45:
 930:Generated_Source\PSoC5/USBFS_1.c ****     return (USBFS_1_interfaceSetting[interfaceNumber]);
 704              		.loc 1 930 0
 705 0000 014B     		ldr	r3, .L43
 706 0002 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 707              	.LVL46:
 931:Generated_Source\PSoC5/USBFS_1.c **** }
 708              		.loc 1 931 0
 709 0004 7047     		bx	lr
 710              	.L44:
 711 0006 00BF     		.align	2
 712              	.L43:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 30


 713 0008 00000000 		.word	USBFS_1_interfaceSetting
 714              		.cfi_endproc
 715              	.LFE8:
 716              		.size	USBFS_1_GetInterfaceSetting, .-USBFS_1_GetInterfaceSetting
 717              		.section	.text.USBFS_1_GetEPState,"ax",%progbits
 718              		.align	2
 719              		.global	USBFS_1_GetEPState
 720              		.thumb
 721              		.thumb_func
 722              		.type	USBFS_1_GetEPState, %function
 723              	USBFS_1_GetEPState:
 724              	.LFB9:
 932:Generated_Source\PSoC5/USBFS_1.c **** 
 933:Generated_Source\PSoC5/USBFS_1.c **** 
 934:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 935:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_GetEPState
 936:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 937:Generated_Source\PSoC5/USBFS_1.c **** *
 938:Generated_Source\PSoC5/USBFS_1.c **** *  This function returns the state of the requested endpoint.
 939:Generated_Source\PSoC5/USBFS_1.c **** *
 940:Generated_Source\PSoC5/USBFS_1.c **** * \param epNumber Data endpoint number
 941:Generated_Source\PSoC5/USBFS_1.c **** *
 942:Generated_Source\PSoC5/USBFS_1.c **** * \return
 943:Generated_Source\PSoC5/USBFS_1.c **** *  Returns the current state of the specified USBFS endpoint. Symbolic names and
 944:Generated_Source\PSoC5/USBFS_1.c **** *  their associated values are given in the following table. Use these constants
 945:Generated_Source\PSoC5/USBFS_1.c **** *  whenever you write code to change the state of the endpoints, such as ISR
 946:Generated_Source\PSoC5/USBFS_1.c **** *  code, to handle data sent or received.
 947:Generated_Source\PSoC5/USBFS_1.c **** *
 948:Generated_Source\PSoC5/USBFS_1.c **** *  Return Value           | Description
 949:Generated_Source\PSoC5/USBFS_1.c **** *  -----------------------|-----------------------------------------------------
 950:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_NO_EVENT_PENDING |The endpoint is awaiting SIE action
 951:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_EVENT_PENDING    |The endpoint is awaiting CPU action
 952:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_NO_EVENT_ALLOWED |The endpoint is locked from access
 953:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_IN_BUFFER_FULL   |The IN endpoint is loaded and the mode is set to ACK IN
 954:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_IN_BUFFER_EMPTY  |An IN transaction occurred and more data can be loaded
 955:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_OUT_BUFFER_EMPTY |The OUT endpoint is set to ACK OUT and is waiting for data
 956:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_OUT_BUFFER_FULL  |An OUT transaction has occurred and data can be read
 957:Generated_Source\PSoC5/USBFS_1.c **** *
 958:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 959:Generated_Source\PSoC5/USBFS_1.c **** uint8 USBFS_1_GetEPState(uint8 epNumber) 
 960:Generated_Source\PSoC5/USBFS_1.c **** {
 725              		.loc 1 960 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729              		@ link register save eliminated.
 730              	.LVL47:
 961:Generated_Source\PSoC5/USBFS_1.c ****     return (USBFS_1_EP[epNumber].apiEpState);
 731              		.loc 1 961 0
 732 0000 00EB4000 		add	r0, r0, r0, lsl #1
 733              	.LVL48:
 734 0004 8300     		lsls	r3, r0, #2
 735 0006 024A     		ldr	r2, .L46
 736 0008 1344     		add	r3, r3, r2
 737 000a 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 962:Generated_Source\PSoC5/USBFS_1.c **** }
 738              		.loc 1 962 0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 31


 739 000c 7047     		bx	lr
 740              	.L47:
 741 000e 00BF     		.align	2
 742              	.L46:
 743 0010 00000000 		.word	USBFS_1_EP
 744              		.cfi_endproc
 745              	.LFE9:
 746              		.size	USBFS_1_GetEPState, .-USBFS_1_GetEPState
 747              		.section	.text.USBFS_1_GetEPCount,"ax",%progbits
 748              		.align	2
 749              		.global	USBFS_1_GetEPCount
 750              		.thumb
 751              		.thumb_func
 752              		.type	USBFS_1_GetEPCount, %function
 753              	USBFS_1_GetEPCount:
 754              	.LFB10:
 963:Generated_Source\PSoC5/USBFS_1.c **** 
 964:Generated_Source\PSoC5/USBFS_1.c **** 
 965:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
 966:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_GetEPCount
 967:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
 968:Generated_Source\PSoC5/USBFS_1.c **** *
 969:Generated_Source\PSoC5/USBFS_1.c **** *  This function supports Data Endpoints only(EP1-EP8).
 970:Generated_Source\PSoC5/USBFS_1.c **** *  Returns the transfer count for the requested endpoint.  The value from
 971:Generated_Source\PSoC5/USBFS_1.c **** *  the count registers includes 2 counts for the two byte checksum of the
 972:Generated_Source\PSoC5/USBFS_1.c **** *  packet.  This function subtracts the two counts.
 973:Generated_Source\PSoC5/USBFS_1.c **** *
 974:Generated_Source\PSoC5/USBFS_1.c **** *  \param epNumber Data Endpoint Number.
 975:Generated_Source\PSoC5/USBFS_1.c **** *                   Valid values are between 1 and 8.
 976:Generated_Source\PSoC5/USBFS_1.c **** *
 977:Generated_Source\PSoC5/USBFS_1.c **** * \return
 978:Generated_Source\PSoC5/USBFS_1.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 979:Generated_Source\PSoC5/USBFS_1.c **** *  invalid endpoint.
 980:Generated_Source\PSoC5/USBFS_1.c **** *
 981:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
 982:Generated_Source\PSoC5/USBFS_1.c **** uint16 USBFS_1_GetEPCount(uint8 epNumber) 
 983:Generated_Source\PSoC5/USBFS_1.c **** {
 755              		.loc 1 983 0
 756              		.cfi_startproc
 757              		@ args = 0, pretend = 0, frame = 0
 758              		@ frame_needed = 0, uses_anonymous_args = 0
 759              		@ link register save eliminated.
 760              	.LVL49:
 984:Generated_Source\PSoC5/USBFS_1.c ****     uint16 cntr = 0u;
 985:Generated_Source\PSoC5/USBFS_1.c **** 
 986:Generated_Source\PSoC5/USBFS_1.c ****     if ((epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
 761              		.loc 1 986 0
 762 0000 431E     		subs	r3, r0, #1
 763 0002 DBB2     		uxtb	r3, r3
 764 0004 072B     		cmp	r3, #7
 765 0006 0BD8     		bhi	.L50
 987:Generated_Source\PSoC5/USBFS_1.c ****     {
 988:Generated_Source\PSoC5/USBFS_1.c ****         /* Get 11-bits EP counter where epCnt0 - 3 bits MSB and epCnt1 - 8 bits LSB. */
 989:Generated_Source\PSoC5/USBFS_1.c ****         cntr  = ((uint16) USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCnt0) & USBFS_1_EPX_CNT0_MASK;
 766              		.loc 1 989 0
 767 0008 064B     		ldr	r3, .L51
 768 000a 0001     		lsls	r0, r0, #4
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 32


 769              	.LVL50:
 770 000c 1A18     		adds	r2, r3, r0
 771 000e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 772 0010 00F00F00 		and	r0, r0, #15
 773              	.LVL51:
 990:Generated_Source\PSoC5/USBFS_1.c ****         cntr  = ((uint16) (cntr << 8u)) | ((uint16) USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCnt1);
 774              		.loc 1 990 0
 775 0014 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 776 0016 43EA0020 		orr	r0, r3, r0, lsl #8
 777              	.LVL52:
 991:Generated_Source\PSoC5/USBFS_1.c ****         cntr -= USBFS_1_EPX_CNTX_CRC_COUNT;
 778              		.loc 1 991 0
 779 001a 0238     		subs	r0, r0, #2
 780              	.LVL53:
 781 001c 80B2     		uxth	r0, r0
 782              	.LVL54:
 783 001e 7047     		bx	lr
 784              	.LVL55:
 785              	.L50:
 984:Generated_Source\PSoC5/USBFS_1.c **** 
 786              		.loc 1 984 0
 787 0020 0020     		movs	r0, #0
 788              	.LVL56:
 992:Generated_Source\PSoC5/USBFS_1.c ****     }
 993:Generated_Source\PSoC5/USBFS_1.c **** 
 994:Generated_Source\PSoC5/USBFS_1.c ****     return (cntr);
 995:Generated_Source\PSoC5/USBFS_1.c **** }
 789              		.loc 1 995 0
 790 0022 7047     		bx	lr
 791              	.L52:
 792              		.align	2
 793              	.L51:
 794 0024 FC5F0040 		.word	1073766396
 795              		.cfi_endproc
 796              	.LFE10:
 797              		.size	USBFS_1_GetEPCount, .-USBFS_1_GetEPCount
 798              		.section	.text.USBFS_1_LoadInEP,"ax",%progbits
 799              		.align	2
 800              		.global	USBFS_1_LoadInEP
 801              		.thumb
 802              		.thumb_func
 803              		.type	USBFS_1_LoadInEP, %function
 804              	USBFS_1_LoadInEP:
 805              	.LFB11:
 996:Generated_Source\PSoC5/USBFS_1.c **** 
 997:Generated_Source\PSoC5/USBFS_1.c **** 
 998:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA)
 999:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
1000:Generated_Source\PSoC5/USBFS_1.c ****     /*******************************************************************************
1001:Generated_Source\PSoC5/USBFS_1.c ****     * Function Name: USBFS_1_InitEpDma
1002:Generated_Source\PSoC5/USBFS_1.c ****     ****************************************************************************//**
1003:Generated_Source\PSoC5/USBFS_1.c ****     *
1004:Generated_Source\PSoC5/USBFS_1.c ****     *  This function configures priority for all DMA channels utilized by the
1005:Generated_Source\PSoC5/USBFS_1.c ****     *  component. Also sets callbacks for DMA auto mode.
1006:Generated_Source\PSoC5/USBFS_1.c ****     *
1007:Generated_Source\PSoC5/USBFS_1.c ****     *******************************************************************************/
1008:Generated_Source\PSoC5/USBFS_1.c ****     static void USBFS_1_InitEpDma(void)
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 33


1009:Generated_Source\PSoC5/USBFS_1.c ****     {
1010:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA1_ACTIVE)
1011:Generated_Source\PSoC5/USBFS_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_1_ep1_dma_CHANNEL] = USBFS_1_ep1_dma_CHANNEL_CFG;
1012:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA1_ACTIVE) */
1013:Generated_Source\PSoC5/USBFS_1.c **** 
1014:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA2_ACTIVE)
1015:Generated_Source\PSoC5/USBFS_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_1_ep2_dma_CHANNEL] = USBFS_1_ep2_dma_CHANNEL_CFG;
1016:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA2_ACTIVE) */
1017:Generated_Source\PSoC5/USBFS_1.c **** 
1018:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA3_ACTIVE)
1019:Generated_Source\PSoC5/USBFS_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_1_ep3_dma_CHANNEL] = USBFS_1_ep3_dma_CHANNEL_CFG;
1020:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA3_ACTIVE) */
1021:Generated_Source\PSoC5/USBFS_1.c **** 
1022:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA4_ACTIVE)
1023:Generated_Source\PSoC5/USBFS_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_1_ep4_dma_CHANNEL] = USBFS_1_ep4_dma_CHANNEL_CFG;
1024:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA4_ACTIVE) */
1025:Generated_Source\PSoC5/USBFS_1.c **** 
1026:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA5_ACTIVE)
1027:Generated_Source\PSoC5/USBFS_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_1_ep5_dma_CHANNEL] = USBFS_1_ep5_dma_CHANNEL_CFG;
1028:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA5_ACTIVE) */
1029:Generated_Source\PSoC5/USBFS_1.c **** 
1030:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA6_ACTIVE)
1031:Generated_Source\PSoC5/USBFS_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_1_ep6_dma_CHANNEL] = USBFS_1_ep6_dma_CHANNEL_CFG;
1032:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA6_ACTIVE) */
1033:Generated_Source\PSoC5/USBFS_1.c **** 
1034:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA7_ACTIVE)
1035:Generated_Source\PSoC5/USBFS_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_1_ep7_dma_CHANNEL] = USBFS_1_ep7_dma_CHANNEL_CFG;
1036:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA7_ACTIVE) */
1037:Generated_Source\PSoC5/USBFS_1.c **** 
1038:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA8_ACTIVE)
1039:Generated_Source\PSoC5/USBFS_1.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_1_ep8_dma_CHANNEL] = USBFS_1_ep8_dma_CHANNEL_CFG;
1040:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA8_ACTIVE) */
1041:Generated_Source\PSoC5/USBFS_1.c **** 
1042:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO)
1043:Generated_Source\PSoC5/USBFS_1.c ****         /* Initialize DMA channel callbacks. */
1044:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_DMA1_ACTIVE)
1045:Generated_Source\PSoC5/USBFS_1.c ****             (void) USBFS_1_ep1_dma_SetInterruptCallback(&USBFS_1_EP1_DMA_DONE_ISR);
1046:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_DMA1_ACTIVE) */
1047:Generated_Source\PSoC5/USBFS_1.c **** 
1048:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_DMA2_ACTIVE)
1049:Generated_Source\PSoC5/USBFS_1.c ****             (void) USBFS_1_ep2_dma_SetInterruptCallback(&USBFS_1_EP2_DMA_DONE_ISR);
1050:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_DMA2_ACTIVE) */
1051:Generated_Source\PSoC5/USBFS_1.c **** 
1052:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_DMA3_ACTIVE)
1053:Generated_Source\PSoC5/USBFS_1.c ****             (void) USBFS_1_ep3_dma_SetInterruptCallback(&USBFS_1_EP3_DMA_DONE_ISR);
1054:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_DMA3_ACTIVE) */
1055:Generated_Source\PSoC5/USBFS_1.c **** 
1056:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_DMA4_ACTIVE)
1057:Generated_Source\PSoC5/USBFS_1.c ****             (void) USBFS_1_ep4_dma_SetInterruptCallback(&USBFS_1_EP4_DMA_DONE_ISR);
1058:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_DMA4_ACTIVE) */
1059:Generated_Source\PSoC5/USBFS_1.c **** 
1060:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_DMA5_ACTIVE)
1061:Generated_Source\PSoC5/USBFS_1.c ****             (void) USBFS_1_ep5_dma_SetInterruptCallback(&USBFS_1_EP5_DMA_DONE_ISR);
1062:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_DMA5_ACTIVE) */
1063:Generated_Source\PSoC5/USBFS_1.c **** 
1064:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_DMA6_ACTIVE)
1065:Generated_Source\PSoC5/USBFS_1.c ****             (void) USBFS_1_ep6_dma_SetInterruptCallback(&USBFS_1_EP6_DMA_DONE_ISR);
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 34


1066:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_DMA6_ACTIVE) */
1067:Generated_Source\PSoC5/USBFS_1.c **** 
1068:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_DMA7_ACTIVE)
1069:Generated_Source\PSoC5/USBFS_1.c ****             (void) USBFS_1_ep7_dma_SetInterruptCallback(&USBFS_1_EP7_DMA_DONE_ISR);
1070:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_DMA7_ACTIVE) */
1071:Generated_Source\PSoC5/USBFS_1.c **** 
1072:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_DMA8_ACTIVE)
1073:Generated_Source\PSoC5/USBFS_1.c ****             (void) USBFS_1_ep8_dma_SetInterruptCallback(&USBFS_1_EP8_DMA_DONE_ISR);
1074:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_DMA8_ACTIVE) */
1075:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
1076:Generated_Source\PSoC5/USBFS_1.c ****     }
1077:Generated_Source\PSoC5/USBFS_1.c **** #else
1078:Generated_Source\PSoC5/USBFS_1.c **** 
1079:Generated_Source\PSoC5/USBFS_1.c **** 
1080:Generated_Source\PSoC5/USBFS_1.c ****     /***************************************************************************
1081:Generated_Source\PSoC5/USBFS_1.c ****     * Function Name: USBFS_1_InitEP_DMA
1082:Generated_Source\PSoC5/USBFS_1.c ****     ************************************************************************//**
1083:Generated_Source\PSoC5/USBFS_1.c ****     *
1084:Generated_Source\PSoC5/USBFS_1.c ****     *  This function allocates and initializes a DMA channel to be used by the
1085:Generated_Source\PSoC5/USBFS_1.c ****     *  USBFS_1_LoadInEP() or USBFS_1_ReadOutEP() APIs for data
1086:Generated_Source\PSoC5/USBFS_1.c ****     *  transfer. It is available when the Endpoint Memory Management parameter
1087:Generated_Source\PSoC5/USBFS_1.c ****     *  is set to DMA.
1088:Generated_Source\PSoC5/USBFS_1.c ****     *
1089:Generated_Source\PSoC5/USBFS_1.c ****     *  This function is automatically called from the USBFS_LoadInEP() and USBFS_ReadOutEP() APIs.
1090:Generated_Source\PSoC5/USBFS_1.c ****     *
1091:Generated_Source\PSoC5/USBFS_1.c ****     *  \param epNumber Contains the data endpoint number.
1092:Generated_Source\PSoC5/USBFS_1.c ****     *            Valid values are between 1 and 8.
1093:Generated_Source\PSoC5/USBFS_1.c ****     *  \param *pData Pointer to a data array that is related to the EP transfers.
1094:Generated_Source\PSoC5/USBFS_1.c ****     *
1095:Generated_Source\PSoC5/USBFS_1.c ****     * \reentrant No.
1096:Generated_Source\PSoC5/USBFS_1.c ****     *
1097:Generated_Source\PSoC5/USBFS_1.c ****     ***************************************************************************/
1098:Generated_Source\PSoC5/USBFS_1.c ****     void USBFS_1_InitEP_DMA(uint8 epNumber, const uint8 *pData)
1099:Generated_Source\PSoC5/USBFS_1.c ****                                                                     
1100:Generated_Source\PSoC5/USBFS_1.c ****     {
1101:Generated_Source\PSoC5/USBFS_1.c ****         uint16 src;
1102:Generated_Source\PSoC5/USBFS_1.c ****         uint16 dst;
1103:Generated_Source\PSoC5/USBFS_1.c **** 
1104:Generated_Source\PSoC5/USBFS_1.c ****     #if (CY_PSOC3)
1105:Generated_Source\PSoC5/USBFS_1.c ****         src = HI16(CYDEV_SRAM_BASE);
1106:Generated_Source\PSoC5/USBFS_1.c ****         dst = HI16(CYDEV_PERIPH_BASE);
1107:Generated_Source\PSoC5/USBFS_1.c ****         pData = pData;
1108:Generated_Source\PSoC5/USBFS_1.c ****     #else
1109:Generated_Source\PSoC5/USBFS_1.c ****         if ((USBFS_1_EP[epNumber].addr & USBFS_1_DIR_IN) != 0u)
1110:Generated_Source\PSoC5/USBFS_1.c ****         {
1111:Generated_Source\PSoC5/USBFS_1.c ****             /* IN endpoint: source is memory buffer. */
1112:Generated_Source\PSoC5/USBFS_1.c ****             src = HI16(pData);
1113:Generated_Source\PSoC5/USBFS_1.c ****             dst = HI16(CYDEV_PERIPH_BASE);
1114:Generated_Source\PSoC5/USBFS_1.c ****         }
1115:Generated_Source\PSoC5/USBFS_1.c ****         else
1116:Generated_Source\PSoC5/USBFS_1.c ****         {
1117:Generated_Source\PSoC5/USBFS_1.c ****             /* OUT endpoint: source is USB IP memory buffer. */
1118:Generated_Source\PSoC5/USBFS_1.c ****             src = HI16(CYDEV_PERIPH_BASE);
1119:Generated_Source\PSoC5/USBFS_1.c ****             dst = HI16(pData);
1120:Generated_Source\PSoC5/USBFS_1.c ****         }
1121:Generated_Source\PSoC5/USBFS_1.c ****     #endif  /* (CY_PSOC3) */
1122:Generated_Source\PSoC5/USBFS_1.c **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 35


1123:Generated_Source\PSoC5/USBFS_1.c ****         switch(epNumber)
1124:Generated_Source\PSoC5/USBFS_1.c ****         {
1125:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA1_ACTIVE)
1126:Generated_Source\PSoC5/USBFS_1.c ****         case USBFS_1_EP1:
1127:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaChan[epNumber] = USBFS_1_ep1_DmaInitialize(USBFS_1_DMA_BYTES_PER_BURST,
1128:Generated_Source\PSoC5/USBFS_1.c ****                                                                                     USBFS_1_DMA_REQ
1129:Generated_Source\PSoC5/USBFS_1.c ****             break;
1130:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA1_ACTIVE) */
1131:Generated_Source\PSoC5/USBFS_1.c **** 
1132:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA2_ACTIVE)
1133:Generated_Source\PSoC5/USBFS_1.c ****         case USBFS_1_EP2:
1134:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaChan[epNumber] = USBFS_1_ep2_DmaInitialize(USBFS_1_DMA_BYTES_PER_BURST,
1135:Generated_Source\PSoC5/USBFS_1.c ****                                                                                     USBFS_1_DMA_REQ
1136:Generated_Source\PSoC5/USBFS_1.c ****             break;
1137:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA2_ACTIVE) */
1138:Generated_Source\PSoC5/USBFS_1.c **** 
1139:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA3_ACTIVE)
1140:Generated_Source\PSoC5/USBFS_1.c ****             case USBFS_1_EP3:
1141:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_DmaChan[epNumber] = USBFS_1_ep3_DmaInitialize(USBFS_1_DMA_BYTES_PER_BURST,
1142:Generated_Source\PSoC5/USBFS_1.c ****                                                                                         USBFS_1_DMA
1143:Generated_Source\PSoC5/USBFS_1.c ****             break;
1144:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA3_ACTIVE) */
1145:Generated_Source\PSoC5/USBFS_1.c **** 
1146:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA4_ACTIVE)
1147:Generated_Source\PSoC5/USBFS_1.c ****             case USBFS_1_EP4:
1148:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_DmaChan[epNumber] = USBFS_1_ep4_DmaInitialize(USBFS_1_DMA_BYTES_PER_BURST,
1149:Generated_Source\PSoC5/USBFS_1.c ****                                                                                         USBFS_1_DMA
1150:Generated_Source\PSoC5/USBFS_1.c ****             break;
1151:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA4_ACTIVE) */
1152:Generated_Source\PSoC5/USBFS_1.c **** 
1153:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA5_ACTIVE)
1154:Generated_Source\PSoC5/USBFS_1.c ****             case USBFS_1_EP5:
1155:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_DmaChan[epNumber] = USBFS_1_ep5_DmaInitialize(USBFS_1_DMA_BYTES_PER_BURST,
1156:Generated_Source\PSoC5/USBFS_1.c ****                                                                                         USBFS_1_DMA
1157:Generated_Source\PSoC5/USBFS_1.c ****             break;
1158:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA5_ACTIVE) */
1159:Generated_Source\PSoC5/USBFS_1.c **** 
1160:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA6_ACTIVE)
1161:Generated_Source\PSoC5/USBFS_1.c ****         case USBFS_1_EP6:
1162:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaChan[epNumber] = USBFS_1_ep6_DmaInitialize(USBFS_1_DMA_BYTES_PER_BURST,
1163:Generated_Source\PSoC5/USBFS_1.c ****                                                                                     USBFS_1_DMA_REQ
1164:Generated_Source\PSoC5/USBFS_1.c ****             break;
1165:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA6_ACTIVE) */
1166:Generated_Source\PSoC5/USBFS_1.c **** 
1167:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA7_ACTIVE)
1168:Generated_Source\PSoC5/USBFS_1.c ****         case USBFS_1_EP7:
1169:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_DmaChan[epNumber] = USBFS_1_ep7_DmaInitialize(USBFS_1_DMA_BYTES_PER_BURST,
1170:Generated_Source\PSoC5/USBFS_1.c ****                                                                                         USBFS_1_DMA
1171:Generated_Source\PSoC5/USBFS_1.c ****             break;
1172:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA7_ACTIVE) */
1173:Generated_Source\PSoC5/USBFS_1.c **** 
1174:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_DMA8_ACTIVE)
1175:Generated_Source\PSoC5/USBFS_1.c ****         case USBFS_1_EP8:
1176:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_DmaChan[epNumber] = USBFS_1_ep8_DmaInitialize(USBFS_1_DMA_BYTES_PER_BURST,
1177:Generated_Source\PSoC5/USBFS_1.c ****                                                                                         USBFS_1_DMA
1178:Generated_Source\PSoC5/USBFS_1.c ****             break;
1179:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_DMA8_ACTIVE) */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 36


1180:Generated_Source\PSoC5/USBFS_1.c **** 
1181:Generated_Source\PSoC5/USBFS_1.c ****         default:
1182:Generated_Source\PSoC5/USBFS_1.c ****             /* Do nothing for endpoints other than 1-8. */
1183:Generated_Source\PSoC5/USBFS_1.c ****             break;
1184:Generated_Source\PSoC5/USBFS_1.c ****         }
1185:Generated_Source\PSoC5/USBFS_1.c **** 
1186:Generated_Source\PSoC5/USBFS_1.c ****         if ((epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
1187:Generated_Source\PSoC5/USBFS_1.c ****         {
1188:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaTd[epNumber] = CyDmaTdAllocate();
1189:Generated_Source\PSoC5/USBFS_1.c **** 
1190:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u))
1191:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaNextTd[epNumber] = CyDmaTdAllocate();
1192:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u)) */
1193:Generated_Source\PSoC5/USBFS_1.c ****         }
1194:Generated_Source\PSoC5/USBFS_1.c ****     }
1195:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
1196:Generated_Source\PSoC5/USBFS_1.c **** 
1197:Generated_Source\PSoC5/USBFS_1.c ****     /***************************************************************************
1198:Generated_Source\PSoC5/USBFS_1.c ****     * Function Name: USBFS_1_Stop_DMA
1199:Generated_Source\PSoC5/USBFS_1.c ****     ************************************************************************//**
1200:Generated_Source\PSoC5/USBFS_1.c ****     *  
1201:Generated_Source\PSoC5/USBFS_1.c ****     *  This function stops DMA channel associated with endpoint. It is available 
1202:Generated_Source\PSoC5/USBFS_1.c ****     *  when the Endpoint Buffer Management parameter is set to DMA. Call this 
1203:Generated_Source\PSoC5/USBFS_1.c ****     *  function when endpoint direction is changed from IN to OUT or vice versa 
1204:Generated_Source\PSoC5/USBFS_1.c ****     *  to trigger DMA re-configuration when USBFS_1_LoadInEP() or 
1205:Generated_Source\PSoC5/USBFS_1.c ****     *  USBFS_1_ReadOutEP() functions are called the first time. 
1206:Generated_Source\PSoC5/USBFS_1.c ****     *  
1207:Generated_Source\PSoC5/USBFS_1.c ****     *  \param epNumber: The data endpoint number for which associated DMA 
1208:Generated_Source\PSoC5/USBFS_1.c ****     *  channel is stopped. The range of valid values is between 1 and 8. To stop 
1209:Generated_Source\PSoC5/USBFS_1.c ****     *  all DMAs associated with endpoints call this function with 
1210:Generated_Source\PSoC5/USBFS_1.c ****     *  USBFS_1_MAX_EP argument.
1211:Generated_Source\PSoC5/USBFS_1.c ****     *
1212:Generated_Source\PSoC5/USBFS_1.c ****     * \reentrant
1213:Generated_Source\PSoC5/USBFS_1.c ****     *  No.
1214:Generated_Source\PSoC5/USBFS_1.c ****     *
1215:Generated_Source\PSoC5/USBFS_1.c ****     ***************************************************************************/
1216:Generated_Source\PSoC5/USBFS_1.c ****     void USBFS_1_Stop_DMA(uint8 epNumber) 
1217:Generated_Source\PSoC5/USBFS_1.c ****     {
1218:Generated_Source\PSoC5/USBFS_1.c ****         uint8 i;
1219:Generated_Source\PSoC5/USBFS_1.c **** 
1220:Generated_Source\PSoC5/USBFS_1.c ****         i = (epNumber < USBFS_1_MAX_EP) ? epNumber : USBFS_1_EP1;
1221:Generated_Source\PSoC5/USBFS_1.c **** 
1222:Generated_Source\PSoC5/USBFS_1.c ****         do
1223:Generated_Source\PSoC5/USBFS_1.c ****         {
1224:Generated_Source\PSoC5/USBFS_1.c ****         #if (CY_PSOC4)
1225:Generated_Source\PSoC5/USBFS_1.c ****             if (0u != USBFS_1_DmaChan[i])
1226:Generated_Source\PSoC5/USBFS_1.c ****             {
1227:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChDisable(USBFS_1_DmaChan[i]);
1228:Generated_Source\PSoC5/USBFS_1.c ****             }
1229:Generated_Source\PSoC5/USBFS_1.c ****         #else
1230:Generated_Source\PSoC5/USBFS_1.c ****             if(USBFS_1_DmaTd[i] != DMA_INVALID_TD)
1231:Generated_Source\PSoC5/USBFS_1.c ****             {
1232:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaChDisable(USBFS_1_DmaChan[i]);
1233:Generated_Source\PSoC5/USBFS_1.c ****                 CyDmaTdFree(USBFS_1_DmaTd[i]);
1234:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_DmaTd[i] = DMA_INVALID_TD;
1235:Generated_Source\PSoC5/USBFS_1.c ****             }
1236:Generated_Source\PSoC5/USBFS_1.c **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 37


1237:Generated_Source\PSoC5/USBFS_1.c ****             #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u))
1238:Generated_Source\PSoC5/USBFS_1.c ****                 if(USBFS_1_DmaNextTd[i] != DMA_INVALID_TD)
1239:Generated_Source\PSoC5/USBFS_1.c ****                 {
1240:Generated_Source\PSoC5/USBFS_1.c ****                     CyDmaTdFree(USBFS_1_DmaNextTd[i]);
1241:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaNextTd[i] = DMA_INVALID_TD;
1242:Generated_Source\PSoC5/USBFS_1.c ****                 }
1243:Generated_Source\PSoC5/USBFS_1.c ****             #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u)) */
1244:Generated_Source\PSoC5/USBFS_1.c **** 
1245:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (CY_PSOC4) */
1246:Generated_Source\PSoC5/USBFS_1.c ****             i++;
1247:Generated_Source\PSoC5/USBFS_1.c ****         }
1248:Generated_Source\PSoC5/USBFS_1.c ****         while ((i < USBFS_1_MAX_EP) && (epNumber == USBFS_1_MAX_EP));
1249:Generated_Source\PSoC5/USBFS_1.c ****     }
1250:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA) */
1251:Generated_Source\PSoC5/USBFS_1.c **** 
1252:Generated_Source\PSoC5/USBFS_1.c **** 
1253:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC3 || CY_PSOC5)
1254:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u))
1255:Generated_Source\PSoC5/USBFS_1.c ****     /***************************************************************************
1256:Generated_Source\PSoC5/USBFS_1.c ****     * Function Name: USBFS_1_LoadNextInEP
1257:Generated_Source\PSoC5/USBFS_1.c ****     ************************************************************************//**
1258:Generated_Source\PSoC5/USBFS_1.c ****     *
1259:Generated_Source\PSoC5/USBFS_1.c ****     * Summary:
1260:Generated_Source\PSoC5/USBFS_1.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
1261:Generated_Source\PSoC5/USBFS_1.c ****     *  Auto DMA mode.
1262:Generated_Source\PSoC5/USBFS_1.c ****     *
1263:Generated_Source\PSoC5/USBFS_1.c ****     * Parameters:
1264:Generated_Source\PSoC5/USBFS_1.c ****     *  epNumber: Contains the data endpoint number.
1265:Generated_Source\PSoC5/USBFS_1.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
1266:Generated_Source\PSoC5/USBFS_1.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
1267:Generated_Source\PSoC5/USBFS_1.c ****     *
1268:Generated_Source\PSoC5/USBFS_1.c ****     ***************************************************************************/
1269:Generated_Source\PSoC5/USBFS_1.c ****     void USBFS_1_LoadNextInEP(uint8 epNumber, uint8 mode) 
1270:Generated_Source\PSoC5/USBFS_1.c ****     {
1271:Generated_Source\PSoC5/USBFS_1.c ****         reg16 *convert;
1272:Generated_Source\PSoC5/USBFS_1.c **** 
1273:Generated_Source\PSoC5/USBFS_1.c ****         if (mode == 0u)
1274:Generated_Source\PSoC5/USBFS_1.c ****         {
1275:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA to send rest of data. */
1276:Generated_Source\PSoC5/USBFS_1.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1277:Generated_Source\PSoC5/USBFS_1.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_1_DmaTd[epNumber]].TD0[0u];
1278:Generated_Source\PSoC5/USBFS_1.c ****             /* Set transfer length. */
1279:Generated_Source\PSoC5/USBFS_1.c ****             CY_SET_REG16(convert, USBFS_1_inLength[epNumber] - USBFS_1_DMA_BYTES_PER_BURST);
1280:Generated_Source\PSoC5/USBFS_1.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1281:Generated_Source\PSoC5/USBFS_1.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_1_DmaTd[epNumber]].TD1[0u];
1282:Generated_Source\PSoC5/USBFS_1.c ****             CY_SET_REG16(convert, LO16((uint32)USBFS_1_inDataPointer[epNumber] +
1283:Generated_Source\PSoC5/USBFS_1.c ****                                             USBFS_1_DMA_BYTES_PER_BURST));
1284:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_inBufFull[epNumber] = 1u;
1285:Generated_Source\PSoC5/USBFS_1.c ****         }
1286:Generated_Source\PSoC5/USBFS_1.c ****         else
1287:Generated_Source\PSoC5/USBFS_1.c ****         {
1288:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
1289:Generated_Source\PSoC5/USBFS_1.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1290:Generated_Source\PSoC5/USBFS_1.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_1_DmaTd[epNumber]].TD0[0u];
1291:Generated_Source\PSoC5/USBFS_1.c ****             /* Set transfer length. */
1292:Generated_Source\PSoC5/USBFS_1.c ****             CY_SET_REG16(convert, USBFS_1_DMA_BYTES_REPEAT);
1293:Generated_Source\PSoC5/USBFS_1.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 38


1294:Generated_Source\PSoC5/USBFS_1.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_1_DmaTd[epNumber]].TD1[0u];
1295:Generated_Source\PSoC5/USBFS_1.c ****             CY_SET_REG16(convert,  LO16((uint32)USBFS_1_inDataPointer[epNumber] +
1296:Generated_Source\PSoC5/USBFS_1.c ****                                    (USBFS_1_DMA_BYTES_PER_BURST - USBFS_1_DMA_BYTES_REPEAT)));
1297:Generated_Source\PSoC5/USBFS_1.c ****         }
1298:Generated_Source\PSoC5/USBFS_1.c **** 
1299:Generated_Source\PSoC5/USBFS_1.c ****         /* CyDmaChSetInitialTd API is optimized to initialize TD. */
1300:Generated_Source\PSoC5/USBFS_1.c ****         CY_DMA_CH_STRUCT_PTR[USBFS_1_DmaChan[epNumber]].basic_status[1u] = USBFS_1_DmaTd[epNumber];
1301:Generated_Source\PSoC5/USBFS_1.c ****     }
1302:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO && (USBFS_1_EP_DMA_AUTO_OPT == 0u)) */
1303:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC3 || CY_PSOC5) */
1304:Generated_Source\PSoC5/USBFS_1.c **** 
1305:Generated_Source\PSoC5/USBFS_1.c **** 
1306:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
1307:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_LoadInEP
1308:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
1309:Generated_Source\PSoC5/USBFS_1.c **** *
1310:Generated_Source\PSoC5/USBFS_1.c **** *  This function performs different functionality depending on the Component’s
1311:Generated_Source\PSoC5/USBFS_1.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1312:Generated_Source\PSoC5/USBFS_1.c **** *  the Descriptor Root in Component Configure window.
1313:Generated_Source\PSoC5/USBFS_1.c **** *
1314:Generated_Source\PSoC5/USBFS_1.c **** *  *Manual (Static/Dynamic Allocation):*
1315:Generated_Source\PSoC5/USBFS_1.c **** *  This function loads and enables the specified USB data endpoint for an IN
1316:Generated_Source\PSoC5/USBFS_1.c **** *  data transfer.
1317:Generated_Source\PSoC5/USBFS_1.c **** *
1318:Generated_Source\PSoC5/USBFS_1.c **** *  *DMA with Manual Buffer Management:*
1319:Generated_Source\PSoC5/USBFS_1.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1320:Generated_Source\PSoC5/USBFS_1.c **** *  Generates request for a transfer.
1321:Generated_Source\PSoC5/USBFS_1.c **** *
1322:Generated_Source\PSoC5/USBFS_1.c **** *  *DMA with Automatic Buffer Management:*
1323:Generated_Source\PSoC5/USBFS_1.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1324:Generated_Source\PSoC5/USBFS_1.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1325:Generated_Source\PSoC5/USBFS_1.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1326:Generated_Source\PSoC5/USBFS_1.c **** *  prepares data in endpoint buffer.
1327:Generated_Source\PSoC5/USBFS_1.c **** *
1328:Generated_Source\PSoC5/USBFS_1.c **** *  \param epNumber Contains the data endpoint number.
1329:Generated_Source\PSoC5/USBFS_1.c **** *            Valid values are between 1 and 8.
1330:Generated_Source\PSoC5/USBFS_1.c **** *  \param *pData A pointer to a data array from which the data for the endpoint space
1331:Generated_Source\PSoC5/USBFS_1.c **** *          is loaded.
1332:Generated_Source\PSoC5/USBFS_1.c **** *  \param length The number of bytes to transfer from the array and then send as
1333:Generated_Source\PSoC5/USBFS_1.c **** *          a result of an IN request. Valid values are between 0 and 512
1334:Generated_Source\PSoC5/USBFS_1.c **** *          (1023 for DMA with Automatic Buffer Management mode). The value 512
1335:Generated_Source\PSoC5/USBFS_1.c **** *          is applicable if only one endpoint is used.
1336:Generated_Source\PSoC5/USBFS_1.c **** *
1337:Generated_Source\PSoC5/USBFS_1.c **** *
1338:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
1339:Generated_Source\PSoC5/USBFS_1.c **** *  No.
1340:Generated_Source\PSoC5/USBFS_1.c **** *
1341:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
1342:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1343:Generated_Source\PSoC5/USBFS_1.c ****                                                                         
1344:Generated_Source\PSoC5/USBFS_1.c **** {
 806              		.loc 1 1344 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 0
 809              		@ frame_needed = 0, uses_anonymous_args = 0
 810              		@ link register save eliminated.
 811              	.LVL57:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 39


1345:Generated_Source\PSoC5/USBFS_1.c ****     if ((epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
 812              		.loc 1 1345 0
 813 0000 431E     		subs	r3, r0, #1
 814 0002 DBB2     		uxtb	r3, r3
 815 0004 072B     		cmp	r3, #7
 816 0006 3CD8     		bhi	.L62
1344:Generated_Source\PSoC5/USBFS_1.c ****     if ((epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
 817              		.loc 1 1344 0
 818 0008 F0B4     		push	{r4, r5, r6, r7}
 819              		.cfi_def_cfa_offset 16
 820              		.cfi_offset 4, -16
 821              		.cfi_offset 5, -12
 822              		.cfi_offset 6, -8
 823              		.cfi_offset 7, -4
1346:Generated_Source\PSoC5/USBFS_1.c ****     {
1347:Generated_Source\PSoC5/USBFS_1.c ****     #if (!USBFS_1_EP_MANAGEMENT_DMA_AUTO)
1348:Generated_Source\PSoC5/USBFS_1.c ****         /* Limit length to available buffer USB IP buffer size.*/
1349:Generated_Source\PSoC5/USBFS_1.c ****         if (length > (USBFS_1_EPX_DATA_BUF_MAX - USBFS_1_EP[epNumber].buffOffset))
 824              		.loc 1 1349 0
 825 000a 0746     		mov	r7, r0
 826 000c 00EB4004 		add	r4, r0, r0, lsl #1
 827 0010 A300     		lsls	r3, r4, #2
 828 0012 1C4C     		ldr	r4, .L63
 829 0014 2344     		add	r3, r3, r4
 830 0016 DB88     		ldrh	r3, [r3, #6]
 831 0018 9BB2     		uxth	r3, r3
 832 001a C3F50073 		rsb	r3, r3, #512
 833 001e 9A42     		cmp	r2, r3
 834 0020 08D9     		bls	.L55
1350:Generated_Source\PSoC5/USBFS_1.c ****         {
1351:Generated_Source\PSoC5/USBFS_1.c ****             length = USBFS_1_EPX_DATA_BUF_MAX - USBFS_1_EP[epNumber].buffOffset;
 835              		.loc 1 1351 0
 836 0022 00EB4002 		add	r2, r0, r0, lsl #1
 837              	.LVL58:
 838 0026 9300     		lsls	r3, r2, #2
 839 0028 2344     		add	r3, r3, r4
 840 002a DA88     		ldrh	r2, [r3, #6]
 841 002c 92B2     		uxth	r2, r2
 842 002e C2F50072 		rsb	r2, r2, #512
 843 0032 92B2     		uxth	r2, r2
 844              	.LVL59:
 845              	.L55:
1352:Generated_Source\PSoC5/USBFS_1.c ****         }
1353:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (!USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
1354:Generated_Source\PSoC5/USBFS_1.c **** 
1355:Generated_Source\PSoC5/USBFS_1.c ****         /* Set count and data toggle. */
1356:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint8) HI8(length) | USBFS_1_EP[epNumber].epT
 846              		.loc 1 1356 0
 847 0034 00EB4004 		add	r4, r0, r0, lsl #1
 848 0038 A300     		lsls	r3, r4, #2
 849 003a 124C     		ldr	r4, .L63
 850 003c 2344     		add	r3, r3, r4
 851 003e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 852 0040 43EA1223 		orr	r3, r3, r2, lsr #8
 853 0044 104D     		ldr	r5, .L63+4
 854 0046 0401     		lsls	r4, r0, #4
 855 0048 2E19     		adds	r6, r5, r4
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 40


 856 004a 2B55     		strb	r3, [r5, r4]
1357:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint8) LO8(length);
 857              		.loc 1 1357 0
 858 004c D3B2     		uxtb	r3, r2
 859 004e 7370     		strb	r3, [r6, #1]
1358:Generated_Source\PSoC5/USBFS_1.c **** 
1359:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_MANAGEMENT_MANUAL)
1360:Generated_Source\PSoC5/USBFS_1.c ****         if (NULL != pData)
 860              		.loc 1 1360 0
 861 0050 39B9     		cbnz	r1, .L59
 862              	.LBB2:
 863 0052 09E0     		b	.L57
 864              	.LVL60:
 865              	.L58:
1361:Generated_Source\PSoC5/USBFS_1.c ****         {
1362:Generated_Source\PSoC5/USBFS_1.c **** 			/* Copy data using arbiter data register. */
1363:Generated_Source\PSoC5/USBFS_1.c ****             uint16 i;
1364:Generated_Source\PSoC5/USBFS_1.c ****             for (i = 0u; i < length; ++i)
1365:Generated_Source\PSoC5/USBFS_1.c ****             {
1366:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_ARB_EP_BASE.arbEp[epNumber].rwDr = pData[i];
 866              		.loc 1 1366 0 discriminator 3
 867 0054 CE5C     		ldrb	r6, [r1, r3]	@ zero_extendqisi2
 868 0056 3D01     		lsls	r5, r7, #4
 869 0058 0C4C     		ldr	r4, .L63+8
 870 005a 6655     		strb	r6, [r4, r5]
1364:Generated_Source\PSoC5/USBFS_1.c ****             {
 871              		.loc 1 1364 0 discriminator 3
 872 005c 0133     		adds	r3, r3, #1
 873              	.LVL61:
 874 005e 9BB2     		uxth	r3, r3
 875              	.LVL62:
 876 0060 00E0     		b	.L56
 877              	.LVL63:
 878              	.L59:
 879              	.LBE2:
 880 0062 0023     		movs	r3, #0
 881              	.L56:
 882              	.LVL64:
 883              	.LBB3:
1364:Generated_Source\PSoC5/USBFS_1.c ****             {
 884              		.loc 1 1364 0 is_stmt 0 discriminator 1
 885 0064 9A42     		cmp	r2, r3
 886 0066 F5D8     		bhi	.L58
 887              	.LVL65:
 888              	.L57:
 889              	.LBE3:
1367:Generated_Source\PSoC5/USBFS_1.c ****             }
1368:Generated_Source\PSoC5/USBFS_1.c ****         }
1369:Generated_Source\PSoC5/USBFS_1.c **** 
1370:Generated_Source\PSoC5/USBFS_1.c ****         /* IN endpoint buffer is full - read to be read. */
1371:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_EP[epNumber].apiEpState = USBFS_1_NO_EVENT_PENDING;
 890              		.loc 1 1371 0 is_stmt 1
 891 0068 4200     		lsls	r2, r0, #1
 892              	.LVL66:
 893 006a 0244     		add	r2, r2, r0
 894 006c 9300     		lsls	r3, r2, #2
 895 006e 054A     		ldr	r2, .L63
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 41


 896 0070 1344     		add	r3, r3, r2
 897 0072 0022     		movs	r2, #0
 898 0074 5A70     		strb	r2, [r3, #1]
1372:Generated_Source\PSoC5/USBFS_1.c **** 
1373:Generated_Source\PSoC5/USBFS_1.c ****         /* Arm IN endpoint. */
1374:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_1_EP[epNumber].epMode;
 899              		.loc 1 1374 0
 900 0076 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 901 0078 D2B2     		uxtb	r2, r2
 902 007a 0001     		lsls	r0, r0, #4
 903              	.LVL67:
 904 007c 044B     		ldr	r3, .L63+12
 905 007e 1A54     		strb	r2, [r3, r0]
1375:Generated_Source\PSoC5/USBFS_1.c **** 
1376:Generated_Source\PSoC5/USBFS_1.c ****     #else
1377:Generated_Source\PSoC5/USBFS_1.c **** 
1378:Generated_Source\PSoC5/USBFS_1.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1379:Generated_Source\PSoC5/USBFS_1.c ****             /* Initialize DMA if it was not initialized. */
1380:Generated_Source\PSoC5/USBFS_1.c ****             if (DMA_INVALID_TD == USBFS_1_DmaTd[epNumber])
1381:Generated_Source\PSoC5/USBFS_1.c ****             {
1382:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_InitEP_DMA(epNumber, pData);
1383:Generated_Source\PSoC5/USBFS_1.c ****             }
1384:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1385:Generated_Source\PSoC5/USBFS_1.c **** 
1386:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_MANUAL)
1387:Generated_Source\PSoC5/USBFS_1.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1388:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_EP[epNumber].apiEpState = USBFS_1_NO_EVENT_PENDING;
1389:Generated_Source\PSoC5/USBFS_1.c **** 
1390:Generated_Source\PSoC5/USBFS_1.c ****             if ((pData != NULL) && (length > 0u))
1391:Generated_Source\PSoC5/USBFS_1.c ****             {
1392:Generated_Source\PSoC5/USBFS_1.c ****             #if (CY_PSOC4)
1393:Generated_Source\PSoC5/USBFS_1.c ****                 uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
1394:Generated_Source\PSoC5/USBFS_1.c **** 
1395:Generated_Source\PSoC5/USBFS_1.c ****                 /* Disable DMA channel: start configuration. */
1396:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChDisable(channelNum);
1397:Generated_Source\PSoC5/USBFS_1.c **** 
1398:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure source and destination. */
1399:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) pData);
1400:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) &USBFS_1_ARB_EP_
1401:Generated_Source\PSoC5/USBFS_1.c **** 
1402:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure DMA descriptor. */
1403:Generated_Source\PSoC5/USBFS_1.c ****                 --length;
1404:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR0, USBFS_1_DMA_COMMON_CF
1405:Generated_Source\PSoC5/USBFS_1.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1406:Generated_Source\PSoC5/USBFS_1.c **** 
1407:Generated_Source\PSoC5/USBFS_1.c ****                 /* Validate descriptor to execute on following DMA request. */
1408:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR0);
1409:Generated_Source\PSoC5/USBFS_1.c **** 
1410:Generated_Source\PSoC5/USBFS_1.c ****                 /* Enable DMA channel: configuration complete. */
1411:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChEnable(channelNum);
1412:Generated_Source\PSoC5/USBFS_1.c ****             #else
1413:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure DMA to transfer data. */
1414:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaChDisable(USBFS_1_DmaChan[epNumber]);
1415:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaTdSetConfiguration(USBFS_1_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, 
1416:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaTdSetAddress(USBFS_1_DmaTd[epNumber], LO16((uint32) pData), LO16((uint3
1417:Generated_Source\PSoC5/USBFS_1.c **** 
1418:Generated_Source\PSoC5/USBFS_1.c ****                 /* Enable DMA channel. */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 42


1419:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaChSetInitialTd(USBFS_1_DmaChan[epNumber], USBFS_1_DmaTd[epNumber]);
1420:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaChEnable(USBFS_1_DmaChan[epNumber], 1u);
1421:Generated_Source\PSoC5/USBFS_1.c ****             #endif /* (CY_PSOC4) */
1422:Generated_Source\PSoC5/USBFS_1.c **** 
1423:Generated_Source\PSoC5/USBFS_1.c ****                 /* Generate DMA request. */
1424:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBFS_1_ARB_EPX_CFG_DMA_REQ;
1425:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBFS_1_ARB_EPX_CFG_DMA_REQ;
1426:Generated_Source\PSoC5/USBFS_1.c **** 
1427:Generated_Source\PSoC5/USBFS_1.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1428:Generated_Source\PSoC5/USBFS_1.c ****             }
1429:Generated_Source\PSoC5/USBFS_1.c ****             else
1430:Generated_Source\PSoC5/USBFS_1.c ****             {
1431:Generated_Source\PSoC5/USBFS_1.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1432:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_1_EP[epNumber].epMode;
1433:Generated_Source\PSoC5/USBFS_1.c ****             }
1434:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_MANUAL) */
1435:Generated_Source\PSoC5/USBFS_1.c **** 
1436:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO)
1437:Generated_Source\PSoC5/USBFS_1.c ****             if (pData != NULL)
1438:Generated_Source\PSoC5/USBFS_1.c ****             {
1439:Generated_Source\PSoC5/USBFS_1.c ****             #if (CY_PSOC4)
1440:Generated_Source\PSoC5/USBFS_1.c ****                 uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
1441:Generated_Source\PSoC5/USBFS_1.c **** 
1442:Generated_Source\PSoC5/USBFS_1.c ****                 /* Store address of buffer. */
1443:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1444:Generated_Source\PSoC5/USBFS_1.c **** 
1445:Generated_Source\PSoC5/USBFS_1.c ****                 /* Disable DMA channel: start configuration. */
1446:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChDisable(channelNum);
1447:Generated_Source\PSoC5/USBFS_1.c **** 
1448:Generated_Source\PSoC5/USBFS_1.c ****                 /* Set destination address. */
1449:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) &USBFS_1_ARB_EP_
1450:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR1, (void*) &USBFS_1_ARB_EP_
1451:Generated_Source\PSoC5/USBFS_1.c **** 
1452:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure DMA descriptor. */
1453:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR0, USBFS_1_DMA_COMMON_CF
1454:Generated_Source\PSoC5/USBFS_1.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1455:Generated_Source\PSoC5/USBFS_1.c **** 
1456:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure DMA descriptor. */
1457:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR1, USBFS_1_DMA_COMMON_CF
1458:Generated_Source\PSoC5/USBFS_1.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1459:Generated_Source\PSoC5/USBFS_1.c **** 
1460:Generated_Source\PSoC5/USBFS_1.c ****                 /* Enable interrupt from DMA channel. */
1461:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetInterruptMask(channelNum);
1462:Generated_Source\PSoC5/USBFS_1.c **** 
1463:Generated_Source\PSoC5/USBFS_1.c **** 
1464:Generated_Source\PSoC5/USBFS_1.c ****                 /* Enable DMA channel: configuration complete. */
1465:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChEnable(channelNum);
1466:Generated_Source\PSoC5/USBFS_1.c **** 
1467:Generated_Source\PSoC5/USBFS_1.c ****             #else
1468:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaChDisable(USBFS_1_DmaChan[epNumber]);
1469:Generated_Source\PSoC5/USBFS_1.c **** 
1470:Generated_Source\PSoC5/USBFS_1.c ****                 #if (USBFS_1_EP_DMA_AUTO_OPT == 0u)
1471:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_inLength[epNumber] = length;
1472:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_inDataPointer[epNumber] = pData;
1473:Generated_Source\PSoC5/USBFS_1.c **** 
1474:Generated_Source\PSoC5/USBFS_1.c ****                     /* Configure DMA to send data only for first burst */
1475:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaTdSetConfiguration(USBFS_1_DmaTd[epNumber],
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 43


1476:Generated_Source\PSoC5/USBFS_1.c ****                         (length > USBFS_1_DMA_BYTES_PER_BURST) ? USBFS_1_DMA_BYTES_PER_BURST : leng
1477:Generated_Source\PSoC5/USBFS_1.c ****                         USBFS_1_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1478:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaTdSetAddress(USBFS_1_DmaTd[epNumber], LO16((uint32) pData),
1479:Generated_Source\PSoC5/USBFS_1.c ****                                                                                LO16((uint32) &USBFS
1480:Generated_Source\PSoC5/USBFS_1.c **** 
1481:Generated_Source\PSoC5/USBFS_1.c ****                     /* The second TD will be executed only when the first one fails.
1482:Generated_Source\PSoC5/USBFS_1.c ****                     *  The intention of this TD is to generate NRQ interrupt
1483:Generated_Source\PSoC5/USBFS_1.c ****                     *  and repeat 2 last bytes of the first burst.
1484:Generated_Source\PSoC5/USBFS_1.c ****                     */
1485:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaTdSetConfiguration(USBFS_1_DmaNextTd[epNumber], 1u,
1486:Generated_Source\PSoC5/USBFS_1.c ****                                                    USBFS_1_DmaNextTd[epNumber],
1487:Generated_Source\PSoC5/USBFS_1.c ****                                                    USBFS_1_epX_TD_TERMOUT_EN[epNumber]);
1488:Generated_Source\PSoC5/USBFS_1.c **** 
1489:Generated_Source\PSoC5/USBFS_1.c ****                     /* Configure DmaNextTd to clear Data Ready status. */
1490:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaTdSetAddress(USBFS_1_DmaNextTd[epNumber], LO16((uint32) &clearInDat
1491:Generated_Source\PSoC5/USBFS_1.c ****                                                                                    LO16((uint32) &U
1492:Generated_Source\PSoC5/USBFS_1.c ****                 #else
1493:Generated_Source\PSoC5/USBFS_1.c ****                     /* Configure DMA to send all data. */
1494:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaTdSetConfiguration(USBFS_1_DmaTd[epNumber], length,
1495:Generated_Source\PSoC5/USBFS_1.c ****                                                    USBFS_1_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_S
1496:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaTdSetAddress(USBFS_1_DmaTd[epNumber], LO16((uint32) pData),
1497:Generated_Source\PSoC5/USBFS_1.c ****                                                                                LO16((uint32) &USBFS
1498:Generated_Source\PSoC5/USBFS_1.c ****                 #endif /* (USBFS_1_EP_DMA_AUTO_OPT == 0u) */
1499:Generated_Source\PSoC5/USBFS_1.c **** 
1500:Generated_Source\PSoC5/USBFS_1.c ****                 /* Clear any potential pending DMA requests before starting DMA channel to transfer
1501:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaClearPendingDrq(USBFS_1_DmaChan[epNumber]);
1502:Generated_Source\PSoC5/USBFS_1.c ****                 /* Enable DMA. */
1503:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaChSetInitialTd(USBFS_1_DmaChan[epNumber], USBFS_1_DmaTd[epNumber]);
1504:Generated_Source\PSoC5/USBFS_1.c ****                 (void) CyDmaChEnable(USBFS_1_DmaChan[epNumber], 1u);
1505:Generated_Source\PSoC5/USBFS_1.c ****             #endif /* (CY_PSOC4) */
1506:Generated_Source\PSoC5/USBFS_1.c ****             }
1507:Generated_Source\PSoC5/USBFS_1.c ****             else
1508:Generated_Source\PSoC5/USBFS_1.c ****             {
1509:Generated_Source\PSoC5/USBFS_1.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1510:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_EP[epNumber].apiEpState = USBFS_1_NO_EVENT_PENDING;
1511:Generated_Source\PSoC5/USBFS_1.c **** 
1512:Generated_Source\PSoC5/USBFS_1.c ****                 if (length > 0u)
1513:Generated_Source\PSoC5/USBFS_1.c ****                 {
1514:Generated_Source\PSoC5/USBFS_1.c ****                 #if (CY_PSOC4)
1515:Generated_Source\PSoC5/USBFS_1.c ****                     uint32 lengthDescr0, lengthDescr1;
1516:Generated_Source\PSoC5/USBFS_1.c ****                     uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
1517:Generated_Source\PSoC5/USBFS_1.c **** 
1518:Generated_Source\PSoC5/USBFS_1.c ****                     /* Get number of full bursts. */
1519:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpBurstCnt[epNumber] = (uint8) (length / USBFS_1_DMA_BYTES_PER_BURST
1520:Generated_Source\PSoC5/USBFS_1.c **** 
1521:Generated_Source\PSoC5/USBFS_1.c ****                     /* Get number of elements in the last burst. */
1522:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBFS_1_DMA_BYTES_PER_BU
1523:Generated_Source\PSoC5/USBFS_1.c **** 
1524:Generated_Source\PSoC5/USBFS_1.c ****                     /* Get total number of bursts. */
1525:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpBurstCnt[epNumber] += (0u != USBFS_1_DmaEpLastBurstEl[epNumber]) ?
1526:Generated_Source\PSoC5/USBFS_1.c **** 
1527:Generated_Source\PSoC5/USBFS_1.c ****                     /* Adjust number of data elements transferred in last burst. */
1528:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpLastBurstEl[epNumber] = (0u != USBFS_1_DmaEpLastBurstEl[epNumber])
1529:Generated_Source\PSoC5/USBFS_1.c ****                                                                           (USBFS_1_DmaEpLastBurstEl
1530:Generated_Source\PSoC5/USBFS_1.c ****                                                                           (USBFS_1_DMA_BYTES_PER_BU
1531:Generated_Source\PSoC5/USBFS_1.c **** 
1532:Generated_Source\PSoC5/USBFS_1.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 44


1533:Generated_Source\PSoC5/USBFS_1.c ****                     lengthDescr0 = (1u == USBFS_1_DmaEpBurstCnt[epNumber]) ? USBFS_1_DmaEpLastBurst
1534:Generated_Source\PSoC5/USBFS_1.c ****                     lengthDescr1 = (2u == USBFS_1_DmaEpBurstCnt[epNumber]) ? USBFS_1_DmaEpLastBurst
1535:Generated_Source\PSoC5/USBFS_1.c **** 
1536:Generated_Source\PSoC5/USBFS_1.c **** 
1537:Generated_Source\PSoC5/USBFS_1.c ****                     /* Mark which descriptor is last one to execute. */
1538:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_1_DmaEpBurstCnt[epNumber] &
1539:Generated_Source\PSoC5/USBFS_1.c ****                                                                             USBFS_1_DMA_DESCR0_MASK
1540:Generated_Source\PSoC5/USBFS_1.c **** 
1541:Generated_Source\PSoC5/USBFS_1.c ****                     /* Restore DMA settings for current transfer. */
1542:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaChDisable(channelNum);
1543:Generated_Source\PSoC5/USBFS_1.c **** 
1544:Generated_Source\PSoC5/USBFS_1.c ****                     /* Restore destination address for input endpoint. */
1545:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) ((uint32) US
1546:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR1, (void*) ((uint32) US
1547:Generated_Source\PSoC5/USBFS_1.c ****                                                                                                    
1548:Generated_Source\PSoC5/USBFS_1.c **** 
1549:Generated_Source\PSoC5/USBFS_1.c ****                     /* Set number of elements to transfer. */
1550:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetNumDataElements(channelNum, USBFS_1_DMA_DESCR0, lengthDescr0);
1551:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetNumDataElements(channelNum, USBFS_1_DMA_DESCR1, lengthDescr1);
1552:Generated_Source\PSoC5/USBFS_1.c **** 
1553:Generated_Source\PSoC5/USBFS_1.c ****                     /* Validate descriptor 0 and command to start with it. */
1554:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR0);
1555:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetDescriptor0Next(channelNum);
1556:Generated_Source\PSoC5/USBFS_1.c **** 
1557:Generated_Source\PSoC5/USBFS_1.c ****                     /* Validate descriptor 1. */
1558:Generated_Source\PSoC5/USBFS_1.c ****                     if (USBFS_1_DmaEpBurstCnt[epNumber] > 1u)
1559:Generated_Source\PSoC5/USBFS_1.c ****                     {
1560:Generated_Source\PSoC5/USBFS_1.c ****                         USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR1); 
1561:Generated_Source\PSoC5/USBFS_1.c ****                     }                   
1562:Generated_Source\PSoC5/USBFS_1.c **** 
1563:Generated_Source\PSoC5/USBFS_1.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
1564:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpBurstCnt[epNumber] = USBFS_1_DMA_GET_BURST_CNT(USBFS_1_DmaEpBurstC
1565:Generated_Source\PSoC5/USBFS_1.c **** 
1566:Generated_Source\PSoC5/USBFS_1.c ****                     /* Enable DMA channel: configuration complete. */
1567:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaChEnable(channelNum);
1568:Generated_Source\PSoC5/USBFS_1.c **** 
1569:Generated_Source\PSoC5/USBFS_1.c ****                 #elif (USBFS_1_EP_DMA_AUTO_OPT == 0u)
1570:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_inLength[epNumber]  = length;
1571:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_inBufFull[epNumber] = 0u;
1572:Generated_Source\PSoC5/USBFS_1.c **** 
1573:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaChDisable(USBFS_1_DmaChan[epNumber]);
1574:Generated_Source\PSoC5/USBFS_1.c ****                     /* Configure DMA to send data only for first burst. */
1575:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaTdSetConfiguration(
1576:Generated_Source\PSoC5/USBFS_1.c ****                         USBFS_1_DmaTd[epNumber], (length > USBFS_1_DMA_BYTES_PER_BURST) ?
1577:Generated_Source\PSoC5/USBFS_1.c ****                         USBFS_1_DMA_BYTES_PER_BURST : length,
1578:Generated_Source\PSoC5/USBFS_1.c ****                         USBFS_1_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1579:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaTdSetAddress(USBFS_1_DmaTd[epNumber], LO16((uint32)  USBFS_1_inData
1580:Generated_Source\PSoC5/USBFS_1.c ****                                                                                LO16((uint32) &USBFS
1581:Generated_Source\PSoC5/USBFS_1.c ****                     /* Clear Any potential pending DMA requests before starting DMA channel to tran
1582:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaClearPendingDrq(USBFS_1_DmaChan[epNumber]);
1583:Generated_Source\PSoC5/USBFS_1.c ****                     /* Enable DMA. */
1584:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaChSetInitialTd(USBFS_1_DmaChan[epNumber], USBFS_1_DmaTd[epNumber]);
1585:Generated_Source\PSoC5/USBFS_1.c ****                     (void) CyDmaChEnable(USBFS_1_DmaChan[epNumber], 1u);
1586:Generated_Source\PSoC5/USBFS_1.c ****                 #endif /* (CY_PSOC4) */
1587:Generated_Source\PSoC5/USBFS_1.c **** 
1588:Generated_Source\PSoC5/USBFS_1.c ****                 #if !defined (USBFS_1_MANUAL_IN_EP_ARM)
1589:Generated_Source\PSoC5/USBFS_1.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 45


1590:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBFS_1_ARB_EPX_CFG_IN_DATA_RDY;
1591:Generated_Source\PSoC5/USBFS_1.c ****                 #endif  /* (USBFS_1_MANUAL_IN_EP_ARM) */
1592:Generated_Source\PSoC5/USBFS_1.c **** 
1593:Generated_Source\PSoC5/USBFS_1.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
1594:Generated_Source\PSoC5/USBFS_1.c ****                 }
1595:Generated_Source\PSoC5/USBFS_1.c ****                 else
1596:Generated_Source\PSoC5/USBFS_1.c ****                 {
1597:Generated_Source\PSoC5/USBFS_1.c ****                     /* When zero-length packet: arm IN endpoint directly. */
1598:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_1_EP[epNumber].epMode;
1599:Generated_Source\PSoC5/USBFS_1.c ****                 }
1600:Generated_Source\PSoC5/USBFS_1.c ****             }
1601:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
1602:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_MANUAL) */
1603:Generated_Source\PSoC5/USBFS_1.c ****     }
1604:Generated_Source\PSoC5/USBFS_1.c **** }
 906              		.loc 1 1604 0
 907 0080 F0BC     		pop	{r4, r5, r6, r7}
 908              		.cfi_restore 7
 909              		.cfi_restore 6
 910              		.cfi_restore 5
 911              		.cfi_restore 4
 912              		.cfi_def_cfa_offset 0
 913              	.L62:
 914 0082 7047     		bx	lr
 915              	.L64:
 916              		.align	2
 917              	.L63:
 918 0084 00000000 		.word	USBFS_1_EP
 919 0088 FC5F0040 		.word	1073766396
 920 008c 78600040 		.word	1073766520
 921 0090 FE5F0040 		.word	1073766398
 922              		.cfi_endproc
 923              	.LFE11:
 924              		.size	USBFS_1_LoadInEP, .-USBFS_1_LoadInEP
 925              		.section	.text.USBFS_1_EnableOutEP,"ax",%progbits
 926              		.align	2
 927              		.global	USBFS_1_EnableOutEP
 928              		.thumb
 929              		.thumb_func
 930              		.type	USBFS_1_EnableOutEP, %function
 931              	USBFS_1_EnableOutEP:
 932              	.LFB13:
1605:Generated_Source\PSoC5/USBFS_1.c **** 
1606:Generated_Source\PSoC5/USBFS_1.c **** 
1607:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
1608:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_ReadOutEP
1609:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
1610:Generated_Source\PSoC5/USBFS_1.c **** *
1611:Generated_Source\PSoC5/USBFS_1.c **** *   This function performs different functionality depending on the Component’s
1612:Generated_Source\PSoC5/USBFS_1.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
1613:Generated_Source\PSoC5/USBFS_1.c **** *   Descriptor Root in Component Configure window.
1614:Generated_Source\PSoC5/USBFS_1.c **** *
1615:Generated_Source\PSoC5/USBFS_1.c **** *   *Manual (Static/Dynamic Allocation):*
1616:Generated_Source\PSoC5/USBFS_1.c **** *   This function moves the specified number of bytes from endpoint buffer to
1617:Generated_Source\PSoC5/USBFS_1.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
1618:Generated_Source\PSoC5/USBFS_1.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
1619:Generated_Source\PSoC5/USBFS_1.c **** *   the number of bytes requested by the length parameter.
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 46


1620:Generated_Source\PSoC5/USBFS_1.c **** *
1621:Generated_Source\PSoC5/USBFS_1.c **** *   *DMA with Manual Buffer Management:*
1622:Generated_Source\PSoC5/USBFS_1.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
1623:Generated_Source\PSoC5/USBFS_1.c **** *   a DMA request. The firmware must wait until the DMA completes the data
1624:Generated_Source\PSoC5/USBFS_1.c **** *   transfer after calling the USBFS_1_ReadOutEP() API. For example,
1625:Generated_Source\PSoC5/USBFS_1.c **** *   by checking EPstate:
1626:Generated_Source\PSoC5/USBFS_1.c **** *
1627:Generated_Source\PSoC5/USBFS_1.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
1628:Generated_Source\PSoC5/USBFS_1.c **** *
1629:Generated_Source\PSoC5/USBFS_1.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
1630:Generated_Source\PSoC5/USBFS_1.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
1631:Generated_Source\PSoC5/USBFS_1.c **** *   buffer to SRAM.
1632:Generated_Source\PSoC5/USBFS_1.c **** *
1633:Generated_Source\PSoC5/USBFS_1.c **** *   *DMA with Automatic Buffer Management:*
1634:Generated_Source\PSoC5/USBFS_1.c **** *   Configure DMA. This is required only once and automatically generates DMA
1635:Generated_Source\PSoC5/USBFS_1.c **** *   requests as data arrives
1636:Generated_Source\PSoC5/USBFS_1.c **** *
1637:Generated_Source\PSoC5/USBFS_1.c **** *  \param epNumber: Contains the data endpoint number.
1638:Generated_Source\PSoC5/USBFS_1.c **** *            Valid values are between 1 and 8.
1639:Generated_Source\PSoC5/USBFS_1.c **** *  \param pData: A pointer to a data array from which the data for the endpoint
1640:Generated_Source\PSoC5/USBFS_1.c **** *         space is loaded.
1641:Generated_Source\PSoC5/USBFS_1.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
1642:Generated_Source\PSoC5/USBFS_1.c **** *          loads it into data array. Valid values are between 0 and 1023. The
1643:Generated_Source\PSoC5/USBFS_1.c **** *          function moves fewer than the requested number of bytes if the host
1644:Generated_Source\PSoC5/USBFS_1.c **** *          sends fewer bytes than requested.
1645:Generated_Source\PSoC5/USBFS_1.c **** *
1646:Generated_Source\PSoC5/USBFS_1.c **** * \return
1647:Generated_Source\PSoC5/USBFS_1.c **** *  Number of bytes received, 0 for an invalid endpoint.
1648:Generated_Source\PSoC5/USBFS_1.c **** *
1649:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
1650:Generated_Source\PSoC5/USBFS_1.c **** *  No.
1651:Generated_Source\PSoC5/USBFS_1.c **** *
1652:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
1653:Generated_Source\PSoC5/USBFS_1.c **** uint16 USBFS_1_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1654:Generated_Source\PSoC5/USBFS_1.c ****                                                                         
1655:Generated_Source\PSoC5/USBFS_1.c **** {
1656:Generated_Source\PSoC5/USBFS_1.c ****     if ((pData != NULL) && (epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
1657:Generated_Source\PSoC5/USBFS_1.c ****     {
1658:Generated_Source\PSoC5/USBFS_1.c ****     #if (!USBFS_1_EP_MANAGEMENT_DMA_AUTO)
1659:Generated_Source\PSoC5/USBFS_1.c ****         /* Adjust requested length to available data. */
1660:Generated_Source\PSoC5/USBFS_1.c ****         length = (length > USBFS_1_GetEPCount(epNumber)) ? USBFS_1_GetEPCount(epNumber) : length;
1661:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (!USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
1662:Generated_Source\PSoC5/USBFS_1.c **** 
1663:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_MANAGEMENT_MANUAL)
1664:Generated_Source\PSoC5/USBFS_1.c ****         {
1665:Generated_Source\PSoC5/USBFS_1.c ****             /* Copy data using arbiter data register. */
1666:Generated_Source\PSoC5/USBFS_1.c ****             uint16 i;
1667:Generated_Source\PSoC5/USBFS_1.c ****             for (i = 0u; i < length; ++i)
1668:Generated_Source\PSoC5/USBFS_1.c ****             {
1669:Generated_Source\PSoC5/USBFS_1.c ****                 pData[i] = (uint8) USBFS_1_ARB_EP_BASE.arbEp[epNumber].rwDr;
1670:Generated_Source\PSoC5/USBFS_1.c ****             }
1671:Generated_Source\PSoC5/USBFS_1.c ****         }
1672:Generated_Source\PSoC5/USBFS_1.c **** 
1673:Generated_Source\PSoC5/USBFS_1.c ****         /* Arm OUT endpoint after data has been copied from endpoint buffer. */
1674:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_EnableOutEP(epNumber);
1675:Generated_Source\PSoC5/USBFS_1.c ****     #else
1676:Generated_Source\PSoC5/USBFS_1.c **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 47


1677:Generated_Source\PSoC5/USBFS_1.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1678:Generated_Source\PSoC5/USBFS_1.c ****             /* Initialize DMA if it was not initialized. */
1679:Generated_Source\PSoC5/USBFS_1.c ****             if (DMA_INVALID_TD == USBFS_1_DmaTd[epNumber])
1680:Generated_Source\PSoC5/USBFS_1.c ****             {
1681:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_InitEP_DMA(epNumber, pData);
1682:Generated_Source\PSoC5/USBFS_1.c ****             }
1683:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1684:Generated_Source\PSoC5/USBFS_1.c **** 
1685:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_MANUAL)
1686:Generated_Source\PSoC5/USBFS_1.c ****         #if (CY_PSOC4)
1687:Generated_Source\PSoC5/USBFS_1.c ****         {
1688:Generated_Source\PSoC5/USBFS_1.c ****             uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
1689:Generated_Source\PSoC5/USBFS_1.c **** 
1690:Generated_Source\PSoC5/USBFS_1.c ****             /* Disable DMA channel: start configuration. */
1691:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaChDisable(channelNum);
1692:Generated_Source\PSoC5/USBFS_1.c **** 
1693:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure source and destination. */
1694:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) &USBFS_1_ARB_EP_BASE
1695:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) pData);
1696:Generated_Source\PSoC5/USBFS_1.c **** 
1697:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA descriptor. */
1698:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR0, USBFS_1_DMA_COMMON_CFG | 
1699:Generated_Source\PSoC5/USBFS_1.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1700:Generated_Source\PSoC5/USBFS_1.c **** 
1701:Generated_Source\PSoC5/USBFS_1.c ****             /* Validate descriptor to execute on following DMA request. */
1702:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR0);
1703:Generated_Source\PSoC5/USBFS_1.c **** 
1704:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable DMA channel: configuration complete. */
1705:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaChEnable(channelNum);
1706:Generated_Source\PSoC5/USBFS_1.c ****         }
1707:Generated_Source\PSoC5/USBFS_1.c ****         #else
1708:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA to transfer data. */
1709:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaChDisable(USBFS_1_DmaChan[epNumber]);
1710:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaTdSetConfiguration(USBFS_1_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD_T
1711:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaTdSetAddress(USBFS_1_DmaTd[epNumber], LO16((uint32) &USBFS_1_ARB_EP_BASE.ar
1712:Generated_Source\PSoC5/USBFS_1.c **** 
1713:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable DMA channel. */
1714:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaChSetInitialTd(USBFS_1_DmaChan[epNumber], USBFS_1_DmaTd[epNumber]);
1715:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaChEnable(USBFS_1_DmaChan[epNumber], 1u);
1716:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (CY_PSOC4) */
1717:Generated_Source\PSoC5/USBFS_1.c **** 
1718:Generated_Source\PSoC5/USBFS_1.c ****             /* Generate DMA request. */
1719:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBFS_1_ARB_EPX_CFG_DMA_REQ;
1720:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBFS_1_ARB_EPX_CFG_DMA_REQ;
1721:Generated_Source\PSoC5/USBFS_1.c **** 
1722:Generated_Source\PSoC5/USBFS_1.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1723:Generated_Source\PSoC5/USBFS_1.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1724:Generated_Source\PSoC5/USBFS_1.c ****             */
1725:Generated_Source\PSoC5/USBFS_1.c **** 
1726:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_MANUAL) */
1727:Generated_Source\PSoC5/USBFS_1.c **** 
1728:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO)
1729:Generated_Source\PSoC5/USBFS_1.c ****         #if (CY_PSOC4)
1730:Generated_Source\PSoC5/USBFS_1.c ****         {
1731:Generated_Source\PSoC5/USBFS_1.c ****             uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
1732:Generated_Source\PSoC5/USBFS_1.c ****             uint32 lengthDescr0, lengthDescr1;
1733:Generated_Source\PSoC5/USBFS_1.c **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 48


1734:Generated_Source\PSoC5/USBFS_1.c ****             /* Get number of full bursts. */
1735:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBurstCnt[epNumber] = (uint8) (length / USBFS_1_DMA_BYTES_PER_BURST);
1736:Generated_Source\PSoC5/USBFS_1.c **** 
1737:Generated_Source\PSoC5/USBFS_1.c ****             /* Get number of elements in the last burst. */
1738:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBFS_1_DMA_BYTES_PER_BURST);
1739:Generated_Source\PSoC5/USBFS_1.c **** 
1740:Generated_Source\PSoC5/USBFS_1.c ****             /* Get total number of bursts. */
1741:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBurstCnt[epNumber] += (0u != USBFS_1_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
1742:Generated_Source\PSoC5/USBFS_1.c **** 
1743:Generated_Source\PSoC5/USBFS_1.c ****             /* Adjust number of the data elements transfered in last burst. */
1744:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] = (0u != USBFS_1_DmaEpLastBurstEl[epNumber]) ?
1745:Generated_Source\PSoC5/USBFS_1.c ****                                                                   (USBFS_1_DmaEpLastBurstEl[epNumbe
1746:Generated_Source\PSoC5/USBFS_1.c ****                                                                   (USBFS_1_DMA_BYTES_PER_BURST - 1u
1747:Generated_Source\PSoC5/USBFS_1.c **** 
1748:Generated_Source\PSoC5/USBFS_1.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
1749:Generated_Source\PSoC5/USBFS_1.c ****             lengthDescr0 = (1u == USBFS_1_DmaEpBurstCnt[epNumber]) ? USBFS_1_DmaEpLastBurstEl[epNum
1750:Generated_Source\PSoC5/USBFS_1.c ****             lengthDescr1 = (2u == USBFS_1_DmaEpBurstCnt[epNumber]) ? USBFS_1_DmaEpLastBurstEl[epNum
1751:Generated_Source\PSoC5/USBFS_1.c **** 
1752:Generated_Source\PSoC5/USBFS_1.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
1753:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] |= (USBFS_1_DmaEpBurstCnt[epNumber] > 2u) ? USBFS_1_
1754:Generated_Source\PSoC5/USBFS_1.c **** 
1755:Generated_Source\PSoC5/USBFS_1.c ****             /* Mark last descriptor to be executed. */
1756:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_1_DmaEpBurstCnt[epNumber] & 0x1u)) 
1757:Generated_Source\PSoC5/USBFS_1.c ****                                                                     USBFS_1_DMA_DESCR0_MASK : USBFS
1758:Generated_Source\PSoC5/USBFS_1.c **** 
1759:Generated_Source\PSoC5/USBFS_1.c ****             /* Store address of buffer and burst counter for endpoint. */
1760:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1761:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBurstCntBackup[epNumber]   = USBFS_1_DmaEpBurstCnt[epNumber];
1762:Generated_Source\PSoC5/USBFS_1.c **** 
1763:Generated_Source\PSoC5/USBFS_1.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
1764:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBurstCnt[epNumber] = USBFS_1_DMA_GET_BURST_CNT(USBFS_1_DmaEpBurstCnt[epNum
1765:Generated_Source\PSoC5/USBFS_1.c **** 
1766:Generated_Source\PSoC5/USBFS_1.c ****             /* Disable DMA channel: start configuration. */
1767:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaChDisable(channelNum);
1768:Generated_Source\PSoC5/USBFS_1.c **** 
1769:Generated_Source\PSoC5/USBFS_1.c ****             /* Set destination address. */
1770:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) &USBFS_1_ARB_EP_BASE
1771:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR1, (void*) &USBFS_1_ARB_EP_BASE
1772:Generated_Source\PSoC5/USBFS_1.c **** 
1773:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) ((uint32) pData));
1774:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR1, (void*) ((uint32) pData + US
1775:Generated_Source\PSoC5/USBFS_1.c **** 
1776:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA descriptor. */
1777:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR0, USBFS_1_DMA_COMMON_CFG  |
1778:Generated_Source\PSoC5/USBFS_1.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1779:Generated_Source\PSoC5/USBFS_1.c **** 
1780:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA descriptor. */
1781:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR1, USBFS_1_DMA_COMMON_CFG  |
1782:Generated_Source\PSoC5/USBFS_1.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1783:Generated_Source\PSoC5/USBFS_1.c **** 
1784:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable interrupt from DMA channel. */
1785:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetInterruptMask(channelNum);
1786:Generated_Source\PSoC5/USBFS_1.c **** 
1787:Generated_Source\PSoC5/USBFS_1.c ****             /* Validate DMA descriptor 0 and 1. */
1788:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR0);
1789:Generated_Source\PSoC5/USBFS_1.c **** 
1790:Generated_Source\PSoC5/USBFS_1.c ****             if (USBFS_1_DmaEpBurstCntBackup[epNumber] > 1u)
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 49


1791:Generated_Source\PSoC5/USBFS_1.c ****             {
1792:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR1);
1793:Generated_Source\PSoC5/USBFS_1.c ****             }
1794:Generated_Source\PSoC5/USBFS_1.c **** 
1795:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable DMA channel: configuration complete. */
1796:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaChEnable(channelNum);
1797:Generated_Source\PSoC5/USBFS_1.c ****         }
1798:Generated_Source\PSoC5/USBFS_1.c ****         #else
1799:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaChDisable(USBFS_1_DmaChan[epNumber]);
1800:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaTdSetConfiguration(USBFS_1_DmaTd[epNumber], length,  USBFS_1_DmaTd[epNumber
1801:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaTdSetAddress(USBFS_1_DmaTd[epNumber], LO16((uint32) &USBFS_1_ARB_EP_BASE.ar
1802:Generated_Source\PSoC5/USBFS_1.c **** 
1803:Generated_Source\PSoC5/USBFS_1.c ****             /* Clear Any potential pending DMA requests before starting DMA channel to transfer dat
1804:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaClearPendingDrq(USBFS_1_DmaChan[epNumber]);
1805:Generated_Source\PSoC5/USBFS_1.c **** 
1806:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable DMA channel. */
1807:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaChSetInitialTd(USBFS_1_DmaChan[epNumber], USBFS_1_DmaTd[epNumber]);
1808:Generated_Source\PSoC5/USBFS_1.c ****             (void) CyDmaChEnable(USBFS_1_DmaChan[epNumber], 1u);
1809:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (CY_PSOC4) */
1810:Generated_Source\PSoC5/USBFS_1.c **** 
1811:Generated_Source\PSoC5/USBFS_1.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1812:Generated_Source\PSoC5/USBFS_1.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1813:Generated_Source\PSoC5/USBFS_1.c ****             */
1814:Generated_Source\PSoC5/USBFS_1.c **** 
1815:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
1816:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_MANUAL) */
1817:Generated_Source\PSoC5/USBFS_1.c ****     }
1818:Generated_Source\PSoC5/USBFS_1.c ****     else
1819:Generated_Source\PSoC5/USBFS_1.c ****     {
1820:Generated_Source\PSoC5/USBFS_1.c ****         length = 0u;
1821:Generated_Source\PSoC5/USBFS_1.c ****     }
1822:Generated_Source\PSoC5/USBFS_1.c **** 
1823:Generated_Source\PSoC5/USBFS_1.c ****     return (length);
1824:Generated_Source\PSoC5/USBFS_1.c **** }
1825:Generated_Source\PSoC5/USBFS_1.c **** 
1826:Generated_Source\PSoC5/USBFS_1.c **** 
1827:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_16BITS_EP_ACCESS_ENABLE)
1828:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
1829:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_LoadInEP16
1830:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
1831:Generated_Source\PSoC5/USBFS_1.c **** *
1832:Generated_Source\PSoC5/USBFS_1.c **** *  This function performs different functionality depending on the Component’s
1833:Generated_Source\PSoC5/USBFS_1.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1834:Generated_Source\PSoC5/USBFS_1.c **** *  the Descriptor Root in Component Configure window.
1835:Generated_Source\PSoC5/USBFS_1.c **** *
1836:Generated_Source\PSoC5/USBFS_1.c **** *  *Manual (Static/Dynamic Allocation):*
1837:Generated_Source\PSoC5/USBFS_1.c **** *  This function loads and enables the specified USB data endpoint for an IN
1838:Generated_Source\PSoC5/USBFS_1.c **** *  data transfer.
1839:Generated_Source\PSoC5/USBFS_1.c **** *
1840:Generated_Source\PSoC5/USBFS_1.c **** *  *DMA with Manual Buffer Management:*
1841:Generated_Source\PSoC5/USBFS_1.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1842:Generated_Source\PSoC5/USBFS_1.c **** *  Generates request for a transfer.
1843:Generated_Source\PSoC5/USBFS_1.c **** *
1844:Generated_Source\PSoC5/USBFS_1.c **** *  *DMA with Automatic Buffer Management:*
1845:Generated_Source\PSoC5/USBFS_1.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1846:Generated_Source\PSoC5/USBFS_1.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1847:Generated_Source\PSoC5/USBFS_1.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 50


1848:Generated_Source\PSoC5/USBFS_1.c **** *  prepares data in endpoint buffer.
1849:Generated_Source\PSoC5/USBFS_1.c **** *
1850:Generated_Source\PSoC5/USBFS_1.c **** *  \param epNumber Contains the data endpoint number.
1851:Generated_Source\PSoC5/USBFS_1.c **** *        Valid values are between 1 and 8.
1852:Generated_Source\PSoC5/USBFS_1.c **** *  \param *pData A pointer to a data array from which the data for the endpoint
1853:Generated_Source\PSoC5/USBFS_1.c **** *        space is loaded. It shall be ensured that this pointer address is even
1854:Generated_Source\PSoC5/USBFS_1.c **** *        to ensure the 16-bit transfer is aligned to even address. Else, a hard
1855:Generated_Source\PSoC5/USBFS_1.c **** *        fault condition can occur.
1856:Generated_Source\PSoC5/USBFS_1.c **** *  \param length The number of bytes to transfer from the array and then send as
1857:Generated_Source\PSoC5/USBFS_1.c **** *        a result of an IN request. Valid values are between 0 and 512 (1023 for
1858:Generated_Source\PSoC5/USBFS_1.c **** *        DMA with Automatic Buffer Management mode). The value 512 is applicable
1859:Generated_Source\PSoC5/USBFS_1.c **** *        if only one endpoint is used.
1860:Generated_Source\PSoC5/USBFS_1.c **** *
1861:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
1862:Generated_Source\PSoC5/USBFS_1.c **** *  No.
1863:Generated_Source\PSoC5/USBFS_1.c **** *
1864:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
1865:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_LoadInEP16(uint8 epNumber, const uint8 pData[], uint16 length)
1866:Generated_Source\PSoC5/USBFS_1.c **** {
1867:Generated_Source\PSoC5/USBFS_1.c ****     /* Check array alignment on half-word boundary. */
1868:Generated_Source\PSoC5/USBFS_1.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
1869:Generated_Source\PSoC5/USBFS_1.c **** 
1870:Generated_Source\PSoC5/USBFS_1.c ****     if ((epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
1871:Generated_Source\PSoC5/USBFS_1.c ****     {
1872:Generated_Source\PSoC5/USBFS_1.c ****     #if (!USBFS_1_EP_MANAGEMENT_DMA_AUTO)
1873:Generated_Source\PSoC5/USBFS_1.c ****         /* Limit length to available buffer USB IP buffer size. */
1874:Generated_Source\PSoC5/USBFS_1.c ****         if (length > (USBFS_1_EPX_DATA_BUF_MAX - USBFS_1_EP[epNumber].buffOffset))
1875:Generated_Source\PSoC5/USBFS_1.c ****         {
1876:Generated_Source\PSoC5/USBFS_1.c ****             length = USBFS_1_EPX_DATA_BUF_MAX - USBFS_1_EP[epNumber].buffOffset;
1877:Generated_Source\PSoC5/USBFS_1.c ****         }
1878:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (!USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
1879:Generated_Source\PSoC5/USBFS_1.c **** 
1880:Generated_Source\PSoC5/USBFS_1.c ****         /* Set count and data toggle. */
1881:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USBFS_1_EP[epNumber].ep
1882:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
1883:Generated_Source\PSoC5/USBFS_1.c **** 
1884:Generated_Source\PSoC5/USBFS_1.c ****         /* Adjust requested length: 2 bytes are handled at one data register access. */
1885:Generated_Source\PSoC5/USBFS_1.c ****         length += (length & 0x01u);
1886:Generated_Source\PSoC5/USBFS_1.c **** 
1887:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_MANAGEMENT_MANUAL)
1888:Generated_Source\PSoC5/USBFS_1.c ****         if (NULL != pData)
1889:Generated_Source\PSoC5/USBFS_1.c ****         {
1890:Generated_Source\PSoC5/USBFS_1.c ****             /* Convert uint8 array to uint16. */
1891:Generated_Source\PSoC5/USBFS_1.c ****             const uint16 *dataBuf = (uint16 *) pData;
1892:Generated_Source\PSoC5/USBFS_1.c **** 
1893:Generated_Source\PSoC5/USBFS_1.c ****             /* Copy data using 16-bits arbiter data register. */
1894:Generated_Source\PSoC5/USBFS_1.c ****             uint16 i;
1895:Generated_Source\PSoC5/USBFS_1.c ****             for (i = 0u; i < (length >> 1u); ++i)
1896:Generated_Source\PSoC5/USBFS_1.c ****             {
1897:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_ARB_EP16_BASE.arbEp[epNumber].rwDr16 = dataBuf[i];
1898:Generated_Source\PSoC5/USBFS_1.c ****             }
1899:Generated_Source\PSoC5/USBFS_1.c ****         }
1900:Generated_Source\PSoC5/USBFS_1.c **** 
1901:Generated_Source\PSoC5/USBFS_1.c ****         /* IN endpoint buffer is full - read to be read. */
1902:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_EP[epNumber].apiEpState = USBFS_1_NO_EVENT_PENDING;
1903:Generated_Source\PSoC5/USBFS_1.c **** 
1904:Generated_Source\PSoC5/USBFS_1.c ****         /* Arm IN endpoint. */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 51


1905:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_1_EP[epNumber].epMode;
1906:Generated_Source\PSoC5/USBFS_1.c **** 
1907:Generated_Source\PSoC5/USBFS_1.c ****     #else
1908:Generated_Source\PSoC5/USBFS_1.c **** 
1909:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_MANUAL)
1910:Generated_Source\PSoC5/USBFS_1.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1911:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_EP[epNumber].apiEpState = USBFS_1_NO_EVENT_PENDING;
1912:Generated_Source\PSoC5/USBFS_1.c **** 
1913:Generated_Source\PSoC5/USBFS_1.c ****             if ((pData != NULL) && (length > 0u))
1914:Generated_Source\PSoC5/USBFS_1.c ****             {
1915:Generated_Source\PSoC5/USBFS_1.c ****                 uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
1916:Generated_Source\PSoC5/USBFS_1.c **** 
1917:Generated_Source\PSoC5/USBFS_1.c ****                 /* Disable DMA channel: start configuration. */
1918:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChDisable(channelNum);
1919:Generated_Source\PSoC5/USBFS_1.c **** 
1920:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure source and destination. */
1921:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) pData);
1922:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) &USBFS_1_ARB_EP1
1923:Generated_Source\PSoC5/USBFS_1.c **** 
1924:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure DMA descriptor. */
1925:Generated_Source\PSoC5/USBFS_1.c ****                 length = (length >> 1u) - 1u;
1926:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR0, USBFS_1_DMA_COMMON_CF
1927:Generated_Source\PSoC5/USBFS_1.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1928:Generated_Source\PSoC5/USBFS_1.c **** 
1929:Generated_Source\PSoC5/USBFS_1.c ****                 /* Validate descriptor to execute on following DMA request. */
1930:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR0);
1931:Generated_Source\PSoC5/USBFS_1.c **** 
1932:Generated_Source\PSoC5/USBFS_1.c ****                 /* Enable DMA channel: configuration complete. */
1933:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChEnable(channelNum);
1934:Generated_Source\PSoC5/USBFS_1.c **** 
1935:Generated_Source\PSoC5/USBFS_1.c ****                 /* Generate DMA request. */
1936:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBFS_1_ARB_EPX_CFG_DMA_REQ
1937:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBFS_1_ARB_EPX_CFG_DMA_REQ
1938:Generated_Source\PSoC5/USBFS_1.c **** 
1939:Generated_Source\PSoC5/USBFS_1.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1940:Generated_Source\PSoC5/USBFS_1.c ****             }
1941:Generated_Source\PSoC5/USBFS_1.c ****             else
1942:Generated_Source\PSoC5/USBFS_1.c ****             {
1943:Generated_Source\PSoC5/USBFS_1.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1944:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_1_EP[epNumber].epMode;
1945:Generated_Source\PSoC5/USBFS_1.c ****             }
1946:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_MANUAL) */
1947:Generated_Source\PSoC5/USBFS_1.c **** 
1948:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO)
1949:Generated_Source\PSoC5/USBFS_1.c ****             if (pData != NULL)
1950:Generated_Source\PSoC5/USBFS_1.c ****             {
1951:Generated_Source\PSoC5/USBFS_1.c ****                 uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
1952:Generated_Source\PSoC5/USBFS_1.c **** 
1953:Generated_Source\PSoC5/USBFS_1.c ****                 /* Store address of buffer. */
1954:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1955:Generated_Source\PSoC5/USBFS_1.c **** 
1956:Generated_Source\PSoC5/USBFS_1.c ****                 /* Disable DMA channel: start configuration. */
1957:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChDisable(channelNum);
1958:Generated_Source\PSoC5/USBFS_1.c **** 
1959:Generated_Source\PSoC5/USBFS_1.c ****                 /* Set destination address. */
1960:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) &USBFS_1_ARB_EP1
1961:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR1, (void*) &USBFS_1_ARB_EP1
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 52


1962:Generated_Source\PSoC5/USBFS_1.c **** 
1963:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure DMA descriptor. */
1964:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR0, USBFS_1_DMA_COMMON_CF
1965:Generated_Source\PSoC5/USBFS_1.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1966:Generated_Source\PSoC5/USBFS_1.c **** 
1967:Generated_Source\PSoC5/USBFS_1.c ****                 /* Configure DMA descriptor. */
1968:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR1, USBFS_1_DMA_COMMON_CF
1969:Generated_Source\PSoC5/USBFS_1.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1970:Generated_Source\PSoC5/USBFS_1.c **** 
1971:Generated_Source\PSoC5/USBFS_1.c ****                 /* Enable interrupt from DMA channel. */
1972:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaSetInterruptMask(channelNum);
1973:Generated_Source\PSoC5/USBFS_1.c **** 
1974:Generated_Source\PSoC5/USBFS_1.c ****                 /* Enable DMA channel: configuration complete. */
1975:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaChEnable(channelNum);
1976:Generated_Source\PSoC5/USBFS_1.c ****             }
1977:Generated_Source\PSoC5/USBFS_1.c ****             else
1978:Generated_Source\PSoC5/USBFS_1.c ****             {
1979:Generated_Source\PSoC5/USBFS_1.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1980:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_EP[epNumber].apiEpState = USBFS_1_NO_EVENT_PENDING;
1981:Generated_Source\PSoC5/USBFS_1.c **** 
1982:Generated_Source\PSoC5/USBFS_1.c ****                 if (length > 0u)
1983:Generated_Source\PSoC5/USBFS_1.c ****                 {
1984:Generated_Source\PSoC5/USBFS_1.c ****                     uint32 lengthDescr0, lengthDescr1;
1985:Generated_Source\PSoC5/USBFS_1.c ****                     uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
1986:Generated_Source\PSoC5/USBFS_1.c **** 
1987:Generated_Source\PSoC5/USBFS_1.c ****                     /* Get number of full bursts. */
1988:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpBurstCnt[epNumber] = (uint8) (length / USBFS_1_DMA_BYTES_PER_BURST
1989:Generated_Source\PSoC5/USBFS_1.c **** 
1990:Generated_Source\PSoC5/USBFS_1.c ****                     /* Get number of elements in the last burst. */
1991:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBFS_1_DMA_BYTES_PER_BU
1992:Generated_Source\PSoC5/USBFS_1.c **** 
1993:Generated_Source\PSoC5/USBFS_1.c ****                     /* Get total number of bursts. */
1994:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpBurstCnt[epNumber] += (0u != USBFS_1_DmaEpLastBurstEl[epNumber]) ?
1995:Generated_Source\PSoC5/USBFS_1.c **** 
1996:Generated_Source\PSoC5/USBFS_1.c ****                     /* Adjust number of data elements transferred in last burst. */
1997:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpLastBurstEl[epNumber] = (0u != USBFS_1_DmaEpLastBurstEl[epNumber])
1998:Generated_Source\PSoC5/USBFS_1.c ****                                                                           ((USBFS_1_DmaEpLastBurstE
1999:Generated_Source\PSoC5/USBFS_1.c ****                                                                            (USBFS_1_DMA_HALFWORDS_P
2000:Generated_Source\PSoC5/USBFS_1.c **** 
2001:Generated_Source\PSoC5/USBFS_1.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
2002:Generated_Source\PSoC5/USBFS_1.c ****                     lengthDescr0 = (1u == USBFS_1_DmaEpBurstCnt[epNumber]) ? USBFS_1_DmaEpLastBurst
2003:Generated_Source\PSoC5/USBFS_1.c ****                     lengthDescr1 = (2u == USBFS_1_DmaEpBurstCnt[epNumber]) ? USBFS_1_DmaEpLastBurst
2004:Generated_Source\PSoC5/USBFS_1.c **** 
2005:Generated_Source\PSoC5/USBFS_1.c ****                     /* Mark which descriptor is last one to execute. */
2006:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_1_DmaEpBurstCnt[epNumber] &
2007:Generated_Source\PSoC5/USBFS_1.c ****                                                                             USBFS_1_DMA_DESCR0_MASK
2008:Generated_Source\PSoC5/USBFS_1.c **** 
2009:Generated_Source\PSoC5/USBFS_1.c ****                     /* Restore DMA settings for current transfer. */
2010:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaChDisable(channelNum);
2011:Generated_Source\PSoC5/USBFS_1.c **** 
2012:Generated_Source\PSoC5/USBFS_1.c ****                     /* Restore destination address for input endpoint. */
2013:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) ((uint32) US
2014:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR1, (void*) ((uint32) US
2015:Generated_Source\PSoC5/USBFS_1.c ****                                                                                                    
2016:Generated_Source\PSoC5/USBFS_1.c **** 
2017:Generated_Source\PSoC5/USBFS_1.c ****                     /* Set number of elements to transfer. */
2018:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetNumDataElements(channelNum, USBFS_1_DMA_DESCR0, lengthDescr0);
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 53


2019:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetNumDataElements(channelNum, USBFS_1_DMA_DESCR1, lengthDescr1);
2020:Generated_Source\PSoC5/USBFS_1.c **** 
2021:Generated_Source\PSoC5/USBFS_1.c ****                     /* Validate descriptor 0 and command to start with it. */
2022:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR0);
2023:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaSetDescriptor0Next(channelNum);
2024:Generated_Source\PSoC5/USBFS_1.c **** 
2025:Generated_Source\PSoC5/USBFS_1.c ****                     /* Validate descriptor 1. */
2026:Generated_Source\PSoC5/USBFS_1.c ****                     if (USBFS_1_DmaEpBurstCnt[epNumber] > 1u)
2027:Generated_Source\PSoC5/USBFS_1.c ****                     {
2028:Generated_Source\PSoC5/USBFS_1.c ****                         USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR1);
2029:Generated_Source\PSoC5/USBFS_1.c ****                     }
2030:Generated_Source\PSoC5/USBFS_1.c **** 
2031:Generated_Source\PSoC5/USBFS_1.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
2032:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_DmaEpBurstCnt[epNumber] = USBFS_1_DMA_GET_BURST_CNT(USBFS_1_DmaEpBurstC
2033:Generated_Source\PSoC5/USBFS_1.c **** 
2034:Generated_Source\PSoC5/USBFS_1.c ****                     /* Enable DMA channel: configuration complete. */
2035:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_CyDmaChEnable(channelNum);
2036:Generated_Source\PSoC5/USBFS_1.c **** 
2037:Generated_Source\PSoC5/USBFS_1.c ****                 #if !defined (USBFS_1_MANUAL_IN_EP_ARM)
2038:Generated_Source\PSoC5/USBFS_1.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
2039:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBFS_1_ARB_EPX_CFG_IN_DATA_RDY;
2040:Generated_Source\PSoC5/USBFS_1.c ****                 #endif  /* (USBFS_1_MANUAL_IN_EP_ARM) */
2041:Generated_Source\PSoC5/USBFS_1.c **** 
2042:Generated_Source\PSoC5/USBFS_1.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
2043:Generated_Source\PSoC5/USBFS_1.c ****                 }
2044:Generated_Source\PSoC5/USBFS_1.c ****                 else
2045:Generated_Source\PSoC5/USBFS_1.c ****                 {
2046:Generated_Source\PSoC5/USBFS_1.c ****                     /* When zero-length packet: arm IN endpoint directly. */
2047:Generated_Source\PSoC5/USBFS_1.c ****                     USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_1_EP[epNumber].epMode;
2048:Generated_Source\PSoC5/USBFS_1.c ****                 }
2049:Generated_Source\PSoC5/USBFS_1.c ****             }
2050:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
2051:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_MANUAL) */
2052:Generated_Source\PSoC5/USBFS_1.c ****     }
2053:Generated_Source\PSoC5/USBFS_1.c **** }
2054:Generated_Source\PSoC5/USBFS_1.c **** 
2055:Generated_Source\PSoC5/USBFS_1.c **** 
2056:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2057:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_ReadOutEP16
2058:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2059:Generated_Source\PSoC5/USBFS_1.c **** *
2060:Generated_Source\PSoC5/USBFS_1.c **** *   This function performs different functionality depending on the Component’s
2061:Generated_Source\PSoC5/USBFS_1.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
2062:Generated_Source\PSoC5/USBFS_1.c **** *   Descriptor Root in Component Configure window.
2063:Generated_Source\PSoC5/USBFS_1.c **** *
2064:Generated_Source\PSoC5/USBFS_1.c **** *   *Manual (Static/Dynamic Allocation):*
2065:Generated_Source\PSoC5/USBFS_1.c **** *   This function moves the specified number of bytes from endpoint buffer to
2066:Generated_Source\PSoC5/USBFS_1.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
2067:Generated_Source\PSoC5/USBFS_1.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
2068:Generated_Source\PSoC5/USBFS_1.c **** *   the number of bytes requested by the length parameter.
2069:Generated_Source\PSoC5/USBFS_1.c **** *
2070:Generated_Source\PSoC5/USBFS_1.c **** *   *DMA with Manual Buffer Management:*
2071:Generated_Source\PSoC5/USBFS_1.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
2072:Generated_Source\PSoC5/USBFS_1.c **** *   a DMA request. The firmware must wait until the DMA completes the data
2073:Generated_Source\PSoC5/USBFS_1.c **** *   transfer after calling the USBFS_1_ReadOutEP() API. For example,
2074:Generated_Source\PSoC5/USBFS_1.c **** *   by checking EPstate:
2075:Generated_Source\PSoC5/USBFS_1.c **** *
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 54


2076:Generated_Source\PSoC5/USBFS_1.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
2077:Generated_Source\PSoC5/USBFS_1.c **** *
2078:Generated_Source\PSoC5/USBFS_1.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
2079:Generated_Source\PSoC5/USBFS_1.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
2080:Generated_Source\PSoC5/USBFS_1.c **** *   buffer to SRAM.
2081:Generated_Source\PSoC5/USBFS_1.c **** *
2082:Generated_Source\PSoC5/USBFS_1.c **** *   *DMA with Automatic Buffer Management:*
2083:Generated_Source\PSoC5/USBFS_1.c **** *   Configure DMA. This is required only once and automatically generates DMA
2084:Generated_Source\PSoC5/USBFS_1.c **** *   requests as data arrives
2085:Generated_Source\PSoC5/USBFS_1.c **** *
2086:Generated_Source\PSoC5/USBFS_1.c **** *  \param epNumber: Contains the data endpoint number.
2087:Generated_Source\PSoC5/USBFS_1.c **** *         Valid values are between 1 and 8.
2088:Generated_Source\PSoC5/USBFS_1.c **** *  \param pData: A pointer to a data array into which the data for the endpoint
2089:Generated_Source\PSoC5/USBFS_1.c **** *         space is copied. It shall be ensured that this pointer address is
2090:Generated_Source\PSoC5/USBFS_1.c **** *         even to ensure the 16-bit transfer is aligned to even address. Else,
2091:Generated_Source\PSoC5/USBFS_1.c **** *         a hard fault condition can occur.
2092:Generated_Source\PSoC5/USBFS_1.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
2093:Generated_Source\PSoC5/USBFS_1.c **** *         loads it into data array. Valid values are between 0 and 1023. The
2094:Generated_Source\PSoC5/USBFS_1.c **** *         function moves fewer than the requested number of bytes if the host
2095:Generated_Source\PSoC5/USBFS_1.c **** *         sends fewer bytes than requested.
2096:Generated_Source\PSoC5/USBFS_1.c **** *
2097:Generated_Source\PSoC5/USBFS_1.c **** * \return
2098:Generated_Source\PSoC5/USBFS_1.c **** *  Number of bytes received, 0 for an invalid endpoint.
2099:Generated_Source\PSoC5/USBFS_1.c **** *
2100:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
2101:Generated_Source\PSoC5/USBFS_1.c **** *  No.
2102:Generated_Source\PSoC5/USBFS_1.c **** *
2103:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2104:Generated_Source\PSoC5/USBFS_1.c **** uint16 USBFS_1_ReadOutEP16(uint8 epNumber, uint8 pData[], uint16 length)
2105:Generated_Source\PSoC5/USBFS_1.c **** {
2106:Generated_Source\PSoC5/USBFS_1.c ****     uint32 adjLength;
2107:Generated_Source\PSoC5/USBFS_1.c **** 
2108:Generated_Source\PSoC5/USBFS_1.c ****     /* Check array alignment on half-word boundary */
2109:Generated_Source\PSoC5/USBFS_1.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
2110:Generated_Source\PSoC5/USBFS_1.c **** 
2111:Generated_Source\PSoC5/USBFS_1.c ****     if ((pData != NULL) && (epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
2112:Generated_Source\PSoC5/USBFS_1.c ****     {
2113:Generated_Source\PSoC5/USBFS_1.c ****     #if (!USBFS_1_EP_MANAGEMENT_DMA_AUTO)
2114:Generated_Source\PSoC5/USBFS_1.c ****         /* Adjust requested length to available data. */
2115:Generated_Source\PSoC5/USBFS_1.c ****         length = (length > USBFS_1_GetEPCount(epNumber)) ? USBFS_1_GetEPCount(epNumber) : length;
2116:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (!USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
2117:Generated_Source\PSoC5/USBFS_1.c **** 
2118:Generated_Source\PSoC5/USBFS_1.c ****     /* Adjust requested length: 2 bytes are handled at one data register access. */
2119:Generated_Source\PSoC5/USBFS_1.c ****     adjLength =  length + ((uint32)length & 1u);
2120:Generated_Source\PSoC5/USBFS_1.c **** 
2121:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_EP_MANAGEMENT_MANUAL)
2122:Generated_Source\PSoC5/USBFS_1.c ****         {
2123:Generated_Source\PSoC5/USBFS_1.c ****             /* Convert uint8 array to uint16. */
2124:Generated_Source\PSoC5/USBFS_1.c ****             uint16 *dataBuf = (uint16 *) pData;
2125:Generated_Source\PSoC5/USBFS_1.c **** 
2126:Generated_Source\PSoC5/USBFS_1.c ****             /* Copy data using 16-bits arbiter data register. */
2127:Generated_Source\PSoC5/USBFS_1.c ****             uint16 i;
2128:Generated_Source\PSoC5/USBFS_1.c ****             for (i = 0u; i < (adjLength >> 1u); ++i)
2129:Generated_Source\PSoC5/USBFS_1.c ****             {
2130:Generated_Source\PSoC5/USBFS_1.c ****                 dataBuf[i] = (uint16) USBFS_1_ARB_EP16_BASE.arbEp[epNumber].rwDr16;
2131:Generated_Source\PSoC5/USBFS_1.c ****             }
2132:Generated_Source\PSoC5/USBFS_1.c ****         }
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 55


2133:Generated_Source\PSoC5/USBFS_1.c **** 
2134:Generated_Source\PSoC5/USBFS_1.c ****         /* Arm OUT endpoint after data has been read from endpoint buffer. */
2135:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_EnableOutEP(epNumber);
2136:Generated_Source\PSoC5/USBFS_1.c ****     #else
2137:Generated_Source\PSoC5/USBFS_1.c **** 
2138:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_MANUAL)
2139:Generated_Source\PSoC5/USBFS_1.c ****         {
2140:Generated_Source\PSoC5/USBFS_1.c ****             uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
2141:Generated_Source\PSoC5/USBFS_1.c **** 
2142:Generated_Source\PSoC5/USBFS_1.c ****             /* Disable DMA channel: start configuration. */
2143:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaChDisable(channelNum);
2144:Generated_Source\PSoC5/USBFS_1.c **** 
2145:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure source and destination. */
2146:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) &USBFS_1_ARB_EP16_BA
2147:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) pData);
2148:Generated_Source\PSoC5/USBFS_1.c **** 
2149:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA descriptor. */
2150:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR0, USBFS_1_DMA_COMMON_CFG | 
2151:Generated_Source\PSoC5/USBFS_1.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2152:Generated_Source\PSoC5/USBFS_1.c **** 
2153:Generated_Source\PSoC5/USBFS_1.c ****             /* Validate descriptor to execute on following DMA request. */
2154:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR0);
2155:Generated_Source\PSoC5/USBFS_1.c **** 
2156:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable DMA channel: configuration complete. */
2157:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaChEnable(channelNum);
2158:Generated_Source\PSoC5/USBFS_1.c **** 
2159:Generated_Source\PSoC5/USBFS_1.c ****             /* Generate DMA request. */
2160:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBFS_1_ARB_EPX_CFG_DMA_REQ;
2161:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBFS_1_ARB_EPX_CFG_DMA_REQ;
2162:Generated_Source\PSoC5/USBFS_1.c **** 
2163:Generated_Source\PSoC5/USBFS_1.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2164:Generated_Source\PSoC5/USBFS_1.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2165:Generated_Source\PSoC5/USBFS_1.c ****             */
2166:Generated_Source\PSoC5/USBFS_1.c ****         }
2167:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_MANUAL) */
2168:Generated_Source\PSoC5/USBFS_1.c **** 
2169:Generated_Source\PSoC5/USBFS_1.c ****         #if (USBFS_1_EP_MANAGEMENT_DMA_AUTO)
2170:Generated_Source\PSoC5/USBFS_1.c ****         {
2171:Generated_Source\PSoC5/USBFS_1.c ****             uint32 lengthDescr0, lengthDescr1;
2172:Generated_Source\PSoC5/USBFS_1.c ****             uint32 channelNum = (uint32) USBFS_1_DmaChan[epNumber];
2173:Generated_Source\PSoC5/USBFS_1.c **** 
2174:Generated_Source\PSoC5/USBFS_1.c ****             /* Get number of full bursts. */
2175:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBurstCnt[epNumber] = (uint8) (adjLength / USBFS_1_DMA_BYTES_PER_BURST);
2176:Generated_Source\PSoC5/USBFS_1.c **** 
2177:Generated_Source\PSoC5/USBFS_1.c ****             /* Get number of elements in last burst. */
2178:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] = (uint8) (adjLength % USBFS_1_DMA_BYTES_PER_BURST);
2179:Generated_Source\PSoC5/USBFS_1.c **** 
2180:Generated_Source\PSoC5/USBFS_1.c ****             /* Get total number of bursts. */
2181:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBurstCnt[epNumber] += (0u != USBFS_1_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
2182:Generated_Source\PSoC5/USBFS_1.c **** 
2183:Generated_Source\PSoC5/USBFS_1.c ****             /* Adjust number of data elements transferred in last burst. */
2184:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] = (0u != USBFS_1_DmaEpLastBurstEl[epNumber]) ?
2185:Generated_Source\PSoC5/USBFS_1.c ****                                                                   ((USBFS_1_DmaEpLastBurstEl[epNumb
2186:Generated_Source\PSoC5/USBFS_1.c ****                                                                    (USBFS_1_DMA_HALFWORDS_PER_BURST
2187:Generated_Source\PSoC5/USBFS_1.c **** 
2188:Generated_Source\PSoC5/USBFS_1.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
2189:Generated_Source\PSoC5/USBFS_1.c ****             lengthDescr0 = (1u == USBFS_1_DmaEpBurstCnt[epNumber]) ? USBFS_1_DmaEpLastBurstEl[epNum
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 56


2190:Generated_Source\PSoC5/USBFS_1.c ****             lengthDescr1 = (2u == USBFS_1_DmaEpBurstCnt[epNumber]) ? USBFS_1_DmaEpLastBurstEl[epNum
2191:Generated_Source\PSoC5/USBFS_1.c **** 
2192:Generated_Source\PSoC5/USBFS_1.c ****             /* Mark last descriptor to be executed. */
2193:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_1_DmaEpBurstCnt[epNumber] & 0x1u)) 
2194:Generated_Source\PSoC5/USBFS_1.c ****                                                                     USBFS_1_DMA_DESCR0_MASK : USBFS
2195:Generated_Source\PSoC5/USBFS_1.c **** 
2196:Generated_Source\PSoC5/USBFS_1.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
2197:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] |= (USBFS_1_DmaEpBurstCnt[epNumber] > 2u) ? USBFS_1_
2198:Generated_Source\PSoC5/USBFS_1.c **** 
2199:Generated_Source\PSoC5/USBFS_1.c ****             /* Mark that 16-bits access to data register is performed. */
2200:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpLastBurstEl[epNumber] |= USBFS_1_DMA_DESCR_16BITS;
2201:Generated_Source\PSoC5/USBFS_1.c **** 
2202:Generated_Source\PSoC5/USBFS_1.c ****             /* Store address of buffer and burst counter for endpoint. */
2203:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
2204:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBurstCntBackup[epNumber]   = USBFS_1_DmaEpBurstCnt[epNumber];
2205:Generated_Source\PSoC5/USBFS_1.c **** 
2206:Generated_Source\PSoC5/USBFS_1.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
2207:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_DmaEpBurstCnt[epNumber] = USBFS_1_DMA_GET_BURST_CNT(USBFS_1_DmaEpBurstCnt[epNum
2208:Generated_Source\PSoC5/USBFS_1.c **** 
2209:Generated_Source\PSoC5/USBFS_1.c ****             /* Disable DMA channel: start configuration. */
2210:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaChDisable(channelNum);
2211:Generated_Source\PSoC5/USBFS_1.c **** 
2212:Generated_Source\PSoC5/USBFS_1.c ****             /* Set destination address. */
2213:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) &USBFS_1_ARB_EP16_BA
2214:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetSrcAddress(channelNum, USBFS_1_DMA_DESCR1, (void*) &USBFS_1_ARB_EP16_BA
2215:Generated_Source\PSoC5/USBFS_1.c **** 
2216:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR0, (void*) ((uint32) pData));
2217:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetDstAddress(channelNum, USBFS_1_DMA_DESCR1, (void*) ((uint32) pData + US
2218:Generated_Source\PSoC5/USBFS_1.c **** 
2219:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA descriptor 0. */
2220:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR0, USBFS_1_DMA_COMMON_CFG  |
2221:Generated_Source\PSoC5/USBFS_1.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2222:Generated_Source\PSoC5/USBFS_1.c **** 
2223:Generated_Source\PSoC5/USBFS_1.c ****             /* Configure DMA descriptor 1. */
2224:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetConfiguration(channelNum, USBFS_1_DMA_DESCR1, USBFS_1_DMA_COMMON_CFG  |
2225:Generated_Source\PSoC5/USBFS_1.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2226:Generated_Source\PSoC5/USBFS_1.c **** 
2227:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable interrupt from DMA channel. */
2228:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaSetInterruptMask(channelNum);
2229:Generated_Source\PSoC5/USBFS_1.c **** 
2230:Generated_Source\PSoC5/USBFS_1.c ****             /* Validate DMA descriptor 0 and 1. */
2231:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR0);
2232:Generated_Source\PSoC5/USBFS_1.c ****             
2233:Generated_Source\PSoC5/USBFS_1.c ****             if (USBFS_1_DmaEpBurstCntBackup[epNumber] > 1u)
2234:Generated_Source\PSoC5/USBFS_1.c ****             {
2235:Generated_Source\PSoC5/USBFS_1.c ****                 USBFS_1_CyDmaValidateDescriptor(channelNum, USBFS_1_DMA_DESCR1);
2236:Generated_Source\PSoC5/USBFS_1.c ****             }
2237:Generated_Source\PSoC5/USBFS_1.c **** 
2238:Generated_Source\PSoC5/USBFS_1.c ****             /* Enable DMA channel: configuration complete. */
2239:Generated_Source\PSoC5/USBFS_1.c ****             USBFS_1_CyDmaChEnable(channelNum);
2240:Generated_Source\PSoC5/USBFS_1.c **** 
2241:Generated_Source\PSoC5/USBFS_1.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2242:Generated_Source\PSoC5/USBFS_1.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2243:Generated_Source\PSoC5/USBFS_1.c ****             */
2244:Generated_Source\PSoC5/USBFS_1.c ****         }
2245:Generated_Source\PSoC5/USBFS_1.c ****         #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
2246:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_MANUAL) */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 57


2247:Generated_Source\PSoC5/USBFS_1.c ****     }
2248:Generated_Source\PSoC5/USBFS_1.c ****     else
2249:Generated_Source\PSoC5/USBFS_1.c ****     {
2250:Generated_Source\PSoC5/USBFS_1.c ****         length = 0u;
2251:Generated_Source\PSoC5/USBFS_1.c ****     }
2252:Generated_Source\PSoC5/USBFS_1.c **** 
2253:Generated_Source\PSoC5/USBFS_1.c ****     return (length);
2254:Generated_Source\PSoC5/USBFS_1.c **** }
2255:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_16BITS_EP_ACCESS_ENABLE) */
2256:Generated_Source\PSoC5/USBFS_1.c **** 
2257:Generated_Source\PSoC5/USBFS_1.c **** 
2258:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2259:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_EnableOutEP
2260:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2261:Generated_Source\PSoC5/USBFS_1.c **** *
2262:Generated_Source\PSoC5/USBFS_1.c **** *  This function enables the specified endpoint for OUT transfers. Do not call
2263:Generated_Source\PSoC5/USBFS_1.c **** *  this function for IN endpoints.
2264:Generated_Source\PSoC5/USBFS_1.c **** *
2265:Generated_Source\PSoC5/USBFS_1.c **** *  \param epNumber: Contains the data endpoint number. Valid values are between
2266:Generated_Source\PSoC5/USBFS_1.c **** *  1 and 8.
2267:Generated_Source\PSoC5/USBFS_1.c **** *
2268:Generated_Source\PSoC5/USBFS_1.c **** * \globalvars
2269:Generated_Source\PSoC5/USBFS_1.c **** *
2270:Generated_Source\PSoC5/USBFS_1.c **** *  \ref USBFS_1_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
2271:Generated_Source\PSoC5/USBFS_1.c **** *
2272:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
2273:Generated_Source\PSoC5/USBFS_1.c **** *  No.
2274:Generated_Source\PSoC5/USBFS_1.c **** *
2275:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2276:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_EnableOutEP(uint8 epNumber) 
2277:Generated_Source\PSoC5/USBFS_1.c **** {
 933              		.loc 1 2277 0
 934              		.cfi_startproc
 935              		@ args = 0, pretend = 0, frame = 0
 936              		@ frame_needed = 0, uses_anonymous_args = 0
 937              		@ link register save eliminated.
 938              	.LVL68:
2278:Generated_Source\PSoC5/USBFS_1.c ****     if ((epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
 939              		.loc 1 2278 0
 940 0000 431E     		subs	r3, r0, #1
 941 0002 DBB2     		uxtb	r3, r3
 942 0004 072B     		cmp	r3, #7
 943 0006 0BD8     		bhi	.L65
2279:Generated_Source\PSoC5/USBFS_1.c ****     {
2280:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_EP[epNumber].apiEpState = USBFS_1_NO_EVENT_PENDING;
 944              		.loc 1 2280 0
 945 0008 4200     		lsls	r2, r0, #1
 946 000a 0244     		add	r2, r2, r0
 947 000c 9300     		lsls	r3, r2, #2
 948 000e 054A     		ldr	r2, .L67
 949 0010 1344     		add	r3, r3, r2
 950 0012 0022     		movs	r2, #0
 951 0014 5A70     		strb	r2, [r3, #1]
2281:Generated_Source\PSoC5/USBFS_1.c **** 
2282:Generated_Source\PSoC5/USBFS_1.c ****         /* Enable OUT endpoint to be written by Host. */
2283:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_1_EP[epNumber].epMode;
 952              		.loc 1 2283 0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 58


 953 0016 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 954 0018 D2B2     		uxtb	r2, r2
 955 001a 0001     		lsls	r0, r0, #4
 956              	.LVL69:
 957 001c 024B     		ldr	r3, .L67+4
 958 001e 1A54     		strb	r2, [r3, r0]
 959              	.L65:
 960 0020 7047     		bx	lr
 961              	.L68:
 962 0022 00BF     		.align	2
 963              	.L67:
 964 0024 00000000 		.word	USBFS_1_EP
 965 0028 FE5F0040 		.word	1073766398
 966              		.cfi_endproc
 967              	.LFE13:
 968              		.size	USBFS_1_EnableOutEP, .-USBFS_1_EnableOutEP
 969              		.section	.text.USBFS_1_ReadOutEP,"ax",%progbits
 970              		.align	2
 971              		.global	USBFS_1_ReadOutEP
 972              		.thumb
 973              		.thumb_func
 974              		.type	USBFS_1_ReadOutEP, %function
 975              	USBFS_1_ReadOutEP:
 976              	.LFB12:
1655:Generated_Source\PSoC5/USBFS_1.c ****     if ((pData != NULL) && (epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
 977              		.loc 1 1655 0
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 0
 980              		@ frame_needed = 0, uses_anonymous_args = 0
 981              	.LVL70:
 982 0000 70B5     		push	{r4, r5, r6, lr}
 983              		.cfi_def_cfa_offset 16
 984              		.cfi_offset 4, -16
 985              		.cfi_offset 5, -12
 986              		.cfi_offset 6, -8
 987              		.cfi_offset 14, -4
1656:Generated_Source\PSoC5/USBFS_1.c ****     {
 988              		.loc 1 1656 0
 989 0002 D9B1     		cbz	r1, .L74
 990 0004 0546     		mov	r5, r0
 991 0006 1446     		mov	r4, r2
 992 0008 0E46     		mov	r6, r1
1656:Generated_Source\PSoC5/USBFS_1.c ****     {
 993              		.loc 1 1656 0 is_stmt 0 discriminator 1
 994 000a C8B1     		cbz	r0, .L75
1656:Generated_Source\PSoC5/USBFS_1.c ****     {
 995              		.loc 1 1656 0 discriminator 2
 996 000c 0828     		cmp	r0, #8
 997 000e 19D8     		bhi	.L76
1660:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (!USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 998              		.loc 1 1660 0 is_stmt 1
 999 0010 FFF7FEFF 		bl	USBFS_1_GetEPCount
 1000              	.LVL71:
 1001 0014 A042     		cmp	r0, r4
 1002 0016 03D2     		bcs	.L71
1660:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (!USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 1003              		.loc 1 1660 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 59


 1004 0018 2846     		mov	r0, r5
 1005 001a FFF7FEFF 		bl	USBFS_1_GetEPCount
 1006              	.LVL72:
 1007 001e 0446     		mov	r4, r0
 1008              	.L71:
 1009              	.LVL73:
 1010              	.LBB4:
1667:Generated_Source\PSoC5/USBFS_1.c ****             {
 1011              		.loc 1 1667 0 is_stmt 1 discriminator 4
 1012 0020 0023     		movs	r3, #0
 1013 0022 05E0     		b	.L72
 1014              	.LVL74:
 1015              	.L73:
1669:Generated_Source\PSoC5/USBFS_1.c ****             }
 1016              		.loc 1 1669 0 discriminator 3
 1017 0024 2901     		lsls	r1, r5, #4
 1018 0026 094A     		ldr	r2, .L78
 1019 0028 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 1020 002a F254     		strb	r2, [r6, r3]
1667:Generated_Source\PSoC5/USBFS_1.c ****             {
 1021              		.loc 1 1667 0 discriminator 3
 1022 002c 0133     		adds	r3, r3, #1
 1023              	.LVL75:
 1024 002e 9BB2     		uxth	r3, r3
 1025              	.LVL76:
 1026              	.L72:
1667:Generated_Source\PSoC5/USBFS_1.c ****             {
 1027              		.loc 1 1667 0 is_stmt 0 discriminator 1
 1028 0030 A342     		cmp	r3, r4
 1029 0032 F7D3     		bcc	.L73
 1030              	.LBE4:
1674:Generated_Source\PSoC5/USBFS_1.c ****     #else
 1031              		.loc 1 1674 0 is_stmt 1
 1032 0034 2846     		mov	r0, r5
 1033 0036 FFF7FEFF 		bl	USBFS_1_EnableOutEP
 1034              	.LVL77:
 1035 003a 04E0     		b	.L70
 1036              	.LVL78:
 1037              	.L74:
1820:Generated_Source\PSoC5/USBFS_1.c ****     }
 1038              		.loc 1 1820 0
 1039 003c 0024     		movs	r4, #0
 1040 003e 02E0     		b	.L70
 1041              	.L75:
 1042 0040 0024     		movs	r4, #0
 1043 0042 00E0     		b	.L70
 1044              	.L76:
 1045 0044 0024     		movs	r4, #0
 1046              	.LVL79:
 1047              	.L70:
1824:Generated_Source\PSoC5/USBFS_1.c **** 
 1048              		.loc 1 1824 0
 1049 0046 2046     		mov	r0, r4
 1050 0048 70BD     		pop	{r4, r5, r6, pc}
 1051              	.LVL80:
 1052              	.L79:
 1053 004a 00BF     		.align	2
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 60


 1054              	.L78:
 1055 004c 78600040 		.word	1073766520
 1056              		.cfi_endproc
 1057              	.LFE12:
 1058              		.size	USBFS_1_ReadOutEP, .-USBFS_1_ReadOutEP
 1059              		.section	.text.USBFS_1_DisableOutEP,"ax",%progbits
 1060              		.align	2
 1061              		.global	USBFS_1_DisableOutEP
 1062              		.thumb
 1063              		.thumb_func
 1064              		.type	USBFS_1_DisableOutEP, %function
 1065              	USBFS_1_DisableOutEP:
 1066              	.LFB14:
2284:Generated_Source\PSoC5/USBFS_1.c ****         
2285:Generated_Source\PSoC5/USBFS_1.c ****     }
2286:Generated_Source\PSoC5/USBFS_1.c **** }
2287:Generated_Source\PSoC5/USBFS_1.c **** 
2288:Generated_Source\PSoC5/USBFS_1.c **** 
2289:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2290:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_DisableOutEP
2291:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2292:Generated_Source\PSoC5/USBFS_1.c **** *
2293:Generated_Source\PSoC5/USBFS_1.c **** *  This function disables the specified USBFS OUT endpoint. Do not call this
2294:Generated_Source\PSoC5/USBFS_1.c **** *  function for IN endpoints.
2295:Generated_Source\PSoC5/USBFS_1.c **** *
2296:Generated_Source\PSoC5/USBFS_1.c **** *  \param epNumber: Contains the data endpoint number.
2297:Generated_Source\PSoC5/USBFS_1.c **** *            Valid values are between 1 and 8.
2298:Generated_Source\PSoC5/USBFS_1.c **** *
2299:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2300:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_DisableOutEP(uint8 epNumber) 
2301:Generated_Source\PSoC5/USBFS_1.c **** {
 1067              		.loc 1 2301 0
 1068              		.cfi_startproc
 1069              		@ args = 0, pretend = 0, frame = 0
 1070              		@ frame_needed = 0, uses_anonymous_args = 0
 1071              		@ link register save eliminated.
 1072              	.LVL81:
2302:Generated_Source\PSoC5/USBFS_1.c ****     if ((epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
 1073              		.loc 1 2302 0
 1074 0000 431E     		subs	r3, r0, #1
 1075 0002 DBB2     		uxtb	r3, r3
 1076 0004 072B     		cmp	r3, #7
 1077 0006 03D8     		bhi	.L80
2303:Generated_Source\PSoC5/USBFS_1.c ****     {
2304:Generated_Source\PSoC5/USBFS_1.c ****         /* Set NAK response for OUT endpoint. */
2305:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_1_MODE_NAK_OUT;
 1078              		.loc 1 2305 0
 1079 0008 0001     		lsls	r0, r0, #4
 1080              	.LVL82:
 1081 000a 024B     		ldr	r3, .L82
 1082 000c 0822     		movs	r2, #8
 1083 000e 1A54     		strb	r2, [r3, r0]
 1084              	.L80:
 1085 0010 7047     		bx	lr
 1086              	.L83:
 1087 0012 00BF     		.align	2
 1088              	.L82:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 61


 1089 0014 FE5F0040 		.word	1073766398
 1090              		.cfi_endproc
 1091              	.LFE14:
 1092              		.size	USBFS_1_DisableOutEP, .-USBFS_1_DisableOutEP
 1093              		.section	.text.USBFS_1_Force,"ax",%progbits
 1094              		.align	2
 1095              		.global	USBFS_1_Force
 1096              		.thumb
 1097              		.thumb_func
 1098              		.type	USBFS_1_Force, %function
 1099              	USBFS_1_Force:
 1100              	.LFB15:
2306:Generated_Source\PSoC5/USBFS_1.c ****     }
2307:Generated_Source\PSoC5/USBFS_1.c **** }
2308:Generated_Source\PSoC5/USBFS_1.c **** 
2309:Generated_Source\PSoC5/USBFS_1.c **** 
2310:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2311:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_Force
2312:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2313:Generated_Source\PSoC5/USBFS_1.c **** *
2314:Generated_Source\PSoC5/USBFS_1.c **** *  This function forces a USB J, K, or SE0 state on the D+/D– lines. It provides
2315:Generated_Source\PSoC5/USBFS_1.c **** *  the necessary mechanism for a USB device application to perform a USB Remote
2316:Generated_Source\PSoC5/USBFS_1.c **** *  Wakeup. For more information, see the USB 2.0 Specification for details on
2317:Generated_Source\PSoC5/USBFS_1.c **** *  Suspend and Resume.
2318:Generated_Source\PSoC5/USBFS_1.c **** *
2319:Generated_Source\PSoC5/USBFS_1.c **** *  \param state A byte indicating which of the four bus states to enable.
2320:Generated_Source\PSoC5/USBFS_1.c **** *        Symbolic names  and their associated values are listed here:
2321:Generated_Source\PSoC5/USBFS_1.c **** *    State                      |Description
2322:Generated_Source\PSoC5/USBFS_1.c **** *    ---------------------------|----------------------------------------------
2323:Generated_Source\PSoC5/USBFS_1.c **** *    USBFS_1_FORCE_J   | Force a J State onto the D+/D– lines
2324:Generated_Source\PSoC5/USBFS_1.c **** *    USBFS_1_FORCE_K   | Force a K State onto the D+/D– lines
2325:Generated_Source\PSoC5/USBFS_1.c **** *    USBFS_1_FORCE_SE0 | Force a Single Ended 0 onto the D+/D– lines
2326:Generated_Source\PSoC5/USBFS_1.c **** *    USBFS_1_FORCE_NONE| Return bus to SIE control
2327:Generated_Source\PSoC5/USBFS_1.c **** *
2328:Generated_Source\PSoC5/USBFS_1.c **** *
2329:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2330:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_Force(uint8 bState) 
2331:Generated_Source\PSoC5/USBFS_1.c **** {
 1101              		.loc 1 2331 0
 1102              		.cfi_startproc
 1103              		@ args = 0, pretend = 0, frame = 0
 1104              		@ frame_needed = 0, uses_anonymous_args = 0
 1105              		@ link register save eliminated.
 1106              	.LVL83:
2332:Generated_Source\PSoC5/USBFS_1.c ****     /* This registers is used only for manual control of SIE (no masking is
2333:Generated_Source\PSoC5/USBFS_1.c ****     * needed before write into it).
2334:Generated_Source\PSoC5/USBFS_1.c ****     */
2335:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_USBIO_CR0_REG = bState;
 1107              		.loc 1 2335 0
 1108 0000 014B     		ldr	r3, .L85
 1109 0002 1870     		strb	r0, [r3]
 1110 0004 7047     		bx	lr
 1111              	.L86:
 1112 0006 00BF     		.align	2
 1113              	.L85:
 1114 0008 10600040 		.word	1073766416
 1115              		.cfi_endproc
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 62


 1116              	.LFE15:
 1117              		.size	USBFS_1_Force, .-USBFS_1_Force
 1118              		.section	.text.USBFS_1_GetEPAckState,"ax",%progbits
 1119              		.align	2
 1120              		.global	USBFS_1_GetEPAckState
 1121              		.thumb
 1122              		.thumb_func
 1123              		.type	USBFS_1_GetEPAckState, %function
 1124              	USBFS_1_GetEPAckState:
 1125              	.LFB16:
2336:Generated_Source\PSoC5/USBFS_1.c **** }
2337:Generated_Source\PSoC5/USBFS_1.c **** 
2338:Generated_Source\PSoC5/USBFS_1.c **** 
2339:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2340:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_GetEPAckState
2341:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2342:Generated_Source\PSoC5/USBFS_1.c **** *
2343:Generated_Source\PSoC5/USBFS_1.c **** *  This function determines whether an ACK transaction occurred on this endpoint
2344:Generated_Source\PSoC5/USBFS_1.c **** *  by reading the ACK bit in the control register of the endpoint. It does not
2345:Generated_Source\PSoC5/USBFS_1.c **** *  clear the ACK bit.
2346:Generated_Source\PSoC5/USBFS_1.c **** *
2347:Generated_Source\PSoC5/USBFS_1.c **** *  \param epNumber Contains the data endpoint number.
2348:Generated_Source\PSoC5/USBFS_1.c **** *            Valid values are between 1 and 8.
2349:Generated_Source\PSoC5/USBFS_1.c **** *
2350:Generated_Source\PSoC5/USBFS_1.c **** *  \return
2351:Generated_Source\PSoC5/USBFS_1.c **** *  If an ACKed transaction occurred, this function returns a non-zero value.
2352:Generated_Source\PSoC5/USBFS_1.c **** *  Otherwise, it returns zero.
2353:Generated_Source\PSoC5/USBFS_1.c **** *
2354:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2355:Generated_Source\PSoC5/USBFS_1.c **** uint8 USBFS_1_GetEPAckState(uint8 epNumber) 
2356:Generated_Source\PSoC5/USBFS_1.c **** {
 1126              		.loc 1 2356 0
 1127              		.cfi_startproc
 1128              		@ args = 0, pretend = 0, frame = 0
 1129              		@ frame_needed = 0, uses_anonymous_args = 0
 1130              		@ link register save eliminated.
 1131              	.LVL84:
2357:Generated_Source\PSoC5/USBFS_1.c ****     uint8 cr = 0u;
2358:Generated_Source\PSoC5/USBFS_1.c **** 
2359:Generated_Source\PSoC5/USBFS_1.c ****     if ((epNumber > USBFS_1_EP0) && (epNumber < USBFS_1_MAX_EP))
 1132              		.loc 1 2359 0
 1133 0000 431E     		subs	r3, r0, #1
 1134 0002 DBB2     		uxtb	r3, r3
 1135 0004 072B     		cmp	r3, #7
 1136 0006 06D8     		bhi	.L89
2360:Generated_Source\PSoC5/USBFS_1.c ****     {
2361:Generated_Source\PSoC5/USBFS_1.c ****         cr = USBFS_1_SIE_EP_BASE.sieEp[epNumber].epCr0 & USBFS_1_MODE_ACKD;
 1137              		.loc 1 2361 0
 1138 0008 0001     		lsls	r0, r0, #4
 1139              	.LVL85:
 1140 000a 044B     		ldr	r3, .L90
 1141 000c 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 1142 000e 00F01000 		and	r0, r0, #16
 1143 0012 C0B2     		uxtb	r0, r0
 1144              	.LVL86:
 1145 0014 7047     		bx	lr
 1146              	.LVL87:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 63


 1147              	.L89:
2357:Generated_Source\PSoC5/USBFS_1.c ****     uint8 cr = 0u;
 1148              		.loc 1 2357 0
 1149 0016 0020     		movs	r0, #0
 1150              	.LVL88:
2362:Generated_Source\PSoC5/USBFS_1.c ****     }
2363:Generated_Source\PSoC5/USBFS_1.c **** 
2364:Generated_Source\PSoC5/USBFS_1.c ****     return ((uint8) cr);
2365:Generated_Source\PSoC5/USBFS_1.c **** }
 1151              		.loc 1 2365 0
 1152 0018 7047     		bx	lr
 1153              	.L91:
 1154 001a 00BF     		.align	2
 1155              	.L90:
 1156 001c FE5F0040 		.word	1073766398
 1157              		.cfi_endproc
 1158              	.LFE16:
 1159              		.size	USBFS_1_GetEPAckState, .-USBFS_1_GetEPAckState
 1160              		.section	.text.USBFS_1_SetPowerStatus,"ax",%progbits
 1161              		.align	2
 1162              		.global	USBFS_1_SetPowerStatus
 1163              		.thumb
 1164              		.thumb_func
 1165              		.type	USBFS_1_SetPowerStatus, %function
 1166              	USBFS_1_SetPowerStatus:
 1167              	.LFB17:
2366:Generated_Source\PSoC5/USBFS_1.c **** 
2367:Generated_Source\PSoC5/USBFS_1.c **** 
2368:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2369:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_SetPowerStatus
2370:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2371:Generated_Source\PSoC5/USBFS_1.c **** *
2372:Generated_Source\PSoC5/USBFS_1.c **** *  This function sets the current power status. The device replies to USB
2373:Generated_Source\PSoC5/USBFS_1.c **** *  GET_STATUS requests based on this value. This allows the device to properly
2374:Generated_Source\PSoC5/USBFS_1.c **** *  report its status for USB Chapter 9 compliance. Devices can change their
2375:Generated_Source\PSoC5/USBFS_1.c **** *  power source from self powered to bus powered at any time and report their
2376:Generated_Source\PSoC5/USBFS_1.c **** *  current power source as part of the device status. You should call this
2377:Generated_Source\PSoC5/USBFS_1.c **** *  function any time your device changes from self powered to bus powered or
2378:Generated_Source\PSoC5/USBFS_1.c **** *  vice versa, and set the status appropriately.
2379:Generated_Source\PSoC5/USBFS_1.c **** *
2380:Generated_Source\PSoC5/USBFS_1.c **** *  \param powerStatus: Contains the desired power status, one for self powered
2381:Generated_Source\PSoC5/USBFS_1.c **** *        or zero for bus powered. Symbolic names and their associated values are
2382:Generated_Source\PSoC5/USBFS_1.c **** *        given here:
2383:Generated_Source\PSoC5/USBFS_1.c **** *  Power Status                                |Description
2384:Generated_Source\PSoC5/USBFS_1.c **** *  --------------------------------------------|---------------------------
2385:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_1_DEVICE_STATUS_BUS_POWERED  | Set the device to bus powered
2386:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_1_DEVICE_STATUS_SELF_POWERED | Set the device to self powered
2387:Generated_Source\PSoC5/USBFS_1.c **** *
2388:Generated_Source\PSoC5/USBFS_1.c **** * \globalvars
2389:Generated_Source\PSoC5/USBFS_1.c **** *
2390:Generated_Source\PSoC5/USBFS_1.c **** *  \ref USBFS_1_deviceStatus - set power status
2391:Generated_Source\PSoC5/USBFS_1.c **** *
2392:Generated_Source\PSoC5/USBFS_1.c **** * \reentrant
2393:Generated_Source\PSoC5/USBFS_1.c **** *  No.
2394:Generated_Source\PSoC5/USBFS_1.c **** *
2395:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2396:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_SetPowerStatus(uint8 powerStatus) 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 64


2397:Generated_Source\PSoC5/USBFS_1.c **** {
 1168              		.loc 1 2397 0
 1169              		.cfi_startproc
 1170              		@ args = 0, pretend = 0, frame = 0
 1171              		@ frame_needed = 0, uses_anonymous_args = 0
 1172              		@ link register save eliminated.
 1173              	.LVL89:
2398:Generated_Source\PSoC5/USBFS_1.c ****     if (powerStatus != USBFS_1_DEVICE_STATUS_BUS_POWERED)
 1174              		.loc 1 2398 0
 1175 0000 28B1     		cbz	r0, .L93
2399:Generated_Source\PSoC5/USBFS_1.c ****     {
2400:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_deviceStatus |= (uint8)  USBFS_1_DEVICE_STATUS_SELF_POWERED;
 1176              		.loc 1 2400 0
 1177 0002 064A     		ldr	r2, .L95
 1178 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1179 0006 43F00103 		orr	r3, r3, #1
 1180 000a 1370     		strb	r3, [r2]
 1181 000c 7047     		bx	lr
 1182              	.L93:
2401:Generated_Source\PSoC5/USBFS_1.c ****     }
2402:Generated_Source\PSoC5/USBFS_1.c ****     else
2403:Generated_Source\PSoC5/USBFS_1.c ****     {
2404:Generated_Source\PSoC5/USBFS_1.c ****         USBFS_1_deviceStatus &= (uint8) ~USBFS_1_DEVICE_STATUS_SELF_POWERED;
 1183              		.loc 1 2404 0
 1184 000e 034A     		ldr	r2, .L95
 1185 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1186 0012 03F0FE03 		and	r3, r3, #254
 1187 0016 1370     		strb	r3, [r2]
 1188 0018 7047     		bx	lr
 1189              	.L96:
 1190 001a 00BF     		.align	2
 1191              	.L95:
 1192 001c 00000000 		.word	USBFS_1_deviceStatus
 1193              		.cfi_endproc
 1194              	.LFE17:
 1195              		.size	USBFS_1_SetPowerStatus, .-USBFS_1_SetPowerStatus
 1196              		.section	.text.USBFS_1_RWUEnabled,"ax",%progbits
 1197              		.align	2
 1198              		.global	USBFS_1_RWUEnabled
 1199              		.thumb
 1200              		.thumb_func
 1201              		.type	USBFS_1_RWUEnabled, %function
 1202              	USBFS_1_RWUEnabled:
 1203              	.LFB18:
2405:Generated_Source\PSoC5/USBFS_1.c ****     }
2406:Generated_Source\PSoC5/USBFS_1.c **** }
2407:Generated_Source\PSoC5/USBFS_1.c **** 
2408:Generated_Source\PSoC5/USBFS_1.c **** 
2409:Generated_Source\PSoC5/USBFS_1.c **** #if (USBFS_1_VBUS_MONITORING_ENABLE)
2410:Generated_Source\PSoC5/USBFS_1.c ****     /***************************************************************************
2411:Generated_Source\PSoC5/USBFS_1.c ****     * Function Name: USBFS_1_VBusPresent
2412:Generated_Source\PSoC5/USBFS_1.c ****     ************************************************************************//**
2413:Generated_Source\PSoC5/USBFS_1.c ****     *
2414:Generated_Source\PSoC5/USBFS_1.c ****     *  Determines VBUS presence for self-powered devices. This function is
2415:Generated_Source\PSoC5/USBFS_1.c ****     *  available when the VBUS Monitoring option is enabled in the Advanced tab.
2416:Generated_Source\PSoC5/USBFS_1.c ****     *
2417:Generated_Source\PSoC5/USBFS_1.c ****     * \return
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 65


2418:Generated_Source\PSoC5/USBFS_1.c ****     *  The return value can be the following:
2419:Generated_Source\PSoC5/USBFS_1.c ****     *  Return Value | Description
2420:Generated_Source\PSoC5/USBFS_1.c ****     *  -------------|-----------------
2421:Generated_Source\PSoC5/USBFS_1.c ****     *  1            | VBUS is present
2422:Generated_Source\PSoC5/USBFS_1.c ****     *  0            | VBUS is absent
2423:Generated_Source\PSoC5/USBFS_1.c ****     *
2424:Generated_Source\PSoC5/USBFS_1.c ****     *
2425:Generated_Source\PSoC5/USBFS_1.c ****     ***************************************************************************/
2426:Generated_Source\PSoC5/USBFS_1.c ****     uint8 USBFS_1_VBusPresent(void) 
2427:Generated_Source\PSoC5/USBFS_1.c ****     {
2428:Generated_Source\PSoC5/USBFS_1.c ****         return ((0u != (USBFS_1_VBUS_STATUS_REG & USBFS_1_VBUS_VALID)) ? (uint8) 1u : (uint8) 0u);
2429:Generated_Source\PSoC5/USBFS_1.c ****     }
2430:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (USBFS_1_VBUS_MONITORING_ENABLE) */
2431:Generated_Source\PSoC5/USBFS_1.c **** 
2432:Generated_Source\PSoC5/USBFS_1.c **** 
2433:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2434:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_RWUEnabled
2435:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2436:Generated_Source\PSoC5/USBFS_1.c **** *
2437:Generated_Source\PSoC5/USBFS_1.c **** *  This function returns the current remote wakeup status.
2438:Generated_Source\PSoC5/USBFS_1.c **** *  If the device supports remote wakeup, the application should use this
2439:Generated_Source\PSoC5/USBFS_1.c **** *  function to determine if remote wakeup was enabled by the host. When the
2440:Generated_Source\PSoC5/USBFS_1.c **** *  device is suspended and it determines the conditions to initiate a remote
2441:Generated_Source\PSoC5/USBFS_1.c **** *  wakeup are met, the application should use the USBFS_Force() function to
2442:Generated_Source\PSoC5/USBFS_1.c **** *  force the appropriate J and K states onto the USB bus, signaling a remote
2443:Generated_Source\PSoC5/USBFS_1.c **** *  wakeup.
2444:Generated_Source\PSoC5/USBFS_1.c **** *
2445:Generated_Source\PSoC5/USBFS_1.c **** *
2446:Generated_Source\PSoC5/USBFS_1.c **** * \return
2447:Generated_Source\PSoC5/USBFS_1.c **** *  Returns non-zero value if remote wakeup is enabled and zero otherwise.
2448:Generated_Source\PSoC5/USBFS_1.c **** *
2449:Generated_Source\PSoC5/USBFS_1.c **** * \globalvars
2450:Generated_Source\PSoC5/USBFS_1.c **** *  USBFS_1_deviceStatus - checked to determine remote status
2451:Generated_Source\PSoC5/USBFS_1.c **** *
2452:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2453:Generated_Source\PSoC5/USBFS_1.c **** uint8 USBFS_1_RWUEnabled(void) 
2454:Generated_Source\PSoC5/USBFS_1.c **** {
 1204              		.loc 1 2454 0
 1205              		.cfi_startproc
 1206              		@ args = 0, pretend = 0, frame = 0
 1207              		@ frame_needed = 0, uses_anonymous_args = 0
 1208              		@ link register save eliminated.
 1209              	.LVL90:
2455:Generated_Source\PSoC5/USBFS_1.c ****     uint8 result = USBFS_1_FALSE;
2456:Generated_Source\PSoC5/USBFS_1.c **** 
2457:Generated_Source\PSoC5/USBFS_1.c ****     if (0u != (USBFS_1_deviceStatus & USBFS_1_DEVICE_STATUS_REMOTE_WAKEUP))
 1210              		.loc 1 2457 0
 1211 0000 044B     		ldr	r3, .L100
 1212 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1213 0004 13F0020F 		tst	r3, #2
 1214 0008 01D1     		bne	.L99
2455:Generated_Source\PSoC5/USBFS_1.c ****     uint8 result = USBFS_1_FALSE;
 1215              		.loc 1 2455 0
 1216 000a 0020     		movs	r0, #0
 1217 000c 7047     		bx	lr
 1218              	.L99:
2458:Generated_Source\PSoC5/USBFS_1.c ****     {
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 66


2459:Generated_Source\PSoC5/USBFS_1.c ****         result = USBFS_1_TRUE;
 1219              		.loc 1 2459 0
 1220 000e 0120     		movs	r0, #1
 1221              	.LVL91:
2460:Generated_Source\PSoC5/USBFS_1.c ****     }
2461:Generated_Source\PSoC5/USBFS_1.c **** 
2462:Generated_Source\PSoC5/USBFS_1.c ****     return (result);
2463:Generated_Source\PSoC5/USBFS_1.c **** }
 1222              		.loc 1 2463 0
 1223 0010 7047     		bx	lr
 1224              	.L101:
 1225 0012 00BF     		.align	2
 1226              	.L100:
 1227 0014 00000000 		.word	USBFS_1_deviceStatus
 1228              		.cfi_endproc
 1229              	.LFE18:
 1230              		.size	USBFS_1_RWUEnabled, .-USBFS_1_RWUEnabled
 1231              		.section	.text.USBFS_1_GetDeviceAddress,"ax",%progbits
 1232              		.align	2
 1233              		.global	USBFS_1_GetDeviceAddress
 1234              		.thumb
 1235              		.thumb_func
 1236              		.type	USBFS_1_GetDeviceAddress, %function
 1237              	USBFS_1_GetDeviceAddress:
 1238              	.LFB19:
2464:Generated_Source\PSoC5/USBFS_1.c **** 
2465:Generated_Source\PSoC5/USBFS_1.c **** 
2466:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2467:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_GetDeviceAddress
2468:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2469:Generated_Source\PSoC5/USBFS_1.c **** *
2470:Generated_Source\PSoC5/USBFS_1.c **** *  This function returns the currently assigned address for the USB device.
2471:Generated_Source\PSoC5/USBFS_1.c **** *
2472:Generated_Source\PSoC5/USBFS_1.c **** * \return
2473:Generated_Source\PSoC5/USBFS_1.c **** *  Returns the currently assigned address.
2474:Generated_Source\PSoC5/USBFS_1.c **** *  Returns 0 if the device has not yet been assigned an address.
2475:Generated_Source\PSoC5/USBFS_1.c **** *
2476:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2477:Generated_Source\PSoC5/USBFS_1.c **** uint8 USBFS_1_GetDeviceAddress(void) 
2478:Generated_Source\PSoC5/USBFS_1.c **** {
 1239              		.loc 1 2478 0
 1240              		.cfi_startproc
 1241              		@ args = 0, pretend = 0, frame = 0
 1242              		@ frame_needed = 0, uses_anonymous_args = 0
 1243              		@ link register save eliminated.
2479:Generated_Source\PSoC5/USBFS_1.c ****     return (uint8)(USBFS_1_CR0_REG & USBFS_1_CR0_DEVICE_ADDRESS_MASK);
 1244              		.loc 1 2479 0
 1245 0000 024B     		ldr	r3, .L103
 1246 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
2480:Generated_Source\PSoC5/USBFS_1.c **** }
 1247              		.loc 1 2480 0
 1248 0004 00F07F00 		and	r0, r0, #127
 1249 0008 7047     		bx	lr
 1250              	.L104:
 1251 000a 00BF     		.align	2
 1252              	.L103:
 1253 000c 08600040 		.word	1073766408
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 67


 1254              		.cfi_endproc
 1255              	.LFE19:
 1256              		.size	USBFS_1_GetDeviceAddress, .-USBFS_1_GetDeviceAddress
 1257              		.section	.text.USBFS_1_EnableSofInt,"ax",%progbits
 1258              		.align	2
 1259              		.global	USBFS_1_EnableSofInt
 1260              		.thumb
 1261              		.thumb_func
 1262              		.type	USBFS_1_EnableSofInt, %function
 1263              	USBFS_1_EnableSofInt:
 1264              	.LFB20:
2481:Generated_Source\PSoC5/USBFS_1.c **** 
2482:Generated_Source\PSoC5/USBFS_1.c **** 
2483:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2484:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_EnableSofInt
2485:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2486:Generated_Source\PSoC5/USBFS_1.c **** *
2487:Generated_Source\PSoC5/USBFS_1.c **** *  This function enables interrupt generation when a Start-of-Frame (SOF)
2488:Generated_Source\PSoC5/USBFS_1.c **** *  packet is received from the host.
2489:Generated_Source\PSoC5/USBFS_1.c **** *
2490:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2491:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_EnableSofInt(void) 
2492:Generated_Source\PSoC5/USBFS_1.c **** {
 1265              		.loc 1 2492 0
 1266              		.cfi_startproc
 1267              		@ args = 0, pretend = 0, frame = 0
 1268              		@ frame_needed = 0, uses_anonymous_args = 0
 1269              		@ link register save eliminated.
2493:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
2494:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable SOF interrupt interrupt source. */
2495:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_INTR_SIE_MASK_REG |= (uint32) USBFS_1_INTR_SIE_SOF_INTR;
2496:Generated_Source\PSoC5/USBFS_1.c **** #else
2497:Generated_Source\PSoC5/USBFS_1.c ****     /* Enable SOF interrupt if it is present. */
2498:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_SOF_ISR_ACTIVE)
2499:Generated_Source\PSoC5/USBFS_1.c ****         CyIntEnable(USBFS_1_SOF_VECT_NUM);
 1270              		.loc 1 2499 0
 1271 0000 4FF40012 		mov	r2, #2097152
 1272 0004 014B     		ldr	r3, .L106
 1273 0006 1A60     		str	r2, [r3]
 1274 0008 7047     		bx	lr
 1275              	.L107:
 1276 000a 00BF     		.align	2
 1277              	.L106:
 1278 000c 00E100E0 		.word	-536813312
 1279              		.cfi_endproc
 1280              	.LFE20:
 1281              		.size	USBFS_1_EnableSofInt, .-USBFS_1_EnableSofInt
 1282              		.section	.text.USBFS_1_DisableSofInt,"ax",%progbits
 1283              		.align	2
 1284              		.global	USBFS_1_DisableSofInt
 1285              		.thumb
 1286              		.thumb_func
 1287              		.type	USBFS_1_DisableSofInt, %function
 1288              	USBFS_1_DisableSofInt:
 1289              	.LFB21:
2500:Generated_Source\PSoC5/USBFS_1.c ****     #endif /* (USBFS_1_SOF_ISR_ACTIVE) */
2501:Generated_Source\PSoC5/USBFS_1.c **** #endif /* (CY_PSOC4) */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 68


2502:Generated_Source\PSoC5/USBFS_1.c **** }
2503:Generated_Source\PSoC5/USBFS_1.c **** 
2504:Generated_Source\PSoC5/USBFS_1.c **** 
2505:Generated_Source\PSoC5/USBFS_1.c **** /*******************************************************************************
2506:Generated_Source\PSoC5/USBFS_1.c **** * Function Name: USBFS_1_DisableSofInt
2507:Generated_Source\PSoC5/USBFS_1.c **** ****************************************************************************//**
2508:Generated_Source\PSoC5/USBFS_1.c **** *
2509:Generated_Source\PSoC5/USBFS_1.c **** *  This function disables interrupt generation when a Start-of-Frame (SOF)
2510:Generated_Source\PSoC5/USBFS_1.c **** *  packet is received from the host.
2511:Generated_Source\PSoC5/USBFS_1.c **** *
2512:Generated_Source\PSoC5/USBFS_1.c **** *******************************************************************************/
2513:Generated_Source\PSoC5/USBFS_1.c **** void USBFS_1_DisableSofInt(void) 
2514:Generated_Source\PSoC5/USBFS_1.c **** {
 1290              		.loc 1 2514 0
 1291              		.cfi_startproc
 1292              		@ args = 0, pretend = 0, frame = 0
 1293              		@ frame_needed = 0, uses_anonymous_args = 0
 1294              		@ link register save eliminated.
2515:Generated_Source\PSoC5/USBFS_1.c **** #if (CY_PSOC4)
2516:Generated_Source\PSoC5/USBFS_1.c ****     /* Disable SOF interrupt interrupt source. */
2517:Generated_Source\PSoC5/USBFS_1.c ****     USBFS_1_INTR_SIE_MASK_REG &= (uint32) ~USBFS_1_INTR_SIE_SOF_INTR;
2518:Generated_Source\PSoC5/USBFS_1.c **** #else
2519:Generated_Source\PSoC5/USBFS_1.c ****     /* Disable SOF interrupt if it is present. */
2520:Generated_Source\PSoC5/USBFS_1.c ****     #if (USBFS_1_SOF_ISR_ACTIVE)
2521:Generated_Source\PSoC5/USBFS_1.c ****         CyIntDisable(USBFS_1_SOF_VECT_NUM);
 1295              		.loc 1 2521 0
 1296 0000 4FF40012 		mov	r2, #2097152
 1297 0004 014B     		ldr	r3, .L109
 1298 0006 1A60     		str	r2, [r3]
 1299 0008 7047     		bx	lr
 1300              	.L110:
 1301 000a 00BF     		.align	2
 1302              	.L109:
 1303 000c 80E100E0 		.word	-536813184
 1304              		.cfi_endproc
 1305              	.LFE21:
 1306              		.size	USBFS_1_DisableSofInt, .-USBFS_1_DisableSofInt
 1307              		.global	USBFS_1_initVar
 1308              		.bss
 1309              		.set	.LANCHOR0,. + 0
 1310              		.type	USBFS_1_initVar, %object
 1311              		.size	USBFS_1_initVar, 1
 1312              	USBFS_1_initVar:
 1313 0000 00       		.space	1
 1314              		.text
 1315              	.Letext0:
 1316              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1317              		.file 3 "Generated_Source\\PSoC5\\USBFS_1.h"
 1318              		.file 4 "Generated_Source\\PSoC5\\USBFS_1_pvt.h"
 1319              		.file 5 "Generated_Source\\PSoC5\\CyLib.h"
 1320              		.file 6 "Generated_Source\\PSoC5\\USBFS_1_Dp.h"
 1321              		.section	.debug_info,"",%progbits
 1322              	.Ldebug_info0:
 1323 0000 96090000 		.4byte	0x996
 1324 0004 0400     		.2byte	0x4
 1325 0006 00000000 		.4byte	.Ldebug_abbrev0
 1326 000a 04       		.byte	0x4
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 69


 1327 000b 01       		.uleb128 0x1
 1328 000c D3040000 		.4byte	.LASF100
 1329 0010 0C       		.byte	0xc
 1330 0011 86040000 		.4byte	.LASF101
 1331 0015 10030000 		.4byte	.LASF102
 1332 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1333 001d 00000000 		.4byte	0
 1334 0021 00000000 		.4byte	.Ldebug_line0
 1335 0025 02       		.uleb128 0x2
 1336 0026 01       		.byte	0x1
 1337 0027 06       		.byte	0x6
 1338 0028 B5000000 		.4byte	.LASF0
 1339 002c 02       		.uleb128 0x2
 1340 002d 01       		.byte	0x1
 1341 002e 08       		.byte	0x8
 1342 002f 78040000 		.4byte	.LASF1
 1343 0033 02       		.uleb128 0x2
 1344 0034 02       		.byte	0x2
 1345 0035 05       		.byte	0x5
 1346 0036 A7040000 		.4byte	.LASF2
 1347 003a 02       		.uleb128 0x2
 1348 003b 02       		.byte	0x2
 1349 003c 07       		.byte	0x7
 1350 003d 5B020000 		.4byte	.LASF3
 1351 0041 02       		.uleb128 0x2
 1352 0042 04       		.byte	0x4
 1353 0043 05       		.byte	0x5
 1354 0044 C6000000 		.4byte	.LASF4
 1355 0048 02       		.uleb128 0x2
 1356 0049 04       		.byte	0x4
 1357 004a 07       		.byte	0x7
 1358 004b D0010000 		.4byte	.LASF5
 1359 004f 02       		.uleb128 0x2
 1360 0050 08       		.byte	0x8
 1361 0051 05       		.byte	0x5
 1362 0052 A7000000 		.4byte	.LASF6
 1363 0056 02       		.uleb128 0x2
 1364 0057 08       		.byte	0x8
 1365 0058 07       		.byte	0x7
 1366 0059 54000000 		.4byte	.LASF7
 1367 005d 03       		.uleb128 0x3
 1368 005e 04       		.byte	0x4
 1369 005f 05       		.byte	0x5
 1370 0060 696E7400 		.ascii	"int\000"
 1371 0064 02       		.uleb128 0x2
 1372 0065 04       		.byte	0x4
 1373 0066 07       		.byte	0x7
 1374 0067 97010000 		.4byte	.LASF8
 1375 006b 04       		.uleb128 0x4
 1376 006c F5000000 		.4byte	.LASF9
 1377 0070 02       		.byte	0x2
 1378 0071 9201     		.2byte	0x192
 1379 0073 2C000000 		.4byte	0x2c
 1380 0077 04       		.uleb128 0x4
 1381 0078 00000000 		.4byte	.LASF10
 1382 007c 02       		.byte	0x2
 1383 007d 9301     		.2byte	0x193
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 70


 1384 007f 3A000000 		.4byte	0x3a
 1385 0083 04       		.uleb128 0x4
 1386 0084 47010000 		.4byte	.LASF11
 1387 0088 02       		.byte	0x2
 1388 0089 9401     		.2byte	0x194
 1389 008b 48000000 		.4byte	0x48
 1390 008f 02       		.uleb128 0x2
 1391 0090 04       		.byte	0x4
 1392 0091 04       		.byte	0x4
 1393 0092 12040000 		.4byte	.LASF12
 1394 0096 02       		.uleb128 0x2
 1395 0097 08       		.byte	0x8
 1396 0098 04       		.byte	0x4
 1397 0099 1A010000 		.4byte	.LASF13
 1398 009d 02       		.uleb128 0x2
 1399 009e 01       		.byte	0x1
 1400 009f 08       		.byte	0x8
 1401 00a0 B0050000 		.4byte	.LASF14
 1402 00a4 04       		.uleb128 0x4
 1403 00a5 73040000 		.4byte	.LASF15
 1404 00a9 02       		.byte	0x2
 1405 00aa 3C02     		.2byte	0x23c
 1406 00ac B0000000 		.4byte	0xb0
 1407 00b0 05       		.uleb128 0x5
 1408 00b1 6B000000 		.4byte	0x6b
 1409 00b5 04       		.uleb128 0x4
 1410 00b6 E7020000 		.4byte	.LASF16
 1411 00ba 02       		.byte	0x2
 1412 00bb 3E02     		.2byte	0x23e
 1413 00bd C1000000 		.4byte	0xc1
 1414 00c1 05       		.uleb128 0x5
 1415 00c2 83000000 		.4byte	0x83
 1416 00c6 02       		.uleb128 0x2
 1417 00c7 08       		.byte	0x8
 1418 00c8 04       		.byte	0x4
 1419 00c9 AE030000 		.4byte	.LASF17
 1420 00cd 02       		.uleb128 0x2
 1421 00ce 04       		.byte	0x4
 1422 00cf 07       		.byte	0x7
 1423 00d0 92030000 		.4byte	.LASF18
 1424 00d4 06       		.uleb128 0x6
 1425 00d5 0C       		.byte	0xc
 1426 00d6 03       		.byte	0x3
 1427 00d7 92       		.byte	0x92
 1428 00d8 49010000 		.4byte	0x149
 1429 00dc 07       		.uleb128 0x7
 1430 00dd BA030000 		.4byte	.LASF19
 1431 00e1 03       		.byte	0x3
 1432 00e2 94       		.byte	0x94
 1433 00e3 6B000000 		.4byte	0x6b
 1434 00e7 00       		.byte	0
 1435 00e8 07       		.uleb128 0x7
 1436 00e9 2E040000 		.4byte	.LASF20
 1437 00ed 03       		.byte	0x3
 1438 00ee 95       		.byte	0x95
 1439 00ef 6B000000 		.4byte	0x6b
 1440 00f3 01       		.byte	0x1
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 71


 1441 00f4 07       		.uleb128 0x7
 1442 00f5 ED020000 		.4byte	.LASF21
 1443 00f9 03       		.byte	0x3
 1444 00fa 96       		.byte	0x96
 1445 00fb 6B000000 		.4byte	0x6b
 1446 00ff 02       		.byte	0x2
 1447 0100 07       		.uleb128 0x7
 1448 0101 FB000000 		.4byte	.LASF22
 1449 0105 03       		.byte	0x3
 1450 0106 97       		.byte	0x97
 1451 0107 6B000000 		.4byte	0x6b
 1452 010b 03       		.byte	0x3
 1453 010c 07       		.uleb128 0x7
 1454 010d 81000000 		.4byte	.LASF23
 1455 0111 03       		.byte	0x3
 1456 0112 98       		.byte	0x98
 1457 0113 6B000000 		.4byte	0x6b
 1458 0117 04       		.byte	0x4
 1459 0118 07       		.uleb128 0x7
 1460 0119 5A010000 		.4byte	.LASF24
 1461 011d 03       		.byte	0x3
 1462 011e 99       		.byte	0x99
 1463 011f 6B000000 		.4byte	0x6b
 1464 0123 05       		.byte	0x5
 1465 0124 07       		.uleb128 0x7
 1466 0125 C5050000 		.4byte	.LASF25
 1467 0129 03       		.byte	0x3
 1468 012a 9A       		.byte	0x9a
 1469 012b 77000000 		.4byte	0x77
 1470 012f 06       		.byte	0x6
 1471 0130 07       		.uleb128 0x7
 1472 0131 BA050000 		.4byte	.LASF26
 1473 0135 03       		.byte	0x3
 1474 0136 9B       		.byte	0x9b
 1475 0137 77000000 		.4byte	0x77
 1476 013b 08       		.byte	0x8
 1477 013c 07       		.uleb128 0x7
 1478 013d D6020000 		.4byte	.LASF27
 1479 0141 03       		.byte	0x3
 1480 0142 9C       		.byte	0x9c
 1481 0143 6B000000 		.4byte	0x6b
 1482 0147 0A       		.byte	0xa
 1483 0148 00       		.byte	0
 1484 0149 08       		.uleb128 0x8
 1485 014a 7D020000 		.4byte	.LASF28
 1486 014e 03       		.byte	0x3
 1487 014f 9D       		.byte	0x9d
 1488 0150 D4000000 		.4byte	0xd4
 1489 0154 06       		.uleb128 0x6
 1490 0155 10       		.byte	0x10
 1491 0156 03       		.byte	0x3
 1492 0157 D9       		.byte	0xd9
 1493 0158 8D010000 		.4byte	0x18d
 1494 015c 07       		.uleb128 0x7
 1495 015d E8030000 		.4byte	.LASF29
 1496 0161 03       		.byte	0x3
 1497 0162 DB       		.byte	0xdb
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 72


 1498 0163 6B000000 		.4byte	0x6b
 1499 0167 00       		.byte	0
 1500 0168 07       		.uleb128 0x7
 1501 0169 EF030000 		.4byte	.LASF30
 1502 016d 03       		.byte	0x3
 1503 016e DC       		.byte	0xdc
 1504 016f 6B000000 		.4byte	0x6b
 1505 0173 01       		.byte	0x1
 1506 0174 07       		.uleb128 0x7
 1507 0175 0C040000 		.4byte	.LASF31
 1508 0179 03       		.byte	0x3
 1509 017a DD       		.byte	0xdd
 1510 017b 6B000000 		.4byte	0x6b
 1511 017f 02       		.byte	0x2
 1512 0180 09       		.uleb128 0x9
 1513 0181 67617000 		.ascii	"gap\000"
 1514 0185 03       		.byte	0x3
 1515 0186 DE       		.byte	0xde
 1516 0187 8D010000 		.4byte	0x18d
 1517 018b 03       		.byte	0x3
 1518 018c 00       		.byte	0
 1519 018d 0A       		.uleb128 0xa
 1520 018e 6B000000 		.4byte	0x6b
 1521 0192 9D010000 		.4byte	0x19d
 1522 0196 0B       		.uleb128 0xb
 1523 0197 CD000000 		.4byte	0xcd
 1524 019b 0C       		.byte	0xc
 1525 019c 00       		.byte	0
 1526 019d 08       		.uleb128 0x8
 1527 019e F6030000 		.4byte	.LASF32
 1528 01a2 03       		.byte	0x3
 1529 01a3 DF       		.byte	0xdf
 1530 01a4 54010000 		.4byte	0x154
 1531 01a8 06       		.uleb128 0x6
 1532 01a9 10       		.byte	0x10
 1533 01aa 03       		.byte	0x3
 1534 01ab EB       		.byte	0xeb
 1535 01ac 29020000 		.4byte	0x229
 1536 01b0 07       		.uleb128 0x7
 1537 01b1 86000000 		.4byte	.LASF33
 1538 01b5 03       		.byte	0x3
 1539 01b6 ED       		.byte	0xed
 1540 01b7 6B000000 		.4byte	0x6b
 1541 01bb 00       		.byte	0
 1542 01bc 07       		.uleb128 0x7
 1543 01bd 6B060000 		.4byte	.LASF34
 1544 01c1 03       		.byte	0x3
 1545 01c2 EE       		.byte	0xee
 1546 01c3 6B000000 		.4byte	0x6b
 1547 01c7 01       		.byte	0x1
 1548 01c8 07       		.uleb128 0x7
 1549 01c9 42010000 		.4byte	.LASF35
 1550 01cd 03       		.byte	0x3
 1551 01ce EF       		.byte	0xef
 1552 01cf 6B000000 		.4byte	0x6b
 1553 01d3 02       		.byte	0x2
 1554 01d4 07       		.uleb128 0x7
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 73


 1555 01d5 79010000 		.4byte	.LASF36
 1556 01d9 03       		.byte	0x3
 1557 01da F0       		.byte	0xf0
 1558 01db 6B000000 		.4byte	0x6b
 1559 01df 03       		.byte	0x3
 1560 01e0 07       		.uleb128 0x7
 1561 01e1 04010000 		.4byte	.LASF37
 1562 01e5 03       		.byte	0x3
 1563 01e6 F1       		.byte	0xf1
 1564 01e7 6B000000 		.4byte	0x6b
 1565 01eb 04       		.byte	0x4
 1566 01ec 07       		.uleb128 0x7
 1567 01ed 61050000 		.4byte	.LASF38
 1568 01f1 03       		.byte	0x3
 1569 01f2 F2       		.byte	0xf2
 1570 01f3 6B000000 		.4byte	0x6b
 1571 01f7 05       		.byte	0x5
 1572 01f8 07       		.uleb128 0x7
 1573 01f9 CE040000 		.4byte	.LASF39
 1574 01fd 03       		.byte	0x3
 1575 01fe F3       		.byte	0xf3
 1576 01ff 6B000000 		.4byte	0x6b
 1577 0203 06       		.byte	0x6
 1578 0204 07       		.uleb128 0x7
 1579 0205 E0030000 		.4byte	.LASF40
 1580 0209 03       		.byte	0x3
 1581 020a F4       		.byte	0xf4
 1582 020b 6B000000 		.4byte	0x6b
 1583 020f 07       		.byte	0x7
 1584 0210 07       		.uleb128 0x7
 1585 0211 51060000 		.4byte	.LASF41
 1586 0215 03       		.byte	0x3
 1587 0216 F5       		.byte	0xf5
 1588 0217 6B000000 		.4byte	0x6b
 1589 021b 08       		.byte	0x8
 1590 021c 09       		.uleb128 0x9
 1591 021d 67617000 		.ascii	"gap\000"
 1592 0221 03       		.byte	0x3
 1593 0222 F6       		.byte	0xf6
 1594 0223 29020000 		.4byte	0x229
 1595 0227 09       		.byte	0x9
 1596 0228 00       		.byte	0
 1597 0229 0A       		.uleb128 0xa
 1598 022a 6B000000 		.4byte	0x6b
 1599 022e 39020000 		.4byte	0x239
 1600 0232 0B       		.uleb128 0xb
 1601 0233 CD000000 		.4byte	0xcd
 1602 0237 06       		.byte	0x6
 1603 0238 00       		.byte	0
 1604 0239 08       		.uleb128 0x8
 1605 023a BA010000 		.4byte	.LASF42
 1606 023e 03       		.byte	0x3
 1607 023f F7       		.byte	0xf7
 1608 0240 A8010000 		.4byte	0x1a8
 1609 0244 0C       		.uleb128 0xc
 1610 0245 90       		.byte	0x90
 1611 0246 03       		.byte	0x3
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 74


 1612 0247 1301     		.2byte	0x113
 1613 0249 5B020000 		.4byte	0x25b
 1614 024d 0D       		.uleb128 0xd
 1615 024e 54010000 		.4byte	.LASF43
 1616 0252 03       		.byte	0x3
 1617 0253 1501     		.2byte	0x115
 1618 0255 5B020000 		.4byte	0x25b
 1619 0259 00       		.byte	0
 1620 025a 00       		.byte	0
 1621 025b 0A       		.uleb128 0xa
 1622 025c 9D010000 		.4byte	0x19d
 1623 0260 6B020000 		.4byte	0x26b
 1624 0264 0B       		.uleb128 0xb
 1625 0265 CD000000 		.4byte	0xcd
 1626 0269 08       		.byte	0x8
 1627 026a 00       		.byte	0
 1628 026b 04       		.uleb128 0x4
 1629 026c 06020000 		.4byte	.LASF44
 1630 0270 03       		.byte	0x3
 1631 0271 1601     		.2byte	0x116
 1632 0273 44020000 		.4byte	0x244
 1633 0277 0C       		.uleb128 0xc
 1634 0278 90       		.byte	0x90
 1635 0279 03       		.byte	0x3
 1636 027a 1901     		.2byte	0x119
 1637 027c 8E020000 		.4byte	0x28e
 1638 0280 0D       		.uleb128 0xd
 1639 0281 D0020000 		.4byte	.LASF45
 1640 0285 03       		.byte	0x3
 1641 0286 1B01     		.2byte	0x11b
 1642 0288 8E020000 		.4byte	0x28e
 1643 028c 00       		.byte	0
 1644 028d 00       		.byte	0
 1645 028e 0A       		.uleb128 0xa
 1646 028f 39020000 		.4byte	0x239
 1647 0293 9E020000 		.4byte	0x29e
 1648 0297 0B       		.uleb128 0xb
 1649 0298 CD000000 		.4byte	0xcd
 1650 029c 08       		.byte	0x8
 1651 029d 00       		.byte	0
 1652 029e 04       		.uleb128 0x4
 1653 029f 1D020000 		.4byte	.LASF46
 1654 02a3 03       		.byte	0x3
 1655 02a4 1C01     		.2byte	0x11c
 1656 02a6 77020000 		.4byte	0x277
 1657 02aa 0E       		.uleb128 0xe
 1658 02ab A3050000 		.4byte	.LASF47
 1659 02af 01       		.byte	0x1
 1660 02b0 D3       		.byte	0xd3
 1661 02b1 00000000 		.4byte	.LFB1
 1662 02b5 2C010000 		.4byte	.LFE1-.LFB1
 1663 02b9 01       		.uleb128 0x1
 1664 02ba 9C       		.byte	0x9c
 1665 02bb 3D040000 		.4byte	0x43d
 1666 02bf 0F       		.uleb128 0xf
 1667 02c0 40060000 		.4byte	.LASF51
 1668 02c4 01       		.byte	0x1
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 75


 1669 02c5 FA       		.byte	0xfa
 1670 02c6 6B000000 		.4byte	0x6b
 1671 02ca 00000000 		.4byte	.LLST0
 1672 02ce 10       		.uleb128 0x10
 1673 02cf 06000000 		.4byte	.LVL0
 1674 02d3 4C090000 		.4byte	0x94c
 1675 02d7 11       		.uleb128 0x11
 1676 02d8 3C000000 		.4byte	.LVL2
 1677 02dc 57090000 		.4byte	0x957
 1678 02e0 EA020000 		.4byte	0x2ea
 1679 02e4 12       		.uleb128 0x12
 1680 02e5 01       		.uleb128 0x1
 1681 02e6 50       		.byte	0x50
 1682 02e7 01       		.uleb128 0x1
 1683 02e8 30       		.byte	0x30
 1684 02e9 00       		.byte	0
 1685 02ea 11       		.uleb128 0x11
 1686 02eb 5C000000 		.4byte	.LVL3
 1687 02ef 57090000 		.4byte	0x957
 1688 02f3 FE020000 		.4byte	0x2fe
 1689 02f7 12       		.uleb128 0x12
 1690 02f8 01       		.uleb128 0x1
 1691 02f9 50       		.byte	0x50
 1692 02fa 02       		.uleb128 0x2
 1693 02fb 76       		.byte	0x76
 1694 02fc 00       		.sleb128 0
 1695 02fd 00       		.byte	0
 1696 02fe 11       		.uleb128 0x11
 1697 02ff 62000000 		.4byte	.LVL4
 1698 0303 57090000 		.4byte	0x957
 1699 0307 12030000 		.4byte	0x312
 1700 030b 12       		.uleb128 0x12
 1701 030c 01       		.uleb128 0x1
 1702 030d 50       		.byte	0x50
 1703 030e 02       		.uleb128 0x2
 1704 030f 08       		.byte	0x8
 1705 0310 28       		.byte	0x28
 1706 0311 00       		.byte	0
 1707 0312 11       		.uleb128 0x11
 1708 0313 80000000 		.4byte	.LVL5
 1709 0317 57090000 		.4byte	0x957
 1710 031b 26030000 		.4byte	0x326
 1711 031f 12       		.uleb128 0x12
 1712 0320 01       		.uleb128 0x1
 1713 0321 50       		.byte	0x50
 1714 0322 02       		.uleb128 0x2
 1715 0323 75       		.byte	0x75
 1716 0324 00       		.sleb128 0
 1717 0325 00       		.byte	0
 1718 0326 11       		.uleb128 0x11
 1719 0327 98000000 		.4byte	.LVL6
 1720 032b 62090000 		.4byte	0x962
 1721 032f 3A030000 		.4byte	0x33a
 1722 0333 12       		.uleb128 0x12
 1723 0334 01       		.uleb128 0x1
 1724 0335 50       		.byte	0x50
 1725 0336 02       		.uleb128 0x2
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 76


 1726 0337 77       		.byte	0x77
 1727 0338 00       		.sleb128 0
 1728 0339 00       		.byte	0
 1729 033a 11       		.uleb128 0x11
 1730 033b A0000000 		.4byte	.LVL7
 1731 033f 6D090000 		.4byte	0x96d
 1732 0343 52030000 		.4byte	0x352
 1733 0347 12       		.uleb128 0x12
 1734 0348 01       		.uleb128 0x1
 1735 0349 50       		.byte	0x50
 1736 034a 01       		.uleb128 0x1
 1737 034b 47       		.byte	0x47
 1738 034c 12       		.uleb128 0x12
 1739 034d 01       		.uleb128 0x1
 1740 034e 51       		.byte	0x51
 1741 034f 01       		.uleb128 0x1
 1742 0350 37       		.byte	0x37
 1743 0351 00       		.byte	0
 1744 0352 11       		.uleb128 0x11
 1745 0353 A8000000 		.4byte	.LVL8
 1746 0357 78090000 		.4byte	0x978
 1747 035b 65030000 		.4byte	0x365
 1748 035f 12       		.uleb128 0x12
 1749 0360 01       		.uleb128 0x1
 1750 0361 50       		.byte	0x50
 1751 0362 01       		.uleb128 0x1
 1752 0363 47       		.byte	0x47
 1753 0364 00       		.byte	0
 1754 0365 11       		.uleb128 0x11
 1755 0366 B0000000 		.4byte	.LVL9
 1756 036a 6D090000 		.4byte	0x96d
 1757 036e 7D030000 		.4byte	0x37d
 1758 0372 12       		.uleb128 0x12
 1759 0373 01       		.uleb128 0x1
 1760 0374 50       		.byte	0x50
 1761 0375 01       		.uleb128 0x1
 1762 0376 48       		.byte	0x48
 1763 0377 12       		.uleb128 0x12
 1764 0378 01       		.uleb128 0x1
 1765 0379 51       		.byte	0x51
 1766 037a 01       		.uleb128 0x1
 1767 037b 37       		.byte	0x37
 1768 037c 00       		.byte	0
 1769 037d 11       		.uleb128 0x11
 1770 037e B8000000 		.4byte	.LVL10
 1771 0382 78090000 		.4byte	0x978
 1772 0386 90030000 		.4byte	0x390
 1773 038a 12       		.uleb128 0x12
 1774 038b 01       		.uleb128 0x1
 1775 038c 50       		.byte	0x50
 1776 038d 01       		.uleb128 0x1
 1777 038e 48       		.byte	0x48
 1778 038f 00       		.byte	0
 1779 0390 11       		.uleb128 0x11
 1780 0391 C0000000 		.4byte	.LVL11
 1781 0395 6D090000 		.4byte	0x96d
 1782 0399 A8030000 		.4byte	0x3a8
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 77


 1783 039d 12       		.uleb128 0x12
 1784 039e 01       		.uleb128 0x1
 1785 039f 50       		.byte	0x50
 1786 03a0 01       		.uleb128 0x1
 1787 03a1 45       		.byte	0x45
 1788 03a2 12       		.uleb128 0x12
 1789 03a3 01       		.uleb128 0x1
 1790 03a4 51       		.byte	0x51
 1791 03a5 01       		.uleb128 0x1
 1792 03a6 37       		.byte	0x37
 1793 03a7 00       		.byte	0
 1794 03a8 11       		.uleb128 0x11
 1795 03a9 C8000000 		.4byte	.LVL12
 1796 03ad 78090000 		.4byte	0x978
 1797 03b1 BB030000 		.4byte	0x3bb
 1798 03b5 12       		.uleb128 0x12
 1799 03b6 01       		.uleb128 0x1
 1800 03b7 50       		.byte	0x50
 1801 03b8 01       		.uleb128 0x1
 1802 03b9 45       		.byte	0x45
 1803 03ba 00       		.byte	0
 1804 03bb 11       		.uleb128 0x11
 1805 03bc D0000000 		.4byte	.LVL13
 1806 03c0 6D090000 		.4byte	0x96d
 1807 03c4 D4030000 		.4byte	0x3d4
 1808 03c8 12       		.uleb128 0x12
 1809 03c9 01       		.uleb128 0x1
 1810 03ca 50       		.byte	0x50
 1811 03cb 02       		.uleb128 0x2
 1812 03cc 76       		.byte	0x76
 1813 03cd 00       		.sleb128 0
 1814 03ce 12       		.uleb128 0x12
 1815 03cf 01       		.uleb128 0x1
 1816 03d0 51       		.byte	0x51
 1817 03d1 01       		.uleb128 0x1
 1818 03d2 37       		.byte	0x37
 1819 03d3 00       		.byte	0
 1820 03d4 11       		.uleb128 0x11
 1821 03d5 D8000000 		.4byte	.LVL14
 1822 03d9 78090000 		.4byte	0x978
 1823 03dd E8030000 		.4byte	0x3e8
 1824 03e1 12       		.uleb128 0x12
 1825 03e2 01       		.uleb128 0x1
 1826 03e3 50       		.byte	0x50
 1827 03e4 02       		.uleb128 0x2
 1828 03e5 76       		.byte	0x76
 1829 03e6 00       		.sleb128 0
 1830 03e7 00       		.byte	0
 1831 03e8 11       		.uleb128 0x11
 1832 03e9 E0000000 		.4byte	.LVL15
 1833 03ed 6D090000 		.4byte	0x96d
 1834 03f1 01040000 		.4byte	0x401
 1835 03f5 12       		.uleb128 0x12
 1836 03f6 01       		.uleb128 0x1
 1837 03f7 50       		.byte	0x50
 1838 03f8 02       		.uleb128 0x2
 1839 03f9 75       		.byte	0x75
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 78


 1840 03fa 00       		.sleb128 0
 1841 03fb 12       		.uleb128 0x12
 1842 03fc 01       		.uleb128 0x1
 1843 03fd 51       		.byte	0x51
 1844 03fe 01       		.uleb128 0x1
 1845 03ff 37       		.byte	0x37
 1846 0400 00       		.byte	0
 1847 0401 11       		.uleb128 0x11
 1848 0402 E8000000 		.4byte	.LVL16
 1849 0406 78090000 		.4byte	0x978
 1850 040a 15040000 		.4byte	0x415
 1851 040e 12       		.uleb128 0x12
 1852 040f 01       		.uleb128 0x1
 1853 0410 50       		.byte	0x50
 1854 0411 02       		.uleb128 0x2
 1855 0412 75       		.byte	0x75
 1856 0413 00       		.sleb128 0
 1857 0414 00       		.byte	0
 1858 0415 11       		.uleb128 0x11
 1859 0416 F0000000 		.4byte	.LVL17
 1860 041a 6D090000 		.4byte	0x96d
 1861 041e 2D040000 		.4byte	0x42d
 1862 0422 12       		.uleb128 0x12
 1863 0423 01       		.uleb128 0x1
 1864 0424 50       		.byte	0x50
 1865 0425 01       		.uleb128 0x1
 1866 0426 3C       		.byte	0x3c
 1867 0427 12       		.uleb128 0x12
 1868 0428 01       		.uleb128 0x1
 1869 0429 51       		.byte	0x51
 1870 042a 01       		.uleb128 0x1
 1871 042b 37       		.byte	0x37
 1872 042c 00       		.byte	0
 1873 042d 13       		.uleb128 0x13
 1874 042e F8000000 		.4byte	.LVL18
 1875 0432 78090000 		.4byte	0x978
 1876 0436 12       		.uleb128 0x12
 1877 0437 01       		.uleb128 0x1
 1878 0438 50       		.byte	0x50
 1879 0439 01       		.uleb128 0x1
 1880 043a 3C       		.byte	0x3c
 1881 043b 00       		.byte	0
 1882 043c 00       		.byte	0
 1883 043d 14       		.uleb128 0x14
 1884 043e 8D050000 		.4byte	.LASF48
 1885 0442 01       		.byte	0x1
 1886 0443 CC01     		.2byte	0x1cc
 1887 0445 00000000 		.4byte	.LFB2
 1888 0449 CC000000 		.4byte	.LFE2-.LFB2
 1889 044d 01       		.uleb128 0x1
 1890 044e 9C       		.byte	0x9c
 1891 044f 91040000 		.4byte	0x491
 1892 0453 15       		.uleb128 0x15
 1893 0454 A0000000 		.4byte	.LASF49
 1894 0458 01       		.byte	0x1
 1895 0459 CC01     		.2byte	0x1cc
 1896 045b 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 79


 1897 045f 13000000 		.4byte	.LLST1
 1898 0463 15       		.uleb128 0x15
 1899 0464 B5050000 		.4byte	.LASF50
 1900 0468 01       		.byte	0x1
 1901 0469 CC01     		.2byte	0x1cc
 1902 046b 6B000000 		.4byte	0x6b
 1903 046f 34000000 		.4byte	.LLST2
 1904 0473 16       		.uleb128 0x16
 1905 0474 6900     		.ascii	"i\000"
 1906 0476 01       		.byte	0x1
 1907 0477 D301     		.2byte	0x1d3
 1908 0479 6B000000 		.4byte	0x6b
 1909 047d 55000000 		.4byte	.LLST3
 1910 0481 13       		.uleb128 0x13
 1911 0482 8E000000 		.4byte	.LVL27
 1912 0486 83090000 		.4byte	0x983
 1913 048a 12       		.uleb128 0x12
 1914 048b 01       		.uleb128 0x1
 1915 048c 50       		.byte	0x50
 1916 048d 01       		.uleb128 0x1
 1917 048e 31       		.byte	0x31
 1918 048f 00       		.byte	0
 1919 0490 00       		.byte	0
 1920 0491 0E       		.uleb128 0xe
 1921 0492 4D020000 		.4byte	.LASF52
 1922 0496 01       		.byte	0x1
 1923 0497 BA       		.byte	0xba
 1924 0498 00000000 		.4byte	.LFB0
 1925 049c 24000000 		.4byte	.LFE0-.LFB0
 1926 04a0 01       		.uleb128 0x1
 1927 04a1 9C       		.byte	0x9c
 1928 04a2 E4040000 		.4byte	0x4e4
 1929 04a6 17       		.uleb128 0x17
 1930 04a7 A0000000 		.4byte	.LASF49
 1931 04ab 01       		.byte	0x1
 1932 04ac BA       		.byte	0xba
 1933 04ad 6B000000 		.4byte	0x6b
 1934 04b1 7F000000 		.4byte	.LLST4
 1935 04b5 17       		.uleb128 0x17
 1936 04b6 B5050000 		.4byte	.LASF50
 1937 04ba 01       		.byte	0x1
 1938 04bb BA       		.byte	0xba
 1939 04bc 6B000000 		.4byte	0x6b
 1940 04c0 A0000000 		.4byte	.LLST5
 1941 04c4 10       		.uleb128 0x10
 1942 04c5 10000000 		.4byte	.LVL29
 1943 04c9 AA020000 		.4byte	0x2aa
 1944 04cd 13       		.uleb128 0x13
 1945 04ce 1E000000 		.4byte	.LVL30
 1946 04d2 3D040000 		.4byte	0x43d
 1947 04d6 12       		.uleb128 0x12
 1948 04d7 01       		.uleb128 0x1
 1949 04d8 50       		.byte	0x50
 1950 04d9 02       		.uleb128 0x2
 1951 04da 74       		.byte	0x74
 1952 04db 00       		.sleb128 0
 1953 04dc 12       		.uleb128 0x12
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 80


 1954 04dd 01       		.uleb128 0x1
 1955 04de 51       		.byte	0x51
 1956 04df 02       		.uleb128 0x2
 1957 04e0 75       		.byte	0x75
 1958 04e1 00       		.sleb128 0
 1959 04e2 00       		.byte	0
 1960 04e3 00       		.byte	0
 1961 04e4 14       		.uleb128 0x14
 1962 04e5 A6060000 		.4byte	.LASF53
 1963 04e9 01       		.byte	0x1
 1964 04ea 9F02     		.2byte	0x29f
 1965 04ec 00000000 		.4byte	.LFB3
 1966 04f0 64000000 		.4byte	.LFE3-.LFB3
 1967 04f4 01       		.uleb128 0x1
 1968 04f5 9C       		.byte	0x9c
 1969 04f6 09050000 		.4byte	0x509
 1970 04fa 16       		.uleb128 0x16
 1971 04fb 6900     		.ascii	"i\000"
 1972 04fd 01       		.byte	0x1
 1973 04fe A502     		.2byte	0x2a5
 1974 0500 6B000000 		.4byte	0x6b
 1975 0504 C1000000 		.4byte	.LLST6
 1976 0508 00       		.byte	0
 1977 0509 14       		.uleb128 0x14
 1978 050a E2010000 		.4byte	.LASF54
 1979 050e 01       		.byte	0x1
 1980 050f D902     		.2byte	0x2d9
 1981 0511 00000000 		.4byte	.LFB4
 1982 0515 B4000000 		.4byte	.LFE4-.LFB4
 1983 0519 01       		.uleb128 0x1
 1984 051a 9C       		.byte	0x9c
 1985 051b 4B050000 		.4byte	0x54b
 1986 051f 18       		.uleb128 0x18
 1987 0520 40060000 		.4byte	.LASF51
 1988 0524 01       		.byte	0x1
 1989 0525 DB02     		.2byte	0x2db
 1990 0527 6B000000 		.4byte	0x6b
 1991 052b EB000000 		.4byte	.LLST7
 1992 052f 10       		.uleb128 0x10
 1993 0530 06000000 		.4byte	.LVL36
 1994 0534 4C090000 		.4byte	0x94c
 1995 0538 10       		.uleb128 0x10
 1996 0539 48000000 		.4byte	.LVL37
 1997 053d 62090000 		.4byte	0x962
 1998 0541 10       		.uleb128 0x10
 1999 0542 68000000 		.4byte	.LVL38
 2000 0546 8E090000 		.4byte	0x98e
 2001 054a 00       		.byte	0
 2002 054b 19       		.uleb128 0x19
 2003 054c 2E000000 		.4byte	.LASF56
 2004 0550 01       		.byte	0x1
 2005 0551 5103     		.2byte	0x351
 2006 0553 6B000000 		.4byte	0x6b
 2007 0557 00000000 		.4byte	.LFB5
 2008 055b 20000000 		.4byte	.LFE5-.LFB5
 2009 055f 01       		.uleb128 0x1
 2010 0560 9C       		.byte	0x9c
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 81


 2011 0561 76050000 		.4byte	0x576
 2012 0565 18       		.uleb128 0x18
 2013 0566 E0020000 		.4byte	.LASF55
 2014 056a 01       		.byte	0x1
 2015 056b 5303     		.2byte	0x353
 2016 056d 6B000000 		.4byte	0x6b
 2017 0571 FE000000 		.4byte	.LLST8
 2018 0575 00       		.byte	0
 2019 0576 1A       		.uleb128 0x1a
 2020 0577 F7020000 		.4byte	.LASF77
 2021 057b 01       		.byte	0x1
 2022 057c 6803     		.2byte	0x368
 2023 057e 6B000000 		.4byte	0x6b
 2024 0582 00000000 		.4byte	.LFB6
 2025 0586 0C000000 		.4byte	.LFE6-.LFB6
 2026 058a 01       		.uleb128 0x1
 2027 058b 9C       		.byte	0x9c
 2028 058c 19       		.uleb128 0x19
 2029 058d C1030000 		.4byte	.LASF57
 2030 0591 01       		.byte	0x1
 2031 0592 8203     		.2byte	0x382
 2032 0594 6B000000 		.4byte	0x6b
 2033 0598 00000000 		.4byte	.LFB7
 2034 059c 20000000 		.4byte	.LFE7-.LFB7
 2035 05a0 01       		.uleb128 0x1
 2036 05a1 9C       		.byte	0x9c
 2037 05a2 B7050000 		.4byte	0x5b7
 2038 05a6 16       		.uleb128 0x16
 2039 05a7 72657300 		.ascii	"res\000"
 2040 05ab 01       		.byte	0x1
 2041 05ac 8403     		.2byte	0x384
 2042 05ae 6B000000 		.4byte	0x6b
 2043 05b2 11010000 		.4byte	.LLST9
 2044 05b6 00       		.byte	0
 2045 05b7 19       		.uleb128 0x19
 2046 05b8 8A060000 		.4byte	.LASF58
 2047 05bc 01       		.byte	0x1
 2048 05bd 9F03     		.2byte	0x39f
 2049 05bf 6B000000 		.4byte	0x6b
 2050 05c3 00000000 		.4byte	.LFB8
 2051 05c7 0C000000 		.4byte	.LFE8-.LFB8
 2052 05cb 01       		.uleb128 0x1
 2053 05cc 9C       		.byte	0x9c
 2054 05cd E2050000 		.4byte	0x5e2
 2055 05d1 15       		.uleb128 0x15
 2056 05d2 D0050000 		.4byte	.LASF59
 2057 05d6 01       		.byte	0x1
 2058 05d7 9F03     		.2byte	0x39f
 2059 05d9 6B000000 		.4byte	0x6b
 2060 05dd 47010000 		.4byte	.LLST10
 2061 05e1 00       		.byte	0
 2062 05e2 19       		.uleb128 0x19
 2063 05e3 9B030000 		.4byte	.LASF60
 2064 05e7 01       		.byte	0x1
 2065 05e8 BF03     		.2byte	0x3bf
 2066 05ea 6B000000 		.4byte	0x6b
 2067 05ee 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 82


 2068 05f2 14000000 		.4byte	.LFE9-.LFB9
 2069 05f6 01       		.uleb128 0x1
 2070 05f7 9C       		.byte	0x9c
 2071 05f8 0D060000 		.4byte	0x60d
 2072 05fc 15       		.uleb128 0x15
 2073 05fd 97000000 		.4byte	.LASF61
 2074 0601 01       		.byte	0x1
 2075 0602 BF03     		.2byte	0x3bf
 2076 0604 6B000000 		.4byte	0x6b
 2077 0608 68010000 		.4byte	.LLST11
 2078 060c 00       		.byte	0
 2079 060d 19       		.uleb128 0x19
 2080 060e 60040000 		.4byte	.LASF62
 2081 0612 01       		.byte	0x1
 2082 0613 D603     		.2byte	0x3d6
 2083 0615 77000000 		.4byte	0x77
 2084 0619 00000000 		.4byte	.LFB10
 2085 061d 28000000 		.4byte	.LFE10-.LFB10
 2086 0621 01       		.uleb128 0x1
 2087 0622 9C       		.byte	0x9c
 2088 0623 48060000 		.4byte	0x648
 2089 0627 15       		.uleb128 0x15
 2090 0628 97000000 		.4byte	.LASF61
 2091 062c 01       		.byte	0x1
 2092 062d D603     		.2byte	0x3d6
 2093 062f 6B000000 		.4byte	0x6b
 2094 0633 89010000 		.4byte	.LLST12
 2095 0637 18       		.uleb128 0x18
 2096 0638 C1000000 		.4byte	.LASF63
 2097 063c 01       		.byte	0x1
 2098 063d D803     		.2byte	0x3d8
 2099 063f 77000000 		.4byte	0x77
 2100 0643 C3010000 		.4byte	.LLST13
 2101 0647 00       		.byte	0
 2102 0648 14       		.uleb128 0x14
 2103 0649 07000000 		.4byte	.LASF64
 2104 064d 01       		.byte	0x1
 2105 064e 3E05     		.2byte	0x53e
 2106 0650 00000000 		.4byte	.LFB11
 2107 0654 94000000 		.4byte	.LFE11-.LFB11
 2108 0658 01       		.uleb128 0x1
 2109 0659 9C       		.byte	0x9c
 2110 065a A1060000 		.4byte	0x6a1
 2111 065e 15       		.uleb128 0x15
 2112 065f 97000000 		.4byte	.LASF61
 2113 0663 01       		.byte	0x1
 2114 0664 3E05     		.2byte	0x53e
 2115 0666 6B000000 		.4byte	0x6b
 2116 066a 11020000 		.4byte	.LLST14
 2117 066e 1B       		.uleb128 0x1b
 2118 066f 4E010000 		.4byte	.LASF65
 2119 0673 01       		.byte	0x1
 2120 0674 3E05     		.2byte	0x53e
 2121 0676 A1060000 		.4byte	0x6a1
 2122 067a 01       		.uleb128 0x1
 2123 067b 51       		.byte	0x51
 2124 067c 15       		.uleb128 0x15
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 83


 2125 067d 39060000 		.4byte	.LASF66
 2126 0681 01       		.byte	0x1
 2127 0682 3E05     		.2byte	0x53e
 2128 0684 77000000 		.4byte	0x77
 2129 0688 32020000 		.4byte	.LLST15
 2130 068c 1C       		.uleb128 0x1c
 2131 068d 00000000 		.4byte	.Ldebug_ranges0+0
 2132 0691 16       		.uleb128 0x16
 2133 0692 6900     		.ascii	"i\000"
 2134 0694 01       		.byte	0x1
 2135 0695 5305     		.2byte	0x553
 2136 0697 77000000 		.4byte	0x77
 2137 069b 5E020000 		.4byte	.LLST16
 2138 069f 00       		.byte	0
 2139 06a0 00       		.byte	0
 2140 06a1 1D       		.uleb128 0x1d
 2141 06a2 04       		.byte	0x4
 2142 06a3 A7060000 		.4byte	0x6a7
 2143 06a7 1E       		.uleb128 0x1e
 2144 06a8 6B000000 		.4byte	0x6b
 2145 06ac 14       		.uleb128 0x14
 2146 06ad AB020000 		.4byte	.LASF67
 2147 06b1 01       		.byte	0x1
 2148 06b2 E408     		.2byte	0x8e4
 2149 06b4 00000000 		.4byte	.LFB13
 2150 06b8 2C000000 		.4byte	.LFE13-.LFB13
 2151 06bc 01       		.uleb128 0x1
 2152 06bd 9C       		.byte	0x9c
 2153 06be D3060000 		.4byte	0x6d3
 2154 06c2 15       		.uleb128 0x15
 2155 06c3 97000000 		.4byte	.LASF61
 2156 06c7 01       		.byte	0x1
 2157 06c8 E408     		.2byte	0x8e4
 2158 06ca 6B000000 		.4byte	0x6b
 2159 06ce 87020000 		.4byte	.LLST17
 2160 06d2 00       		.byte	0
 2161 06d3 19       		.uleb128 0x19
 2162 06d4 E3000000 		.4byte	.LASF68
 2163 06d8 01       		.byte	0x1
 2164 06d9 7506     		.2byte	0x675
 2165 06db 77000000 		.4byte	0x77
 2166 06df 00000000 		.4byte	.LFB12
 2167 06e3 50000000 		.4byte	.LFE12-.LFB12
 2168 06e7 01       		.uleb128 0x1
 2169 06e8 9C       		.byte	0x9c
 2170 06e9 72070000 		.4byte	0x772
 2171 06ed 15       		.uleb128 0x15
 2172 06ee 97000000 		.4byte	.LASF61
 2173 06f2 01       		.byte	0x1
 2174 06f3 7506     		.2byte	0x675
 2175 06f5 6B000000 		.4byte	0x6b
 2176 06f9 A8020000 		.4byte	.LLST18
 2177 06fd 15       		.uleb128 0x15
 2178 06fe 4E010000 		.4byte	.LASF65
 2179 0702 01       		.byte	0x1
 2180 0703 7506     		.2byte	0x675
 2181 0705 72070000 		.4byte	0x772
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 84


 2182 0709 E2020000 		.4byte	.LLST19
 2183 070d 15       		.uleb128 0x15
 2184 070e 39060000 		.4byte	.LASF66
 2185 0712 01       		.byte	0x1
 2186 0713 7506     		.2byte	0x675
 2187 0715 77000000 		.4byte	0x77
 2188 0719 19030000 		.4byte	.LLST20
 2189 071d 1F       		.uleb128 0x1f
 2190 071e 20000000 		.4byte	.LBB4
 2191 0722 14000000 		.4byte	.LBE4-.LBB4
 2192 0726 39070000 		.4byte	0x739
 2193 072a 16       		.uleb128 0x16
 2194 072b 6900     		.ascii	"i\000"
 2195 072d 01       		.byte	0x1
 2196 072e 8206     		.2byte	0x682
 2197 0730 77000000 		.4byte	0x77
 2198 0734 5B030000 		.4byte	.LLST21
 2199 0738 00       		.byte	0
 2200 0739 11       		.uleb128 0x11
 2201 073a 14000000 		.4byte	.LVL71
 2202 073e 0D060000 		.4byte	0x60d
 2203 0742 4D070000 		.4byte	0x74d
 2204 0746 12       		.uleb128 0x12
 2205 0747 01       		.uleb128 0x1
 2206 0748 50       		.byte	0x50
 2207 0749 02       		.uleb128 0x2
 2208 074a 75       		.byte	0x75
 2209 074b 00       		.sleb128 0
 2210 074c 00       		.byte	0
 2211 074d 11       		.uleb128 0x11
 2212 074e 1E000000 		.4byte	.LVL72
 2213 0752 0D060000 		.4byte	0x60d
 2214 0756 61070000 		.4byte	0x761
 2215 075a 12       		.uleb128 0x12
 2216 075b 01       		.uleb128 0x1
 2217 075c 50       		.byte	0x50
 2218 075d 02       		.uleb128 0x2
 2219 075e 75       		.byte	0x75
 2220 075f 00       		.sleb128 0
 2221 0760 00       		.byte	0
 2222 0761 13       		.uleb128 0x13
 2223 0762 3A000000 		.4byte	.LVL77
 2224 0766 AC060000 		.4byte	0x6ac
 2225 076a 12       		.uleb128 0x12
 2226 076b 01       		.uleb128 0x1
 2227 076c 50       		.byte	0x50
 2228 076d 02       		.uleb128 0x2
 2229 076e 75       		.byte	0x75
 2230 076f 00       		.sleb128 0
 2231 0770 00       		.byte	0
 2232 0771 00       		.byte	0
 2233 0772 1D       		.uleb128 0x1d
 2234 0773 04       		.byte	0x4
 2235 0774 6B000000 		.4byte	0x6b
 2236 0778 14       		.uleb128 0x14
 2237 0779 82010000 		.4byte	.LASF69
 2238 077d 01       		.byte	0x1
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 85


 2239 077e FC08     		.2byte	0x8fc
 2240 0780 00000000 		.4byte	.LFB14
 2241 0784 18000000 		.4byte	.LFE14-.LFB14
 2242 0788 01       		.uleb128 0x1
 2243 0789 9C       		.byte	0x9c
 2244 078a 9F070000 		.4byte	0x79f
 2245 078e 15       		.uleb128 0x15
 2246 078f 97000000 		.4byte	.LASF61
 2247 0793 01       		.byte	0x1
 2248 0794 FC08     		.2byte	0x8fc
 2249 0796 6B000000 		.4byte	0x6b
 2250 079a 85030000 		.4byte	.LLST22
 2251 079e 00       		.byte	0
 2252 079f 14       		.uleb128 0x14
 2253 07a0 C0040000 		.4byte	.LASF70
 2254 07a4 01       		.byte	0x1
 2255 07a5 1A09     		.2byte	0x91a
 2256 07a7 00000000 		.4byte	.LFB15
 2257 07ab 0C000000 		.4byte	.LFE15-.LFB15
 2258 07af 01       		.uleb128 0x1
 2259 07b0 9C       		.byte	0x9c
 2260 07b1 C4070000 		.4byte	0x7c4
 2261 07b5 1B       		.uleb128 0x1b
 2262 07b6 69050000 		.4byte	.LASF71
 2263 07ba 01       		.byte	0x1
 2264 07bb 1A09     		.2byte	0x91a
 2265 07bd 6B000000 		.4byte	0x6b
 2266 07c1 01       		.uleb128 0x1
 2267 07c2 50       		.byte	0x50
 2268 07c3 00       		.byte	0
 2269 07c4 19       		.uleb128 0x19
 2270 07c5 18000000 		.4byte	.LASF72
 2271 07c9 01       		.byte	0x1
 2272 07ca 3309     		.2byte	0x933
 2273 07cc 6B000000 		.4byte	0x6b
 2274 07d0 00000000 		.4byte	.LFB16
 2275 07d4 20000000 		.4byte	.LFE16-.LFB16
 2276 07d8 01       		.uleb128 0x1
 2277 07d9 9C       		.byte	0x9c
 2278 07da FE070000 		.4byte	0x7fe
 2279 07de 15       		.uleb128 0x15
 2280 07df 97000000 		.4byte	.LASF61
 2281 07e3 01       		.byte	0x1
 2282 07e4 3309     		.2byte	0x933
 2283 07e6 6B000000 		.4byte	0x6b
 2284 07ea A6030000 		.4byte	.LLST23
 2285 07ee 16       		.uleb128 0x16
 2286 07ef 637200   		.ascii	"cr\000"
 2287 07f2 01       		.byte	0x1
 2288 07f3 3509     		.2byte	0x935
 2289 07f5 6B000000 		.4byte	0x6b
 2290 07f9 E0030000 		.4byte	.LLST24
 2291 07fd 00       		.byte	0
 2292 07fe 14       		.uleb128 0x14
 2293 07ff 94020000 		.4byte	.LASF73
 2294 0803 01       		.byte	0x1
 2295 0804 5C09     		.2byte	0x95c
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 86


 2296 0806 00000000 		.4byte	.LFB17
 2297 080a 20000000 		.4byte	.LFE17-.LFB17
 2298 080e 01       		.uleb128 0x1
 2299 080f 9C       		.byte	0x9c
 2300 0810 23080000 		.4byte	0x823
 2301 0814 1B       		.uleb128 0x1b
 2302 0815 21010000 		.4byte	.LASF74
 2303 0819 01       		.byte	0x1
 2304 081a 5C09     		.2byte	0x95c
 2305 081c 6B000000 		.4byte	0x6b
 2306 0820 01       		.uleb128 0x1
 2307 0821 50       		.byte	0x50
 2308 0822 00       		.byte	0
 2309 0823 19       		.uleb128 0x19
 2310 0824 10060000 		.4byte	.LASF75
 2311 0828 01       		.byte	0x1
 2312 0829 9509     		.2byte	0x995
 2313 082b 6B000000 		.4byte	0x6b
 2314 082f 00000000 		.4byte	.LFB18
 2315 0833 18000000 		.4byte	.LFE18-.LFB18
 2316 0837 01       		.uleb128 0x1
 2317 0838 9C       		.byte	0x9c
 2318 0839 4E080000 		.4byte	0x84e
 2319 083d 18       		.uleb128 0x18
 2320 083e 09010000 		.4byte	.LASF76
 2321 0842 01       		.byte	0x1
 2322 0843 9709     		.2byte	0x997
 2323 0845 6B000000 		.4byte	0x6b
 2324 0849 16040000 		.4byte	.LLST25
 2325 084d 00       		.byte	0
 2326 084e 1A       		.uleb128 0x1a
 2327 084f 34020000 		.4byte	.LASF78
 2328 0853 01       		.byte	0x1
 2329 0854 AD09     		.2byte	0x9ad
 2330 0856 6B000000 		.4byte	0x6b
 2331 085a 00000000 		.4byte	.LFB19
 2332 085e 10000000 		.4byte	.LFE19-.LFB19
 2333 0862 01       		.uleb128 0x1
 2334 0863 9C       		.byte	0x9c
 2335 0864 20       		.uleb128 0x20
 2336 0865 56060000 		.4byte	.LASF79
 2337 0869 01       		.byte	0x1
 2338 086a BB09     		.2byte	0x9bb
 2339 086c 00000000 		.4byte	.LFB20
 2340 0870 10000000 		.4byte	.LFE20-.LFB20
 2341 0874 01       		.uleb128 0x1
 2342 0875 9C       		.byte	0x9c
 2343 0876 20       		.uleb128 0x20
 2344 0877 6B000000 		.4byte	.LASF80
 2345 087b 01       		.byte	0x1
 2346 087c D109     		.2byte	0x9d1
 2347 087e 00000000 		.4byte	.LFB21
 2348 0882 10000000 		.4byte	.LFE21-.LFB21
 2349 0886 01       		.uleb128 0x1
 2350 0887 9C       		.byte	0x9c
 2351 0888 21       		.uleb128 0x21
 2352 0889 44000000 		.4byte	.LASF81
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 87


 2353 088d 01       		.byte	0x1
 2354 088e 28       		.byte	0x28
 2355 088f 6B000000 		.4byte	0x6b
 2356 0893 05       		.uleb128 0x5
 2357 0894 03       		.byte	0x3
 2358 0895 00000000 		.4byte	USBFS_1_initVar
 2359 0899 22       		.uleb128 0x22
 2360 089a B1040000 		.4byte	.LASF82
 2361 089e 03       		.byte	0x3
 2362 089f D702     		.2byte	0x2d7
 2363 08a1 B0000000 		.4byte	0xb0
 2364 08a5 22       		.uleb128 0x22
 2365 08a6 E0050000 		.4byte	.LASF83
 2366 08aa 03       		.byte	0x3
 2367 08ab D802     		.2byte	0x2d8
 2368 08ad B0000000 		.4byte	0xb0
 2369 08b1 22       		.uleb128 0x22
 2370 08b2 A4010000 		.4byte	.LASF84
 2371 08b6 03       		.byte	0x3
 2372 08b7 D902     		.2byte	0x2d9
 2373 08b9 B0000000 		.4byte	0xb0
 2374 08bd 22       		.uleb128 0x22
 2375 08be 70050000 		.4byte	.LASF85
 2376 08c2 03       		.byte	0x3
 2377 08c3 DA02     		.2byte	0x2da
 2378 08c5 B0000000 		.4byte	0xb0
 2379 08c9 22       		.uleb128 0x22
 2380 08ca 2D010000 		.4byte	.LASF86
 2381 08ce 03       		.byte	0x3
 2382 08cf DB02     		.2byte	0x2db
 2383 08d1 B0000000 		.4byte	0xb0
 2384 08d5 0A       		.uleb128 0xa
 2385 08d6 B0000000 		.4byte	0xb0
 2386 08da E5080000 		.4byte	0x8e5
 2387 08de 0B       		.uleb128 0xb
 2388 08df CD000000 		.4byte	0xcd
 2389 08e3 00       		.byte	0
 2390 08e4 00       		.byte	0
 2391 08e5 22       		.uleb128 0x22
 2392 08e6 CF000000 		.4byte	.LASF87
 2393 08ea 03       		.byte	0x3
 2394 08eb E402     		.2byte	0x2e4
 2395 08ed F1080000 		.4byte	0x8f1
 2396 08f1 05       		.uleb128 0x5
 2397 08f2 D5080000 		.4byte	0x8d5
 2398 08f6 23       		.uleb128 0x23
 2399 08f7 61010000 		.4byte	.LASF88
 2400 08fb 04       		.byte	0x4
 2401 08fc 7C       		.byte	0x7c
 2402 08fd B0000000 		.4byte	0xb0
 2403 0901 23       		.uleb128 0x23
 2404 0902 39040000 		.4byte	.LASF89
 2405 0906 04       		.byte	0x4
 2406 0907 7D       		.byte	0x7d
 2407 0908 0C090000 		.4byte	0x90c
 2408 090c 05       		.uleb128 0x5
 2409 090d D5080000 		.4byte	0x8d5
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 88


 2410 0911 23       		.uleb128 0x23
 2411 0912 23060000 		.4byte	.LASF90
 2412 0916 04       		.byte	0x4
 2413 0917 7F       		.byte	0x7f
 2414 0918 B0000000 		.4byte	0xb0
 2415 091c 0A       		.uleb128 0xa
 2416 091d 2C090000 		.4byte	0x92c
 2417 0921 2C090000 		.4byte	0x92c
 2418 0925 0B       		.uleb128 0xb
 2419 0926 CD000000 		.4byte	0xcd
 2420 092a 08       		.byte	0x8
 2421 092b 00       		.byte	0
 2422 092c 05       		.uleb128 0x5
 2423 092d 49010000 		.4byte	0x149
 2424 0931 23       		.uleb128 0x23
 2425 0932 8C000000 		.4byte	.LASF91
 2426 0936 04       		.byte	0x4
 2427 0937 83       		.byte	0x83
 2428 0938 3C090000 		.4byte	0x93c
 2429 093c 05       		.uleb128 0x5
 2430 093d 1C090000 		.4byte	0x91c
 2431 0941 23       		.uleb128 0x23
 2432 0942 73060000 		.4byte	.LASF92
 2433 0946 04       		.byte	0x4
 2434 0947 A5       		.byte	0xa5
 2435 0948 B0000000 		.4byte	0xb0
 2436 094c 24       		.uleb128 0x24
 2437 094d EF010000 		.4byte	.LASF93
 2438 0951 EF010000 		.4byte	.LASF93
 2439 0955 05       		.byte	0x5
 2440 0956 7D       		.byte	0x7d
 2441 0957 24       		.uleb128 0x24
 2442 0958 10010000 		.4byte	.LASF94
 2443 095c 10010000 		.4byte	.LASF94
 2444 0960 05       		.byte	0x5
 2445 0961 77       		.byte	0x77
 2446 0962 24       		.uleb128 0x24
 2447 0963 18040000 		.4byte	.LASF95
 2448 0967 18040000 		.4byte	.LASF95
 2449 096b 05       		.byte	0x5
 2450 096c 7E       		.byte	0x7e
 2451 096d 24       		.uleb128 0x24
 2452 096e BF020000 		.4byte	.LASF96
 2453 0972 BF020000 		.4byte	.LASF96
 2454 0976 05       		.byte	0x5
 2455 0977 8B       		.byte	0x8b
 2456 0978 24       		.uleb128 0x24
 2457 0979 6E020000 		.4byte	.LASF97
 2458 097d 6E020000 		.4byte	.LASF97
 2459 0981 05       		.byte	0x5
 2460 0982 88       		.byte	0x88
 2461 0983 24       		.uleb128 0x24
 2462 0984 52040000 		.4byte	.LASF98
 2463 0988 52040000 		.4byte	.LASF98
 2464 098c 05       		.byte	0x5
 2465 098d 79       		.byte	0x79
 2466 098e 24       		.uleb128 0x24
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 89


 2467 098f F6050000 		.4byte	.LASF99
 2468 0993 F6050000 		.4byte	.LASF99
 2469 0997 06       		.byte	0x6
 2470 0998 2B       		.byte	0x2b
 2471 0999 00       		.byte	0
 2472              		.section	.debug_abbrev,"",%progbits
 2473              	.Ldebug_abbrev0:
 2474 0000 01       		.uleb128 0x1
 2475 0001 11       		.uleb128 0x11
 2476 0002 01       		.byte	0x1
 2477 0003 25       		.uleb128 0x25
 2478 0004 0E       		.uleb128 0xe
 2479 0005 13       		.uleb128 0x13
 2480 0006 0B       		.uleb128 0xb
 2481 0007 03       		.uleb128 0x3
 2482 0008 0E       		.uleb128 0xe
 2483 0009 1B       		.uleb128 0x1b
 2484 000a 0E       		.uleb128 0xe
 2485 000b 55       		.uleb128 0x55
 2486 000c 17       		.uleb128 0x17
 2487 000d 11       		.uleb128 0x11
 2488 000e 01       		.uleb128 0x1
 2489 000f 10       		.uleb128 0x10
 2490 0010 17       		.uleb128 0x17
 2491 0011 00       		.byte	0
 2492 0012 00       		.byte	0
 2493 0013 02       		.uleb128 0x2
 2494 0014 24       		.uleb128 0x24
 2495 0015 00       		.byte	0
 2496 0016 0B       		.uleb128 0xb
 2497 0017 0B       		.uleb128 0xb
 2498 0018 3E       		.uleb128 0x3e
 2499 0019 0B       		.uleb128 0xb
 2500 001a 03       		.uleb128 0x3
 2501 001b 0E       		.uleb128 0xe
 2502 001c 00       		.byte	0
 2503 001d 00       		.byte	0
 2504 001e 03       		.uleb128 0x3
 2505 001f 24       		.uleb128 0x24
 2506 0020 00       		.byte	0
 2507 0021 0B       		.uleb128 0xb
 2508 0022 0B       		.uleb128 0xb
 2509 0023 3E       		.uleb128 0x3e
 2510 0024 0B       		.uleb128 0xb
 2511 0025 03       		.uleb128 0x3
 2512 0026 08       		.uleb128 0x8
 2513 0027 00       		.byte	0
 2514 0028 00       		.byte	0
 2515 0029 04       		.uleb128 0x4
 2516 002a 16       		.uleb128 0x16
 2517 002b 00       		.byte	0
 2518 002c 03       		.uleb128 0x3
 2519 002d 0E       		.uleb128 0xe
 2520 002e 3A       		.uleb128 0x3a
 2521 002f 0B       		.uleb128 0xb
 2522 0030 3B       		.uleb128 0x3b
 2523 0031 05       		.uleb128 0x5
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 90


 2524 0032 49       		.uleb128 0x49
 2525 0033 13       		.uleb128 0x13
 2526 0034 00       		.byte	0
 2527 0035 00       		.byte	0
 2528 0036 05       		.uleb128 0x5
 2529 0037 35       		.uleb128 0x35
 2530 0038 00       		.byte	0
 2531 0039 49       		.uleb128 0x49
 2532 003a 13       		.uleb128 0x13
 2533 003b 00       		.byte	0
 2534 003c 00       		.byte	0
 2535 003d 06       		.uleb128 0x6
 2536 003e 13       		.uleb128 0x13
 2537 003f 01       		.byte	0x1
 2538 0040 0B       		.uleb128 0xb
 2539 0041 0B       		.uleb128 0xb
 2540 0042 3A       		.uleb128 0x3a
 2541 0043 0B       		.uleb128 0xb
 2542 0044 3B       		.uleb128 0x3b
 2543 0045 0B       		.uleb128 0xb
 2544 0046 01       		.uleb128 0x1
 2545 0047 13       		.uleb128 0x13
 2546 0048 00       		.byte	0
 2547 0049 00       		.byte	0
 2548 004a 07       		.uleb128 0x7
 2549 004b 0D       		.uleb128 0xd
 2550 004c 00       		.byte	0
 2551 004d 03       		.uleb128 0x3
 2552 004e 0E       		.uleb128 0xe
 2553 004f 3A       		.uleb128 0x3a
 2554 0050 0B       		.uleb128 0xb
 2555 0051 3B       		.uleb128 0x3b
 2556 0052 0B       		.uleb128 0xb
 2557 0053 49       		.uleb128 0x49
 2558 0054 13       		.uleb128 0x13
 2559 0055 38       		.uleb128 0x38
 2560 0056 0B       		.uleb128 0xb
 2561 0057 00       		.byte	0
 2562 0058 00       		.byte	0
 2563 0059 08       		.uleb128 0x8
 2564 005a 16       		.uleb128 0x16
 2565 005b 00       		.byte	0
 2566 005c 03       		.uleb128 0x3
 2567 005d 0E       		.uleb128 0xe
 2568 005e 3A       		.uleb128 0x3a
 2569 005f 0B       		.uleb128 0xb
 2570 0060 3B       		.uleb128 0x3b
 2571 0061 0B       		.uleb128 0xb
 2572 0062 49       		.uleb128 0x49
 2573 0063 13       		.uleb128 0x13
 2574 0064 00       		.byte	0
 2575 0065 00       		.byte	0
 2576 0066 09       		.uleb128 0x9
 2577 0067 0D       		.uleb128 0xd
 2578 0068 00       		.byte	0
 2579 0069 03       		.uleb128 0x3
 2580 006a 08       		.uleb128 0x8
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 91


 2581 006b 3A       		.uleb128 0x3a
 2582 006c 0B       		.uleb128 0xb
 2583 006d 3B       		.uleb128 0x3b
 2584 006e 0B       		.uleb128 0xb
 2585 006f 49       		.uleb128 0x49
 2586 0070 13       		.uleb128 0x13
 2587 0071 38       		.uleb128 0x38
 2588 0072 0B       		.uleb128 0xb
 2589 0073 00       		.byte	0
 2590 0074 00       		.byte	0
 2591 0075 0A       		.uleb128 0xa
 2592 0076 01       		.uleb128 0x1
 2593 0077 01       		.byte	0x1
 2594 0078 49       		.uleb128 0x49
 2595 0079 13       		.uleb128 0x13
 2596 007a 01       		.uleb128 0x1
 2597 007b 13       		.uleb128 0x13
 2598 007c 00       		.byte	0
 2599 007d 00       		.byte	0
 2600 007e 0B       		.uleb128 0xb
 2601 007f 21       		.uleb128 0x21
 2602 0080 00       		.byte	0
 2603 0081 49       		.uleb128 0x49
 2604 0082 13       		.uleb128 0x13
 2605 0083 2F       		.uleb128 0x2f
 2606 0084 0B       		.uleb128 0xb
 2607 0085 00       		.byte	0
 2608 0086 00       		.byte	0
 2609 0087 0C       		.uleb128 0xc
 2610 0088 13       		.uleb128 0x13
 2611 0089 01       		.byte	0x1
 2612 008a 0B       		.uleb128 0xb
 2613 008b 0B       		.uleb128 0xb
 2614 008c 3A       		.uleb128 0x3a
 2615 008d 0B       		.uleb128 0xb
 2616 008e 3B       		.uleb128 0x3b
 2617 008f 05       		.uleb128 0x5
 2618 0090 01       		.uleb128 0x1
 2619 0091 13       		.uleb128 0x13
 2620 0092 00       		.byte	0
 2621 0093 00       		.byte	0
 2622 0094 0D       		.uleb128 0xd
 2623 0095 0D       		.uleb128 0xd
 2624 0096 00       		.byte	0
 2625 0097 03       		.uleb128 0x3
 2626 0098 0E       		.uleb128 0xe
 2627 0099 3A       		.uleb128 0x3a
 2628 009a 0B       		.uleb128 0xb
 2629 009b 3B       		.uleb128 0x3b
 2630 009c 05       		.uleb128 0x5
 2631 009d 49       		.uleb128 0x49
 2632 009e 13       		.uleb128 0x13
 2633 009f 38       		.uleb128 0x38
 2634 00a0 0B       		.uleb128 0xb
 2635 00a1 00       		.byte	0
 2636 00a2 00       		.byte	0
 2637 00a3 0E       		.uleb128 0xe
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 92


 2638 00a4 2E       		.uleb128 0x2e
 2639 00a5 01       		.byte	0x1
 2640 00a6 3F       		.uleb128 0x3f
 2641 00a7 19       		.uleb128 0x19
 2642 00a8 03       		.uleb128 0x3
 2643 00a9 0E       		.uleb128 0xe
 2644 00aa 3A       		.uleb128 0x3a
 2645 00ab 0B       		.uleb128 0xb
 2646 00ac 3B       		.uleb128 0x3b
 2647 00ad 0B       		.uleb128 0xb
 2648 00ae 27       		.uleb128 0x27
 2649 00af 19       		.uleb128 0x19
 2650 00b0 11       		.uleb128 0x11
 2651 00b1 01       		.uleb128 0x1
 2652 00b2 12       		.uleb128 0x12
 2653 00b3 06       		.uleb128 0x6
 2654 00b4 40       		.uleb128 0x40
 2655 00b5 18       		.uleb128 0x18
 2656 00b6 9742     		.uleb128 0x2117
 2657 00b8 19       		.uleb128 0x19
 2658 00b9 01       		.uleb128 0x1
 2659 00ba 13       		.uleb128 0x13
 2660 00bb 00       		.byte	0
 2661 00bc 00       		.byte	0
 2662 00bd 0F       		.uleb128 0xf
 2663 00be 34       		.uleb128 0x34
 2664 00bf 00       		.byte	0
 2665 00c0 03       		.uleb128 0x3
 2666 00c1 0E       		.uleb128 0xe
 2667 00c2 3A       		.uleb128 0x3a
 2668 00c3 0B       		.uleb128 0xb
 2669 00c4 3B       		.uleb128 0x3b
 2670 00c5 0B       		.uleb128 0xb
 2671 00c6 49       		.uleb128 0x49
 2672 00c7 13       		.uleb128 0x13
 2673 00c8 02       		.uleb128 0x2
 2674 00c9 17       		.uleb128 0x17
 2675 00ca 00       		.byte	0
 2676 00cb 00       		.byte	0
 2677 00cc 10       		.uleb128 0x10
 2678 00cd 898201   		.uleb128 0x4109
 2679 00d0 00       		.byte	0
 2680 00d1 11       		.uleb128 0x11
 2681 00d2 01       		.uleb128 0x1
 2682 00d3 31       		.uleb128 0x31
 2683 00d4 13       		.uleb128 0x13
 2684 00d5 00       		.byte	0
 2685 00d6 00       		.byte	0
 2686 00d7 11       		.uleb128 0x11
 2687 00d8 898201   		.uleb128 0x4109
 2688 00db 01       		.byte	0x1
 2689 00dc 11       		.uleb128 0x11
 2690 00dd 01       		.uleb128 0x1
 2691 00de 31       		.uleb128 0x31
 2692 00df 13       		.uleb128 0x13
 2693 00e0 01       		.uleb128 0x1
 2694 00e1 13       		.uleb128 0x13
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 93


 2695 00e2 00       		.byte	0
 2696 00e3 00       		.byte	0
 2697 00e4 12       		.uleb128 0x12
 2698 00e5 8A8201   		.uleb128 0x410a
 2699 00e8 00       		.byte	0
 2700 00e9 02       		.uleb128 0x2
 2701 00ea 18       		.uleb128 0x18
 2702 00eb 9142     		.uleb128 0x2111
 2703 00ed 18       		.uleb128 0x18
 2704 00ee 00       		.byte	0
 2705 00ef 00       		.byte	0
 2706 00f0 13       		.uleb128 0x13
 2707 00f1 898201   		.uleb128 0x4109
 2708 00f4 01       		.byte	0x1
 2709 00f5 11       		.uleb128 0x11
 2710 00f6 01       		.uleb128 0x1
 2711 00f7 31       		.uleb128 0x31
 2712 00f8 13       		.uleb128 0x13
 2713 00f9 00       		.byte	0
 2714 00fa 00       		.byte	0
 2715 00fb 14       		.uleb128 0x14
 2716 00fc 2E       		.uleb128 0x2e
 2717 00fd 01       		.byte	0x1
 2718 00fe 3F       		.uleb128 0x3f
 2719 00ff 19       		.uleb128 0x19
 2720 0100 03       		.uleb128 0x3
 2721 0101 0E       		.uleb128 0xe
 2722 0102 3A       		.uleb128 0x3a
 2723 0103 0B       		.uleb128 0xb
 2724 0104 3B       		.uleb128 0x3b
 2725 0105 05       		.uleb128 0x5
 2726 0106 27       		.uleb128 0x27
 2727 0107 19       		.uleb128 0x19
 2728 0108 11       		.uleb128 0x11
 2729 0109 01       		.uleb128 0x1
 2730 010a 12       		.uleb128 0x12
 2731 010b 06       		.uleb128 0x6
 2732 010c 40       		.uleb128 0x40
 2733 010d 18       		.uleb128 0x18
 2734 010e 9742     		.uleb128 0x2117
 2735 0110 19       		.uleb128 0x19
 2736 0111 01       		.uleb128 0x1
 2737 0112 13       		.uleb128 0x13
 2738 0113 00       		.byte	0
 2739 0114 00       		.byte	0
 2740 0115 15       		.uleb128 0x15
 2741 0116 05       		.uleb128 0x5
 2742 0117 00       		.byte	0
 2743 0118 03       		.uleb128 0x3
 2744 0119 0E       		.uleb128 0xe
 2745 011a 3A       		.uleb128 0x3a
 2746 011b 0B       		.uleb128 0xb
 2747 011c 3B       		.uleb128 0x3b
 2748 011d 05       		.uleb128 0x5
 2749 011e 49       		.uleb128 0x49
 2750 011f 13       		.uleb128 0x13
 2751 0120 02       		.uleb128 0x2
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 94


 2752 0121 17       		.uleb128 0x17
 2753 0122 00       		.byte	0
 2754 0123 00       		.byte	0
 2755 0124 16       		.uleb128 0x16
 2756 0125 34       		.uleb128 0x34
 2757 0126 00       		.byte	0
 2758 0127 03       		.uleb128 0x3
 2759 0128 08       		.uleb128 0x8
 2760 0129 3A       		.uleb128 0x3a
 2761 012a 0B       		.uleb128 0xb
 2762 012b 3B       		.uleb128 0x3b
 2763 012c 05       		.uleb128 0x5
 2764 012d 49       		.uleb128 0x49
 2765 012e 13       		.uleb128 0x13
 2766 012f 02       		.uleb128 0x2
 2767 0130 17       		.uleb128 0x17
 2768 0131 00       		.byte	0
 2769 0132 00       		.byte	0
 2770 0133 17       		.uleb128 0x17
 2771 0134 05       		.uleb128 0x5
 2772 0135 00       		.byte	0
 2773 0136 03       		.uleb128 0x3
 2774 0137 0E       		.uleb128 0xe
 2775 0138 3A       		.uleb128 0x3a
 2776 0139 0B       		.uleb128 0xb
 2777 013a 3B       		.uleb128 0x3b
 2778 013b 0B       		.uleb128 0xb
 2779 013c 49       		.uleb128 0x49
 2780 013d 13       		.uleb128 0x13
 2781 013e 02       		.uleb128 0x2
 2782 013f 17       		.uleb128 0x17
 2783 0140 00       		.byte	0
 2784 0141 00       		.byte	0
 2785 0142 18       		.uleb128 0x18
 2786 0143 34       		.uleb128 0x34
 2787 0144 00       		.byte	0
 2788 0145 03       		.uleb128 0x3
 2789 0146 0E       		.uleb128 0xe
 2790 0147 3A       		.uleb128 0x3a
 2791 0148 0B       		.uleb128 0xb
 2792 0149 3B       		.uleb128 0x3b
 2793 014a 05       		.uleb128 0x5
 2794 014b 49       		.uleb128 0x49
 2795 014c 13       		.uleb128 0x13
 2796 014d 02       		.uleb128 0x2
 2797 014e 17       		.uleb128 0x17
 2798 014f 00       		.byte	0
 2799 0150 00       		.byte	0
 2800 0151 19       		.uleb128 0x19
 2801 0152 2E       		.uleb128 0x2e
 2802 0153 01       		.byte	0x1
 2803 0154 3F       		.uleb128 0x3f
 2804 0155 19       		.uleb128 0x19
 2805 0156 03       		.uleb128 0x3
 2806 0157 0E       		.uleb128 0xe
 2807 0158 3A       		.uleb128 0x3a
 2808 0159 0B       		.uleb128 0xb
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 95


 2809 015a 3B       		.uleb128 0x3b
 2810 015b 05       		.uleb128 0x5
 2811 015c 27       		.uleb128 0x27
 2812 015d 19       		.uleb128 0x19
 2813 015e 49       		.uleb128 0x49
 2814 015f 13       		.uleb128 0x13
 2815 0160 11       		.uleb128 0x11
 2816 0161 01       		.uleb128 0x1
 2817 0162 12       		.uleb128 0x12
 2818 0163 06       		.uleb128 0x6
 2819 0164 40       		.uleb128 0x40
 2820 0165 18       		.uleb128 0x18
 2821 0166 9742     		.uleb128 0x2117
 2822 0168 19       		.uleb128 0x19
 2823 0169 01       		.uleb128 0x1
 2824 016a 13       		.uleb128 0x13
 2825 016b 00       		.byte	0
 2826 016c 00       		.byte	0
 2827 016d 1A       		.uleb128 0x1a
 2828 016e 2E       		.uleb128 0x2e
 2829 016f 00       		.byte	0
 2830 0170 3F       		.uleb128 0x3f
 2831 0171 19       		.uleb128 0x19
 2832 0172 03       		.uleb128 0x3
 2833 0173 0E       		.uleb128 0xe
 2834 0174 3A       		.uleb128 0x3a
 2835 0175 0B       		.uleb128 0xb
 2836 0176 3B       		.uleb128 0x3b
 2837 0177 05       		.uleb128 0x5
 2838 0178 27       		.uleb128 0x27
 2839 0179 19       		.uleb128 0x19
 2840 017a 49       		.uleb128 0x49
 2841 017b 13       		.uleb128 0x13
 2842 017c 11       		.uleb128 0x11
 2843 017d 01       		.uleb128 0x1
 2844 017e 12       		.uleb128 0x12
 2845 017f 06       		.uleb128 0x6
 2846 0180 40       		.uleb128 0x40
 2847 0181 18       		.uleb128 0x18
 2848 0182 9742     		.uleb128 0x2117
 2849 0184 19       		.uleb128 0x19
 2850 0185 00       		.byte	0
 2851 0186 00       		.byte	0
 2852 0187 1B       		.uleb128 0x1b
 2853 0188 05       		.uleb128 0x5
 2854 0189 00       		.byte	0
 2855 018a 03       		.uleb128 0x3
 2856 018b 0E       		.uleb128 0xe
 2857 018c 3A       		.uleb128 0x3a
 2858 018d 0B       		.uleb128 0xb
 2859 018e 3B       		.uleb128 0x3b
 2860 018f 05       		.uleb128 0x5
 2861 0190 49       		.uleb128 0x49
 2862 0191 13       		.uleb128 0x13
 2863 0192 02       		.uleb128 0x2
 2864 0193 18       		.uleb128 0x18
 2865 0194 00       		.byte	0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 96


 2866 0195 00       		.byte	0
 2867 0196 1C       		.uleb128 0x1c
 2868 0197 0B       		.uleb128 0xb
 2869 0198 01       		.byte	0x1
 2870 0199 55       		.uleb128 0x55
 2871 019a 17       		.uleb128 0x17
 2872 019b 00       		.byte	0
 2873 019c 00       		.byte	0
 2874 019d 1D       		.uleb128 0x1d
 2875 019e 0F       		.uleb128 0xf
 2876 019f 00       		.byte	0
 2877 01a0 0B       		.uleb128 0xb
 2878 01a1 0B       		.uleb128 0xb
 2879 01a2 49       		.uleb128 0x49
 2880 01a3 13       		.uleb128 0x13
 2881 01a4 00       		.byte	0
 2882 01a5 00       		.byte	0
 2883 01a6 1E       		.uleb128 0x1e
 2884 01a7 26       		.uleb128 0x26
 2885 01a8 00       		.byte	0
 2886 01a9 49       		.uleb128 0x49
 2887 01aa 13       		.uleb128 0x13
 2888 01ab 00       		.byte	0
 2889 01ac 00       		.byte	0
 2890 01ad 1F       		.uleb128 0x1f
 2891 01ae 0B       		.uleb128 0xb
 2892 01af 01       		.byte	0x1
 2893 01b0 11       		.uleb128 0x11
 2894 01b1 01       		.uleb128 0x1
 2895 01b2 12       		.uleb128 0x12
 2896 01b3 06       		.uleb128 0x6
 2897 01b4 01       		.uleb128 0x1
 2898 01b5 13       		.uleb128 0x13
 2899 01b6 00       		.byte	0
 2900 01b7 00       		.byte	0
 2901 01b8 20       		.uleb128 0x20
 2902 01b9 2E       		.uleb128 0x2e
 2903 01ba 00       		.byte	0
 2904 01bb 3F       		.uleb128 0x3f
 2905 01bc 19       		.uleb128 0x19
 2906 01bd 03       		.uleb128 0x3
 2907 01be 0E       		.uleb128 0xe
 2908 01bf 3A       		.uleb128 0x3a
 2909 01c0 0B       		.uleb128 0xb
 2910 01c1 3B       		.uleb128 0x3b
 2911 01c2 05       		.uleb128 0x5
 2912 01c3 27       		.uleb128 0x27
 2913 01c4 19       		.uleb128 0x19
 2914 01c5 11       		.uleb128 0x11
 2915 01c6 01       		.uleb128 0x1
 2916 01c7 12       		.uleb128 0x12
 2917 01c8 06       		.uleb128 0x6
 2918 01c9 40       		.uleb128 0x40
 2919 01ca 18       		.uleb128 0x18
 2920 01cb 9742     		.uleb128 0x2117
 2921 01cd 19       		.uleb128 0x19
 2922 01ce 00       		.byte	0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 97


 2923 01cf 00       		.byte	0
 2924 01d0 21       		.uleb128 0x21
 2925 01d1 34       		.uleb128 0x34
 2926 01d2 00       		.byte	0
 2927 01d3 03       		.uleb128 0x3
 2928 01d4 0E       		.uleb128 0xe
 2929 01d5 3A       		.uleb128 0x3a
 2930 01d6 0B       		.uleb128 0xb
 2931 01d7 3B       		.uleb128 0x3b
 2932 01d8 0B       		.uleb128 0xb
 2933 01d9 49       		.uleb128 0x49
 2934 01da 13       		.uleb128 0x13
 2935 01db 3F       		.uleb128 0x3f
 2936 01dc 19       		.uleb128 0x19
 2937 01dd 02       		.uleb128 0x2
 2938 01de 18       		.uleb128 0x18
 2939 01df 00       		.byte	0
 2940 01e0 00       		.byte	0
 2941 01e1 22       		.uleb128 0x22
 2942 01e2 34       		.uleb128 0x34
 2943 01e3 00       		.byte	0
 2944 01e4 03       		.uleb128 0x3
 2945 01e5 0E       		.uleb128 0xe
 2946 01e6 3A       		.uleb128 0x3a
 2947 01e7 0B       		.uleb128 0xb
 2948 01e8 3B       		.uleb128 0x3b
 2949 01e9 05       		.uleb128 0x5
 2950 01ea 49       		.uleb128 0x49
 2951 01eb 13       		.uleb128 0x13
 2952 01ec 3F       		.uleb128 0x3f
 2953 01ed 19       		.uleb128 0x19
 2954 01ee 3C       		.uleb128 0x3c
 2955 01ef 19       		.uleb128 0x19
 2956 01f0 00       		.byte	0
 2957 01f1 00       		.byte	0
 2958 01f2 23       		.uleb128 0x23
 2959 01f3 34       		.uleb128 0x34
 2960 01f4 00       		.byte	0
 2961 01f5 03       		.uleb128 0x3
 2962 01f6 0E       		.uleb128 0xe
 2963 01f7 3A       		.uleb128 0x3a
 2964 01f8 0B       		.uleb128 0xb
 2965 01f9 3B       		.uleb128 0x3b
 2966 01fa 0B       		.uleb128 0xb
 2967 01fb 49       		.uleb128 0x49
 2968 01fc 13       		.uleb128 0x13
 2969 01fd 3F       		.uleb128 0x3f
 2970 01fe 19       		.uleb128 0x19
 2971 01ff 3C       		.uleb128 0x3c
 2972 0200 19       		.uleb128 0x19
 2973 0201 00       		.byte	0
 2974 0202 00       		.byte	0
 2975 0203 24       		.uleb128 0x24
 2976 0204 2E       		.uleb128 0x2e
 2977 0205 00       		.byte	0
 2978 0206 3F       		.uleb128 0x3f
 2979 0207 19       		.uleb128 0x19
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 98


 2980 0208 3C       		.uleb128 0x3c
 2981 0209 19       		.uleb128 0x19
 2982 020a 6E       		.uleb128 0x6e
 2983 020b 0E       		.uleb128 0xe
 2984 020c 03       		.uleb128 0x3
 2985 020d 0E       		.uleb128 0xe
 2986 020e 3A       		.uleb128 0x3a
 2987 020f 0B       		.uleb128 0xb
 2988 0210 3B       		.uleb128 0x3b
 2989 0211 0B       		.uleb128 0xb
 2990 0212 00       		.byte	0
 2991 0213 00       		.byte	0
 2992 0214 00       		.byte	0
 2993              		.section	.debug_loc,"",%progbits
 2994              	.Ldebug_loc0:
 2995              	.LLST0:
 2996 0000 08000000 		.4byte	.LVL1
 2997 0004 FA000000 		.4byte	.LVL19
 2998 0008 0100     		.2byte	0x1
 2999 000a 57       		.byte	0x57
 3000 000b 00000000 		.4byte	0
 3001 000f 00000000 		.4byte	0
 3002              	.LLST1:
 3003 0013 00000000 		.4byte	.LVL20
 3004 0017 8A000000 		.4byte	.LVL26
 3005 001b 0100     		.2byte	0x1
 3006 001d 50       		.byte	0x50
 3007 001e 8A000000 		.4byte	.LVL26
 3008 0022 CC000000 		.4byte	.LFE2
 3009 0026 0400     		.2byte	0x4
 3010 0028 F3       		.byte	0xf3
 3011 0029 01       		.uleb128 0x1
 3012 002a 50       		.byte	0x50
 3013 002b 9F       		.byte	0x9f
 3014 002c 00000000 		.4byte	0
 3015 0030 00000000 		.4byte	0
 3016              	.LLST2:
 3017 0034 00000000 		.4byte	.LVL20
 3018 0038 8D000000 		.4byte	.LVL27-1
 3019 003c 0100     		.2byte	0x1
 3020 003e 51       		.byte	0x51
 3021 003f 8D000000 		.4byte	.LVL27-1
 3022 0043 CC000000 		.4byte	.LFE2
 3023 0047 0400     		.2byte	0x4
 3024 0049 F3       		.byte	0xf3
 3025 004a 01       		.uleb128 0x1
 3026 004b 51       		.byte	0x51
 3027 004c 9F       		.byte	0x9f
 3028 004d 00000000 		.4byte	0
 3029 0051 00000000 		.4byte	0
 3030              	.LLST3:
 3031 0055 02000000 		.4byte	.LVL21
 3032 0059 06000000 		.4byte	.LVL22
 3033 005d 0200     		.2byte	0x2
 3034 005f 30       		.byte	0x30
 3035 0060 9F       		.byte	0x9f
 3036 0061 06000000 		.4byte	.LVL22
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 99


 3037 0065 0E000000 		.4byte	.LVL23
 3038 0069 0100     		.2byte	0x1
 3039 006b 53       		.byte	0x53
 3040 006c 10000000 		.4byte	.LVL24
 3041 0070 16000000 		.4byte	.LVL25
 3042 0074 0100     		.2byte	0x1
 3043 0076 53       		.byte	0x53
 3044 0077 00000000 		.4byte	0
 3045 007b 00000000 		.4byte	0
 3046              	.LLST4:
 3047 007f 00000000 		.4byte	.LVL28
 3048 0083 0F000000 		.4byte	.LVL29-1
 3049 0087 0100     		.2byte	0x1
 3050 0089 50       		.byte	0x50
 3051 008a 0F000000 		.4byte	.LVL29-1
 3052 008e 24000000 		.4byte	.LFE0
 3053 0092 0400     		.2byte	0x4
 3054 0094 F3       		.byte	0xf3
 3055 0095 01       		.uleb128 0x1
 3056 0096 50       		.byte	0x50
 3057 0097 9F       		.byte	0x9f
 3058 0098 00000000 		.4byte	0
 3059 009c 00000000 		.4byte	0
 3060              	.LLST5:
 3061 00a0 00000000 		.4byte	.LVL28
 3062 00a4 0F000000 		.4byte	.LVL29-1
 3063 00a8 0100     		.2byte	0x1
 3064 00aa 51       		.byte	0x51
 3065 00ab 0F000000 		.4byte	.LVL29-1
 3066 00af 24000000 		.4byte	.LFE0
 3067 00b3 0400     		.2byte	0x4
 3068 00b5 F3       		.byte	0xf3
 3069 00b6 01       		.uleb128 0x1
 3070 00b7 51       		.byte	0x51
 3071 00b8 9F       		.byte	0x9f
 3072 00b9 00000000 		.4byte	0
 3073 00bd 00000000 		.4byte	0
 3074              	.LLST6:
 3075 00c1 00000000 		.4byte	.LVL31
 3076 00c5 04000000 		.4byte	.LVL32
 3077 00c9 0200     		.2byte	0x2
 3078 00cb 30       		.byte	0x30
 3079 00cc 9F       		.byte	0x9f
 3080 00cd 04000000 		.4byte	.LVL32
 3081 00d1 0C000000 		.4byte	.LVL33
 3082 00d5 0100     		.2byte	0x1
 3083 00d7 53       		.byte	0x53
 3084 00d8 0E000000 		.4byte	.LVL34
 3085 00dc 14000000 		.4byte	.LVL35
 3086 00e0 0100     		.2byte	0x1
 3087 00e2 53       		.byte	0x53
 3088 00e3 00000000 		.4byte	0
 3089 00e7 00000000 		.4byte	0
 3090              	.LLST7:
 3091 00eb 06000000 		.4byte	.LVL36
 3092 00ef 47000000 		.4byte	.LVL37-1
 3093 00f3 0100     		.2byte	0x1
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 100


 3094 00f5 50       		.byte	0x50
 3095 00f6 00000000 		.4byte	0
 3096 00fa 00000000 		.4byte	0
 3097              	.LLST8:
 3098 00fe 06000000 		.4byte	.LVL39
 3099 0102 10000000 		.4byte	.LVL40
 3100 0106 0100     		.2byte	0x1
 3101 0108 53       		.byte	0x53
 3102 0109 00000000 		.4byte	0
 3103 010d 00000000 		.4byte	0
 3104              	.LLST9:
 3105 0111 00000000 		.4byte	.LVL41
 3106 0115 10000000 		.4byte	.LVL42
 3107 0119 0200     		.2byte	0x2
 3108 011b 30       		.byte	0x30
 3109 011c 9F       		.byte	0x9f
 3110 011d 10000000 		.4byte	.LVL42
 3111 0121 16000000 		.4byte	.LVL43
 3112 0125 0100     		.2byte	0x1
 3113 0127 50       		.byte	0x50
 3114 0128 16000000 		.4byte	.LVL43
 3115 012c 18000000 		.4byte	.LVL44
 3116 0130 0200     		.2byte	0x2
 3117 0132 30       		.byte	0x30
 3118 0133 9F       		.byte	0x9f
 3119 0134 18000000 		.4byte	.LVL44
 3120 0138 20000000 		.4byte	.LFE7
 3121 013c 0100     		.2byte	0x1
 3122 013e 50       		.byte	0x50
 3123 013f 00000000 		.4byte	0
 3124 0143 00000000 		.4byte	0
 3125              	.LLST10:
 3126 0147 00000000 		.4byte	.LVL45
 3127 014b 04000000 		.4byte	.LVL46
 3128 014f 0100     		.2byte	0x1
 3129 0151 50       		.byte	0x50
 3130 0152 04000000 		.4byte	.LVL46
 3131 0156 0C000000 		.4byte	.LFE8
 3132 015a 0400     		.2byte	0x4
 3133 015c F3       		.byte	0xf3
 3134 015d 01       		.uleb128 0x1
 3135 015e 50       		.byte	0x50
 3136 015f 9F       		.byte	0x9f
 3137 0160 00000000 		.4byte	0
 3138 0164 00000000 		.4byte	0
 3139              	.LLST11:
 3140 0168 00000000 		.4byte	.LVL47
 3141 016c 04000000 		.4byte	.LVL48
 3142 0170 0100     		.2byte	0x1
 3143 0172 50       		.byte	0x50
 3144 0173 04000000 		.4byte	.LVL48
 3145 0177 14000000 		.4byte	.LFE9
 3146 017b 0400     		.2byte	0x4
 3147 017d F3       		.byte	0xf3
 3148 017e 01       		.uleb128 0x1
 3149 017f 50       		.byte	0x50
 3150 0180 9F       		.byte	0x9f
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 101


 3151 0181 00000000 		.4byte	0
 3152 0185 00000000 		.4byte	0
 3153              	.LLST12:
 3154 0189 00000000 		.4byte	.LVL49
 3155 018d 0C000000 		.4byte	.LVL50
 3156 0191 0100     		.2byte	0x1
 3157 0193 50       		.byte	0x50
 3158 0194 0C000000 		.4byte	.LVL50
 3159 0198 20000000 		.4byte	.LVL55
 3160 019c 0400     		.2byte	0x4
 3161 019e F3       		.byte	0xf3
 3162 019f 01       		.uleb128 0x1
 3163 01a0 50       		.byte	0x50
 3164 01a1 9F       		.byte	0x9f
 3165 01a2 20000000 		.4byte	.LVL55
 3166 01a6 22000000 		.4byte	.LVL56
 3167 01aa 0100     		.2byte	0x1
 3168 01ac 50       		.byte	0x50
 3169 01ad 22000000 		.4byte	.LVL56
 3170 01b1 28000000 		.4byte	.LFE10
 3171 01b5 0400     		.2byte	0x4
 3172 01b7 F3       		.byte	0xf3
 3173 01b8 01       		.uleb128 0x1
 3174 01b9 50       		.byte	0x50
 3175 01ba 9F       		.byte	0x9f
 3176 01bb 00000000 		.4byte	0
 3177 01bf 00000000 		.4byte	0
 3178              	.LLST13:
 3179 01c3 00000000 		.4byte	.LVL49
 3180 01c7 14000000 		.4byte	.LVL51
 3181 01cb 0200     		.2byte	0x2
 3182 01cd 30       		.byte	0x30
 3183 01ce 9F       		.byte	0x9f
 3184 01cf 14000000 		.4byte	.LVL51
 3185 01d3 1C000000 		.4byte	.LVL53
 3186 01d7 0100     		.2byte	0x1
 3187 01d9 50       		.byte	0x50
 3188 01da 1C000000 		.4byte	.LVL53
 3189 01de 1E000000 		.4byte	.LVL54
 3190 01e2 0300     		.2byte	0x3
 3191 01e4 70       		.byte	0x70
 3192 01e5 02       		.sleb128 2
 3193 01e6 9F       		.byte	0x9f
 3194 01e7 1E000000 		.4byte	.LVL54
 3195 01eb 20000000 		.4byte	.LVL55
 3196 01ef 0100     		.2byte	0x1
 3197 01f1 50       		.byte	0x50
 3198 01f2 20000000 		.4byte	.LVL55
 3199 01f6 22000000 		.4byte	.LVL56
 3200 01fa 0200     		.2byte	0x2
 3201 01fc 30       		.byte	0x30
 3202 01fd 9F       		.byte	0x9f
 3203 01fe 22000000 		.4byte	.LVL56
 3204 0202 28000000 		.4byte	.LFE10
 3205 0206 0100     		.2byte	0x1
 3206 0208 50       		.byte	0x50
 3207 0209 00000000 		.4byte	0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 102


 3208 020d 00000000 		.4byte	0
 3209              	.LLST14:
 3210 0211 00000000 		.4byte	.LVL57
 3211 0215 7C000000 		.4byte	.LVL67
 3212 0219 0100     		.2byte	0x1
 3213 021b 50       		.byte	0x50
 3214 021c 7C000000 		.4byte	.LVL67
 3215 0220 94000000 		.4byte	.LFE11
 3216 0224 0400     		.2byte	0x4
 3217 0226 F3       		.byte	0xf3
 3218 0227 01       		.uleb128 0x1
 3219 0228 50       		.byte	0x50
 3220 0229 9F       		.byte	0x9f
 3221 022a 00000000 		.4byte	0
 3222 022e 00000000 		.4byte	0
 3223              	.LLST15:
 3224 0232 00000000 		.4byte	.LVL57
 3225 0236 26000000 		.4byte	.LVL58
 3226 023a 0100     		.2byte	0x1
 3227 023c 52       		.byte	0x52
 3228 023d 26000000 		.4byte	.LVL58
 3229 0241 34000000 		.4byte	.LVL59
 3230 0245 0400     		.2byte	0x4
 3231 0247 F3       		.byte	0xf3
 3232 0248 01       		.uleb128 0x1
 3233 0249 52       		.byte	0x52
 3234 024a 9F       		.byte	0x9f
 3235 024b 34000000 		.4byte	.LVL59
 3236 024f 6A000000 		.4byte	.LVL66
 3237 0253 0100     		.2byte	0x1
 3238 0255 52       		.byte	0x52
 3239 0256 00000000 		.4byte	0
 3240 025a 00000000 		.4byte	0
 3241              	.LLST16:
 3242 025e 54000000 		.4byte	.LVL60
 3243 0262 5E000000 		.4byte	.LVL61
 3244 0266 0100     		.2byte	0x1
 3245 0268 53       		.byte	0x53
 3246 0269 60000000 		.4byte	.LVL62
 3247 026d 62000000 		.4byte	.LVL63
 3248 0271 0100     		.2byte	0x1
 3249 0273 53       		.byte	0x53
 3250 0274 64000000 		.4byte	.LVL64
 3251 0278 68000000 		.4byte	.LVL65
 3252 027c 0100     		.2byte	0x1
 3253 027e 53       		.byte	0x53
 3254 027f 00000000 		.4byte	0
 3255 0283 00000000 		.4byte	0
 3256              	.LLST17:
 3257 0287 00000000 		.4byte	.LVL68
 3258 028b 1C000000 		.4byte	.LVL69
 3259 028f 0100     		.2byte	0x1
 3260 0291 50       		.byte	0x50
 3261 0292 1C000000 		.4byte	.LVL69
 3262 0296 2C000000 		.4byte	.LFE13
 3263 029a 0400     		.2byte	0x4
 3264 029c F3       		.byte	0xf3
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 103


 3265 029d 01       		.uleb128 0x1
 3266 029e 50       		.byte	0x50
 3267 029f 9F       		.byte	0x9f
 3268 02a0 00000000 		.4byte	0
 3269 02a4 00000000 		.4byte	0
 3270              	.LLST18:
 3271 02a8 00000000 		.4byte	.LVL70
 3272 02ac 13000000 		.4byte	.LVL71-1
 3273 02b0 0100     		.2byte	0x1
 3274 02b2 50       		.byte	0x50
 3275 02b3 13000000 		.4byte	.LVL71-1
 3276 02b7 3C000000 		.4byte	.LVL78
 3277 02bb 0400     		.2byte	0x4
 3278 02bd F3       		.byte	0xf3
 3279 02be 01       		.uleb128 0x1
 3280 02bf 50       		.byte	0x50
 3281 02c0 9F       		.byte	0x9f
 3282 02c1 3C000000 		.4byte	.LVL78
 3283 02c5 46000000 		.4byte	.LVL79
 3284 02c9 0100     		.2byte	0x1
 3285 02cb 50       		.byte	0x50
 3286 02cc 46000000 		.4byte	.LVL79
 3287 02d0 50000000 		.4byte	.LFE12
 3288 02d4 0400     		.2byte	0x4
 3289 02d6 F3       		.byte	0xf3
 3290 02d7 01       		.uleb128 0x1
 3291 02d8 50       		.byte	0x50
 3292 02d9 9F       		.byte	0x9f
 3293 02da 00000000 		.4byte	0
 3294 02de 00000000 		.4byte	0
 3295              	.LLST19:
 3296 02e2 00000000 		.4byte	.LVL70
 3297 02e6 13000000 		.4byte	.LVL71-1
 3298 02ea 0100     		.2byte	0x1
 3299 02ec 51       		.byte	0x51
 3300 02ed 13000000 		.4byte	.LVL71-1
 3301 02f1 3C000000 		.4byte	.LVL78
 3302 02f5 0100     		.2byte	0x1
 3303 02f7 56       		.byte	0x56
 3304 02f8 3C000000 		.4byte	.LVL78
 3305 02fc 46000000 		.4byte	.LVL79
 3306 0300 0100     		.2byte	0x1
 3307 0302 51       		.byte	0x51
 3308 0303 46000000 		.4byte	.LVL79
 3309 0307 50000000 		.4byte	.LFE12
 3310 030b 0400     		.2byte	0x4
 3311 030d F3       		.byte	0xf3
 3312 030e 01       		.uleb128 0x1
 3313 030f 51       		.byte	0x51
 3314 0310 9F       		.byte	0x9f
 3315 0311 00000000 		.4byte	0
 3316 0315 00000000 		.4byte	0
 3317              	.LLST20:
 3318 0319 00000000 		.4byte	.LVL70
 3319 031d 13000000 		.4byte	.LVL71-1
 3320 0321 0100     		.2byte	0x1
 3321 0323 52       		.byte	0x52
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 104


 3322 0324 13000000 		.4byte	.LVL71-1
 3323 0328 20000000 		.4byte	.LVL73
 3324 032c 0400     		.2byte	0x4
 3325 032e F3       		.byte	0xf3
 3326 032f 01       		.uleb128 0x1
 3327 0330 52       		.byte	0x52
 3328 0331 9F       		.byte	0x9f
 3329 0332 20000000 		.4byte	.LVL73
 3330 0336 3C000000 		.4byte	.LVL78
 3331 033a 0100     		.2byte	0x1
 3332 033c 54       		.byte	0x54
 3333 033d 3C000000 		.4byte	.LVL78
 3334 0341 46000000 		.4byte	.LVL79
 3335 0345 0100     		.2byte	0x1
 3336 0347 52       		.byte	0x52
 3337 0348 46000000 		.4byte	.LVL79
 3338 034c 4A000000 		.4byte	.LVL80
 3339 0350 0100     		.2byte	0x1
 3340 0352 54       		.byte	0x54
 3341 0353 00000000 		.4byte	0
 3342 0357 00000000 		.4byte	0
 3343              	.LLST21:
 3344 035b 20000000 		.4byte	.LVL73
 3345 035f 24000000 		.4byte	.LVL74
 3346 0363 0200     		.2byte	0x2
 3347 0365 30       		.byte	0x30
 3348 0366 9F       		.byte	0x9f
 3349 0367 24000000 		.4byte	.LVL74
 3350 036b 2E000000 		.4byte	.LVL75
 3351 036f 0100     		.2byte	0x1
 3352 0371 53       		.byte	0x53
 3353 0372 30000000 		.4byte	.LVL76
 3354 0376 39000000 		.4byte	.LVL77-1
 3355 037a 0100     		.2byte	0x1
 3356 037c 53       		.byte	0x53
 3357 037d 00000000 		.4byte	0
 3358 0381 00000000 		.4byte	0
 3359              	.LLST22:
 3360 0385 00000000 		.4byte	.LVL81
 3361 0389 0A000000 		.4byte	.LVL82
 3362 038d 0100     		.2byte	0x1
 3363 038f 50       		.byte	0x50
 3364 0390 0A000000 		.4byte	.LVL82
 3365 0394 18000000 		.4byte	.LFE14
 3366 0398 0400     		.2byte	0x4
 3367 039a F3       		.byte	0xf3
 3368 039b 01       		.uleb128 0x1
 3369 039c 50       		.byte	0x50
 3370 039d 9F       		.byte	0x9f
 3371 039e 00000000 		.4byte	0
 3372 03a2 00000000 		.4byte	0
 3373              	.LLST23:
 3374 03a6 00000000 		.4byte	.LVL84
 3375 03aa 0A000000 		.4byte	.LVL85
 3376 03ae 0100     		.2byte	0x1
 3377 03b0 50       		.byte	0x50
 3378 03b1 0A000000 		.4byte	.LVL85
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 105


 3379 03b5 16000000 		.4byte	.LVL87
 3380 03b9 0400     		.2byte	0x4
 3381 03bb F3       		.byte	0xf3
 3382 03bc 01       		.uleb128 0x1
 3383 03bd 50       		.byte	0x50
 3384 03be 9F       		.byte	0x9f
 3385 03bf 16000000 		.4byte	.LVL87
 3386 03c3 18000000 		.4byte	.LVL88
 3387 03c7 0100     		.2byte	0x1
 3388 03c9 50       		.byte	0x50
 3389 03ca 18000000 		.4byte	.LVL88
 3390 03ce 20000000 		.4byte	.LFE16
 3391 03d2 0400     		.2byte	0x4
 3392 03d4 F3       		.byte	0xf3
 3393 03d5 01       		.uleb128 0x1
 3394 03d6 50       		.byte	0x50
 3395 03d7 9F       		.byte	0x9f
 3396 03d8 00000000 		.4byte	0
 3397 03dc 00000000 		.4byte	0
 3398              	.LLST24:
 3399 03e0 00000000 		.4byte	.LVL84
 3400 03e4 14000000 		.4byte	.LVL86
 3401 03e8 0200     		.2byte	0x2
 3402 03ea 30       		.byte	0x30
 3403 03eb 9F       		.byte	0x9f
 3404 03ec 14000000 		.4byte	.LVL86
 3405 03f0 16000000 		.4byte	.LVL87
 3406 03f4 0100     		.2byte	0x1
 3407 03f6 50       		.byte	0x50
 3408 03f7 16000000 		.4byte	.LVL87
 3409 03fb 18000000 		.4byte	.LVL88
 3410 03ff 0200     		.2byte	0x2
 3411 0401 30       		.byte	0x30
 3412 0402 9F       		.byte	0x9f
 3413 0403 18000000 		.4byte	.LVL88
 3414 0407 20000000 		.4byte	.LFE16
 3415 040b 0100     		.2byte	0x1
 3416 040d 50       		.byte	0x50
 3417 040e 00000000 		.4byte	0
 3418 0412 00000000 		.4byte	0
 3419              	.LLST25:
 3420 0416 00000000 		.4byte	.LVL90
 3421 041a 10000000 		.4byte	.LVL91
 3422 041e 0200     		.2byte	0x2
 3423 0420 30       		.byte	0x30
 3424 0421 9F       		.byte	0x9f
 3425 0422 10000000 		.4byte	.LVL91
 3426 0426 18000000 		.4byte	.LFE18
 3427 042a 0100     		.2byte	0x1
 3428 042c 50       		.byte	0x50
 3429 042d 00000000 		.4byte	0
 3430 0431 00000000 		.4byte	0
 3431              		.section	.debug_aranges,"",%progbits
 3432 0000 C4000000 		.4byte	0xc4
 3433 0004 0200     		.2byte	0x2
 3434 0006 00000000 		.4byte	.Ldebug_info0
 3435 000a 04       		.byte	0x4
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 106


 3436 000b 00       		.byte	0
 3437 000c 0000     		.2byte	0
 3438 000e 0000     		.2byte	0
 3439 0010 00000000 		.4byte	.LFB1
 3440 0014 2C010000 		.4byte	.LFE1-.LFB1
 3441 0018 00000000 		.4byte	.LFB2
 3442 001c CC000000 		.4byte	.LFE2-.LFB2
 3443 0020 00000000 		.4byte	.LFB0
 3444 0024 24000000 		.4byte	.LFE0-.LFB0
 3445 0028 00000000 		.4byte	.LFB3
 3446 002c 64000000 		.4byte	.LFE3-.LFB3
 3447 0030 00000000 		.4byte	.LFB4
 3448 0034 B4000000 		.4byte	.LFE4-.LFB4
 3449 0038 00000000 		.4byte	.LFB5
 3450 003c 20000000 		.4byte	.LFE5-.LFB5
 3451 0040 00000000 		.4byte	.LFB6
 3452 0044 0C000000 		.4byte	.LFE6-.LFB6
 3453 0048 00000000 		.4byte	.LFB7
 3454 004c 20000000 		.4byte	.LFE7-.LFB7
 3455 0050 00000000 		.4byte	.LFB8
 3456 0054 0C000000 		.4byte	.LFE8-.LFB8
 3457 0058 00000000 		.4byte	.LFB9
 3458 005c 14000000 		.4byte	.LFE9-.LFB9
 3459 0060 00000000 		.4byte	.LFB10
 3460 0064 28000000 		.4byte	.LFE10-.LFB10
 3461 0068 00000000 		.4byte	.LFB11
 3462 006c 94000000 		.4byte	.LFE11-.LFB11
 3463 0070 00000000 		.4byte	.LFB13
 3464 0074 2C000000 		.4byte	.LFE13-.LFB13
 3465 0078 00000000 		.4byte	.LFB12
 3466 007c 50000000 		.4byte	.LFE12-.LFB12
 3467 0080 00000000 		.4byte	.LFB14
 3468 0084 18000000 		.4byte	.LFE14-.LFB14
 3469 0088 00000000 		.4byte	.LFB15
 3470 008c 0C000000 		.4byte	.LFE15-.LFB15
 3471 0090 00000000 		.4byte	.LFB16
 3472 0094 20000000 		.4byte	.LFE16-.LFB16
 3473 0098 00000000 		.4byte	.LFB17
 3474 009c 20000000 		.4byte	.LFE17-.LFB17
 3475 00a0 00000000 		.4byte	.LFB18
 3476 00a4 18000000 		.4byte	.LFE18-.LFB18
 3477 00a8 00000000 		.4byte	.LFB19
 3478 00ac 10000000 		.4byte	.LFE19-.LFB19
 3479 00b0 00000000 		.4byte	.LFB20
 3480 00b4 10000000 		.4byte	.LFE20-.LFB20
 3481 00b8 00000000 		.4byte	.LFB21
 3482 00bc 10000000 		.4byte	.LFE21-.LFB21
 3483 00c0 00000000 		.4byte	0
 3484 00c4 00000000 		.4byte	0
 3485              		.section	.debug_ranges,"",%progbits
 3486              	.Ldebug_ranges0:
 3487 0000 52000000 		.4byte	.LBB2
 3488 0004 62000000 		.4byte	.LBE2
 3489 0008 64000000 		.4byte	.LBB3
 3490 000c 68000000 		.4byte	.LBE3
 3491 0010 00000000 		.4byte	0
 3492 0014 00000000 		.4byte	0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 107


 3493 0018 00000000 		.4byte	.LFB1
 3494 001c 2C010000 		.4byte	.LFE1
 3495 0020 00000000 		.4byte	.LFB2
 3496 0024 CC000000 		.4byte	.LFE2
 3497 0028 00000000 		.4byte	.LFB0
 3498 002c 24000000 		.4byte	.LFE0
 3499 0030 00000000 		.4byte	.LFB3
 3500 0034 64000000 		.4byte	.LFE3
 3501 0038 00000000 		.4byte	.LFB4
 3502 003c B4000000 		.4byte	.LFE4
 3503 0040 00000000 		.4byte	.LFB5
 3504 0044 20000000 		.4byte	.LFE5
 3505 0048 00000000 		.4byte	.LFB6
 3506 004c 0C000000 		.4byte	.LFE6
 3507 0050 00000000 		.4byte	.LFB7
 3508 0054 20000000 		.4byte	.LFE7
 3509 0058 00000000 		.4byte	.LFB8
 3510 005c 0C000000 		.4byte	.LFE8
 3511 0060 00000000 		.4byte	.LFB9
 3512 0064 14000000 		.4byte	.LFE9
 3513 0068 00000000 		.4byte	.LFB10
 3514 006c 28000000 		.4byte	.LFE10
 3515 0070 00000000 		.4byte	.LFB11
 3516 0074 94000000 		.4byte	.LFE11
 3517 0078 00000000 		.4byte	.LFB13
 3518 007c 2C000000 		.4byte	.LFE13
 3519 0080 00000000 		.4byte	.LFB12
 3520 0084 50000000 		.4byte	.LFE12
 3521 0088 00000000 		.4byte	.LFB14
 3522 008c 18000000 		.4byte	.LFE14
 3523 0090 00000000 		.4byte	.LFB15
 3524 0094 0C000000 		.4byte	.LFE15
 3525 0098 00000000 		.4byte	.LFB16
 3526 009c 20000000 		.4byte	.LFE16
 3527 00a0 00000000 		.4byte	.LFB17
 3528 00a4 20000000 		.4byte	.LFE17
 3529 00a8 00000000 		.4byte	.LFB18
 3530 00ac 18000000 		.4byte	.LFE18
 3531 00b0 00000000 		.4byte	.LFB19
 3532 00b4 10000000 		.4byte	.LFE19
 3533 00b8 00000000 		.4byte	.LFB20
 3534 00bc 10000000 		.4byte	.LFE20
 3535 00c0 00000000 		.4byte	.LFB21
 3536 00c4 10000000 		.4byte	.LFE21
 3537 00c8 00000000 		.4byte	0
 3538 00cc 00000000 		.4byte	0
 3539              		.section	.debug_line,"",%progbits
 3540              	.Ldebug_line0:
 3541 0000 F4020000 		.section	.debug_str,"MS",%progbits,1
 3541      02007D00 
 3541      00000201 
 3541      FB0E0D00 
 3541      01010101 
 3542              	.LASF10:
 3543 0000 75696E74 		.ascii	"uint16\000"
 3543      313600
 3544              	.LASF64:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 108


 3545 0007 55534246 		.ascii	"USBFS_1_LoadInEP\000"
 3545      535F315F 
 3545      4C6F6164 
 3545      496E4550 
 3545      00
 3546              	.LASF72:
 3547 0018 55534246 		.ascii	"USBFS_1_GetEPAckState\000"
 3547      535F315F 
 3547      47657445 
 3547      5041636B 
 3547      53746174 
 3548              	.LASF56:
 3549 002e 55534246 		.ascii	"USBFS_1_CheckActivity\000"
 3549      535F315F 
 3549      43686563 
 3549      6B416374 
 3549      69766974 
 3550              	.LASF81:
 3551 0044 55534246 		.ascii	"USBFS_1_initVar\000"
 3551      535F315F 
 3551      696E6974 
 3551      56617200 
 3552              	.LASF7:
 3553 0054 6C6F6E67 		.ascii	"long long unsigned int\000"
 3553      206C6F6E 
 3553      6720756E 
 3553      7369676E 
 3553      65642069 
 3554              	.LASF80:
 3555 006b 55534246 		.ascii	"USBFS_1_DisableSofInt\000"
 3555      535F315F 
 3555      44697361 
 3555      626C6553 
 3555      6F66496E 
 3556              	.LASF23:
 3557 0081 61646472 		.ascii	"addr\000"
 3557      00
 3558              	.LASF33:
 3559 0086 65704366 		.ascii	"epCfg\000"
 3559      6700
 3560              	.LASF91:
 3561 008c 55534246 		.ascii	"USBFS_1_EP\000"
 3561      535F315F 
 3561      455000
 3562              	.LASF61:
 3563 0097 65704E75 		.ascii	"epNumber\000"
 3563      6D626572 
 3563      00
 3564              	.LASF49:
 3565 00a0 64657669 		.ascii	"device\000"
 3565      636500
 3566              	.LASF6:
 3567 00a7 6C6F6E67 		.ascii	"long long int\000"
 3567      206C6F6E 
 3567      6720696E 
 3567      7400
 3568              	.LASF0:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 109


 3569 00b5 7369676E 		.ascii	"signed char\000"
 3569      65642063 
 3569      68617200 
 3570              	.LASF63:
 3571 00c1 636E7472 		.ascii	"cntr\000"
 3571      00
 3572              	.LASF4:
 3573 00c6 6C6F6E67 		.ascii	"long int\000"
 3573      20696E74 
 3573      00
 3574              	.LASF87:
 3575 00cf 55534246 		.ascii	"USBFS_1_hidProtocol\000"
 3575      535F315F 
 3575      68696450 
 3575      726F746F 
 3575      636F6C00 
 3576              	.LASF68:
 3577 00e3 55534246 		.ascii	"USBFS_1_ReadOutEP\000"
 3577      535F315F 
 3577      52656164 
 3577      4F757445 
 3577      5000
 3578              	.LASF9:
 3579 00f5 75696E74 		.ascii	"uint8\000"
 3579      3800
 3580              	.LASF22:
 3581 00fb 6570546F 		.ascii	"epToggle\000"
 3581      67676C65 
 3581      00
 3582              	.LASF37:
 3583 0104 72775761 		.ascii	"rwWa\000"
 3583      00
 3584              	.LASF76:
 3585 0109 72657375 		.ascii	"result\000"
 3585      6C7400
 3586              	.LASF94:
 3587 0110 43794465 		.ascii	"CyDelayUs\000"
 3587      6C617955 
 3587      7300
 3588              	.LASF13:
 3589 011a 646F7562 		.ascii	"double\000"
 3589      6C6500
 3590              	.LASF74:
 3591 0121 706F7765 		.ascii	"powerStatus\000"
 3591      72537461 
 3591      74757300 
 3592              	.LASF86:
 3593 012d 55534246 		.ascii	"USBFS_1_deviceStatus\000"
 3593      535F315F 
 3593      64657669 
 3593      63655374 
 3593      61747573 
 3594              	.LASF35:
 3595 0142 65705372 		.ascii	"epSr\000"
 3595      00
 3596              	.LASF11:
 3597 0147 75696E74 		.ascii	"uint32\000"
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 110


 3597      333200
 3598              	.LASF65:
 3599 014e 70446174 		.ascii	"pData\000"
 3599      6100
 3600              	.LASF43:
 3601 0154 73696545 		.ascii	"sieEp\000"
 3601      7000
 3602              	.LASF24:
 3603 015a 65704D6F 		.ascii	"epMode\000"
 3603      646500
 3604              	.LASF88:
 3605 0161 55534246 		.ascii	"USBFS_1_interfaceNumber\000"
 3605      535F315F 
 3605      696E7465 
 3605      72666163 
 3605      654E756D 
 3606              	.LASF36:
 3607 0179 72657365 		.ascii	"reserved\000"
 3607      72766564 
 3607      00
 3608              	.LASF69:
 3609 0182 55534246 		.ascii	"USBFS_1_DisableOutEP\000"
 3609      535F315F 
 3609      44697361 
 3609      626C654F 
 3609      75744550 
 3610              	.LASF8:
 3611 0197 756E7369 		.ascii	"unsigned int\000"
 3611      676E6564 
 3611      20696E74 
 3611      00
 3612              	.LASF84:
 3613 01a4 55534246 		.ascii	"USBFS_1_configuration\000"
 3613      535F315F 
 3613      636F6E66 
 3613      69677572 
 3613      6174696F 
 3614              	.LASF42:
 3615 01ba 55534246 		.ascii	"USBFS_1_arb_ep_struct\000"
 3615      535F315F 
 3615      6172625F 
 3615      65705F73 
 3615      74727563 
 3616              	.LASF5:
 3617 01d0 6C6F6E67 		.ascii	"long unsigned int\000"
 3617      20756E73 
 3617      69676E65 
 3617      6420696E 
 3617      7400
 3618              	.LASF54:
 3619 01e2 55534246 		.ascii	"USBFS_1_Stop\000"
 3619      535F315F 
 3619      53746F70 
 3619      00
 3620              	.LASF93:
 3621 01ef 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3621      74657243 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 111


 3621      72697469 
 3621      63616C53 
 3621      65637469 
 3622              	.LASF44:
 3623 0206 55534246 		.ascii	"USBFS_1_sie_eps_struct\000"
 3623      535F315F 
 3623      7369655F 
 3623      6570735F 
 3623      73747275 
 3624              	.LASF46:
 3625 021d 55534246 		.ascii	"USBFS_1_arb_eps_struct\000"
 3625      535F315F 
 3625      6172625F 
 3625      6570735F 
 3625      73747275 
 3626              	.LASF78:
 3627 0234 55534246 		.ascii	"USBFS_1_GetDeviceAddress\000"
 3627      535F315F 
 3627      47657444 
 3627      65766963 
 3627      65416464 
 3628              	.LASF52:
 3629 024d 55534246 		.ascii	"USBFS_1_Start\000"
 3629      535F315F 
 3629      53746172 
 3629      7400
 3630              	.LASF3:
 3631 025b 73686F72 		.ascii	"short unsigned int\000"
 3631      7420756E 
 3631      7369676E 
 3631      65642069 
 3631      6E7400
 3632              	.LASF97:
 3633 026e 4379496E 		.ascii	"CyIntSetVector\000"
 3633      74536574 
 3633      56656374 
 3633      6F7200
 3634              	.LASF28:
 3635 027d 545F5553 		.ascii	"T_USBFS_1_EP_CTL_BLOCK\000"
 3635      4246535F 
 3635      315F4550 
 3635      5F43544C 
 3635      5F424C4F 
 3636              	.LASF73:
 3637 0294 55534246 		.ascii	"USBFS_1_SetPowerStatus\000"
 3637      535F315F 
 3637      53657450 
 3637      6F776572 
 3637      53746174 
 3638              	.LASF67:
 3639 02ab 55534246 		.ascii	"USBFS_1_EnableOutEP\000"
 3639      535F315F 
 3639      456E6162 
 3639      6C654F75 
 3639      74455000 
 3640              	.LASF96:
 3641 02bf 4379496E 		.ascii	"CyIntSetPriority\000"
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 112


 3641      74536574 
 3641      5072696F 
 3641      72697479 
 3641      00
 3642              	.LASF45:
 3643 02d0 61726245 		.ascii	"arbEp\000"
 3643      7000
 3644              	.LASF27:
 3645 02d6 696E7465 		.ascii	"interface\000"
 3645      72666163 
 3645      6500
 3646              	.LASF55:
 3647 02e0 63723152 		.ascii	"cr1Reg\000"
 3647      656700
 3648              	.LASF16:
 3649 02e7 72656733 		.ascii	"reg32\000"
 3649      3200
 3650              	.LASF21:
 3651 02ed 68774570 		.ascii	"hwEpState\000"
 3651      53746174 
 3651      6500
 3652              	.LASF77:
 3653 02f7 55534246 		.ascii	"USBFS_1_GetConfiguration\000"
 3653      535F315F 
 3653      47657443 
 3653      6F6E6669 
 3653      67757261 
 3654              	.LASF102:
 3655 0310 503A5C43 		.ascii	"P:\\Cypress_Tutorials_Working_Directory\\Homemade_J"
 3655      79707265 
 3655      73735F54 
 3655      75746F72 
 3655      69616C73 
 3656 0341 6F797374 		.ascii	"oystick\\Homemade_Joystick\\Homemade_Joystick_Works"
 3656      69636B5C 
 3656      486F6D65 
 3656      6D616465 
 3656      5F4A6F79 
 3657 0372 70616365 		.ascii	"pace\\CyController_Example.cydsn\000"
 3657      5C437943 
 3657      6F6E7472 
 3657      6F6C6C65 
 3657      725F4578 
 3658              	.LASF18:
 3659 0392 73697A65 		.ascii	"sizetype\000"
 3659      74797065 
 3659      00
 3660              	.LASF60:
 3661 039b 55534246 		.ascii	"USBFS_1_GetEPState\000"
 3661      535F315F 
 3661      47657445 
 3661      50537461 
 3661      746500
 3662              	.LASF17:
 3663 03ae 6C6F6E67 		.ascii	"long double\000"
 3663      20646F75 
 3663      626C6500 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 113


 3664              	.LASF19:
 3665 03ba 61747472 		.ascii	"attrib\000"
 3665      696200
 3666              	.LASF57:
 3667 03c1 55534246 		.ascii	"USBFS_1_IsConfigurationChanged\000"
 3667      535F315F 
 3667      4973436F 
 3667      6E666967 
 3667      75726174 
 3668              	.LASF40:
 3669 03e0 72775261 		.ascii	"rwRaMsb\000"
 3669      4D736200 
 3670              	.LASF29:
 3671 03e8 6570436E 		.ascii	"epCnt0\000"
 3671      743000
 3672              	.LASF30:
 3673 03ef 6570436E 		.ascii	"epCnt1\000"
 3673      743100
 3674              	.LASF32:
 3675 03f6 55534246 		.ascii	"USBFS_1_sie_ep_struct\000"
 3675      535F315F 
 3675      7369655F 
 3675      65705F73 
 3675      74727563 
 3676              	.LASF31:
 3677 040c 65704372 		.ascii	"epCr0\000"
 3677      3000
 3678              	.LASF12:
 3679 0412 666C6F61 		.ascii	"float\000"
 3679      7400
 3680              	.LASF95:
 3681 0418 43794578 		.ascii	"CyExitCriticalSection\000"
 3681      69744372 
 3681      69746963 
 3681      616C5365 
 3681      6374696F 
 3682              	.LASF20:
 3683 042e 61706945 		.ascii	"apiEpState\000"
 3683      70537461 
 3683      746500
 3684              	.LASF89:
 3685 0439 55534246 		.ascii	"USBFS_1_interfaceSetting\000"
 3685      535F315F 
 3685      696E7465 
 3685      72666163 
 3685      65536574 
 3686              	.LASF98:
 3687 0452 43794465 		.ascii	"CyDelayCycles\000"
 3687      6C617943 
 3687      79636C65 
 3687      7300
 3688              	.LASF62:
 3689 0460 55534246 		.ascii	"USBFS_1_GetEPCount\000"
 3689      535F315F 
 3689      47657445 
 3689      50436F75 
 3689      6E7400
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 114


 3690              	.LASF15:
 3691 0473 72656738 		.ascii	"reg8\000"
 3691      00
 3692              	.LASF1:
 3693 0478 756E7369 		.ascii	"unsigned char\000"
 3693      676E6564 
 3693      20636861 
 3693      7200
 3694              	.LASF101:
 3695 0486 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBFS_1.c\000"
 3695      72617465 
 3695      645F536F 
 3695      75726365 
 3695      5C50536F 
 3696              	.LASF2:
 3697 04a7 73686F72 		.ascii	"short int\000"
 3697      7420696E 
 3697      7400
 3698              	.LASF82:
 3699 04b1 55534246 		.ascii	"USBFS_1_device\000"
 3699      535F315F 
 3699      64657669 
 3699      636500
 3700              	.LASF70:
 3701 04c0 55534246 		.ascii	"USBFS_1_Force\000"
 3701      535F315F 
 3701      466F7263 
 3701      6500
 3702              	.LASF39:
 3703 04ce 72775261 		.ascii	"rwRa\000"
 3703      00
 3704              	.LASF100:
 3705 04d3 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3705      43313120 
 3705      352E342E 
 3705      31203230 
 3705      31363036 
 3706 0506 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3706      20726576 
 3706      6973696F 
 3706      6E203233 
 3706      37373135 
 3707 0539 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3707      66756E63 
 3707      74696F6E 
 3707      2D736563 
 3707      74696F6E 
 3708              	.LASF38:
 3709 0561 72775761 		.ascii	"rwWaMsb\000"
 3709      4D736200 
 3710              	.LASF71:
 3711 0569 62537461 		.ascii	"bState\000"
 3711      746500
 3712              	.LASF85:
 3713 0570 55534246 		.ascii	"USBFS_1_configurationChanged\000"
 3713      535F315F 
 3713      636F6E66 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 115


 3713      69677572 
 3713      6174696F 
 3714              	.LASF48:
 3715 058d 55534246 		.ascii	"USBFS_1_InitComponent\000"
 3715      535F315F 
 3715      496E6974 
 3715      436F6D70 
 3715      6F6E656E 
 3716              	.LASF47:
 3717 05a3 55534246 		.ascii	"USBFS_1_Init\000"
 3717      535F315F 
 3717      496E6974 
 3717      00
 3718              	.LASF14:
 3719 05b0 63686172 		.ascii	"char\000"
 3719      00
 3720              	.LASF50:
 3721 05b5 6D6F6465 		.ascii	"mode\000"
 3721      00
 3722              	.LASF26:
 3723 05ba 62756666 		.ascii	"bufferSize\000"
 3723      65725369 
 3723      7A6500
 3724              	.LASF25:
 3725 05c5 62756666 		.ascii	"buffOffset\000"
 3725      4F666673 
 3725      657400
 3726              	.LASF59:
 3727 05d0 696E7465 		.ascii	"interfaceNumber\000"
 3727      72666163 
 3727      654E756D 
 3727      62657200 
 3728              	.LASF83:
 3729 05e0 55534246 		.ascii	"USBFS_1_transferState\000"
 3729      535F315F 
 3729      7472616E 
 3729      73666572 
 3729      53746174 
 3730              	.LASF99:
 3731 05f6 55534246 		.ascii	"USBFS_1_Dp_ClearInterrupt\000"
 3731      535F315F 
 3731      44705F43 
 3731      6C656172 
 3731      496E7465 
 3732              	.LASF75:
 3733 0610 55534246 		.ascii	"USBFS_1_RWUEnabled\000"
 3733      535F315F 
 3733      52575545 
 3733      6E61626C 
 3733      656400
 3734              	.LASF90:
 3735 0623 55534246 		.ascii	"USBFS_1_deviceAddress\000"
 3735      535F315F 
 3735      64657669 
 3735      63654164 
 3735      64726573 
 3736              	.LASF66:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccapzahD.s 			page 116


 3737 0639 6C656E67 		.ascii	"length\000"
 3737      746800
 3738              	.LASF51:
 3739 0640 656E6162 		.ascii	"enableInterrupts\000"
 3739      6C65496E 
 3739      74657272 
 3739      75707473 
 3739      00
 3740              	.LASF41:
 3741 0651 72774472 		.ascii	"rwDr\000"
 3741      00
 3742              	.LASF79:
 3743 0656 55534246 		.ascii	"USBFS_1_EnableSofInt\000"
 3743      535F315F 
 3743      456E6162 
 3743      6C65536F 
 3743      66496E74 
 3744              	.LASF34:
 3745 066b 6570496E 		.ascii	"epIntEn\000"
 3745      74456E00 
 3746              	.LASF92:
 3747 0673 55534246 		.ascii	"USBFS_1_lastPacketSize\000"
 3747      535F315F 
 3747      6C617374 
 3747      5061636B 
 3747      65745369 
 3748              	.LASF58:
 3749 068a 55534246 		.ascii	"USBFS_1_GetInterfaceSetting\000"
 3749      535F315F 
 3749      47657449 
 3749      6E746572 
 3749      66616365 
 3750              	.LASF53:
 3751 06a6 55534246 		.ascii	"USBFS_1_ReInitComponent\000"
 3751      535F315F 
 3751      5265496E 
 3751      6974436F 
 3751      6D706F6E 
 3752              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
